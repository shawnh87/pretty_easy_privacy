{"version":3,"sources":["components/shared/BrowserResult.js","components/shared/Passphrase.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/icons/Help.js","components/key_gen/Result.js","components/key_gen/KeyGen.js"],"names":["useStyles","makeStyles","theme","result","maxHeight","maxWidth","overflowY","button","margin","copy","textAlign","Display","props","classes","useState","open","vertical","horizontal","openSnack","setOpenSnack","inputId","id","keyIn","val","className","title","aria-label","onClick","anchorOrigin","onClose","message","key","pwInput","width","pw","color","marginTop","buttonProgress","position","top","left","marginLeft","PassPhraseConfirm","confirmPassPhrase","setConfirmPassPhrase","status","label","confirmError","handleClose","aria-labelledby","required","autoFocus","error","onChange","e","target","value","type","fullWidth","handleConfirm","buttonText","PassPhrase","passPhrase","passPhraseState","passPhraseMissingError","errors","setErrors","setOpen","score","resp","strength","setStrength","strengthResp","0","1","2","3","4","container","spacing","item","helperText","zxcvbn","class","variant","length","pt","disabled","loading","preventDefault","err","handleSubmit","mainButtonText","size","modalButtonText","MenuItem","React","ref","tabIndex","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","undefined","ListItem","_extends","dense","clsx","root","gutters","withStyles","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","overflow","whiteSpace","breakpoints","up","body2","name","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","main","paddingLeft","paddingRight","Result","openPub","setOpenPub","openPriv","setOpenPriv","dlKey","element","document","file","Blob","href","URL","createObjectURL","download","click","remove","encKeys","Box","Typography","gutterBottom","pb","Button","data-testid","privateKeyArmored","mb","publicKeyArmored","form","down","formField","dropSelect","formControl","KeyGen","setKey","bits","setBits","email","keyFields","setKeyFields","setLoading","emailNull","emailFormat","emMessage","handleCreate","passKey","a","generateKey","userIds","rsaBits","passphrase","handleFormSubmit","nameNull","validFormat","test","onSubmit","TextField","Grid","FormControl","fileTypeErr","InputLabel","Select","labelId","Tooltip","IconButton","disableFocusRipple","disableRipple","mt"],"mappings":"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","file":"static/js/8.d6cf79d9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport { Tooltip, Paper, Snackbar, IconButton } from \"@material-ui/core\";\nimport { copy } from \"../utils/utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  result: {\n    maxHeight: \"400px\",\n    maxWidth: \"400px\",\n    overflowY: \"scroll\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n  copy: {\n    textAlign: \"right\",\n    maxWidth: \"400px\",\n  },\n}));\n\nconst Display = (props) => {\n  const classes = useStyles();\n  const [openSnack, setOpenSnack] = useState({\n    open: false,\n    vertical: \"bottom\",\n    horizontal: \"left\",\n  });\n\n  const { vertical, horizontal, open } = openSnack;\n\n  let inputId = props.id;\n  let keyIn = props.val;\n\n  const handleCopy = () => {\n    setOpenSnack({ ...openSnack, open: true });\n    copy(inputId);\n  };\n\n  const handleClose = () => {\n    setOpenSnack({ ...openSnack, open: false });\n  };\n  return (\n    <>\n      <div className={classes.copy}>\n        <Tooltip title=\"Copy\">\n          <IconButton aria-label=\"Copy\" onClick={handleCopy}>\n            <FileCopyIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <Paper className={classes.result}>\n        <pre id={inputId}>{keyIn}</pre>\n      </Paper>\n\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        onClose={handleClose}\n        message=\"Copied to clipboard\"\n        key={vertical + horizontal}\n      />\n    </>\n  );\n};\n\nexport default Display;\n","import React, { useState } from \"react\";\nimport zxcvbn from \"zxcvbn\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  Box,\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  pwInput: {\n    width: \"225px\",\n  },\n  pw: {\n    color: \"#777fa7\",\n    marginTop: \"18px\",\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst PassPhraseConfirm = (props) => {\n  const [confirmPassPhrase, setConfirmPassPhrase] = useState();\n\n  const passPhraseConfirmBuffer = (e) => {\n    setConfirmPassPhrase(e.target.value);\n  };\n\n  const status = props.open;\n\n  const label = props.confirmError\n    ? \"Please Try Again\"\n    : \"Passphrase Confirmation\";\n\n  return (\n    <div>\n      <Dialog\n        open={status}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Passphrase Confirmation\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please re enter your passphrase below:\n          </DialogContentText>\n          <TextField\n            required\n            autoFocus\n            error={props.confirmError}\n            onChange={passPhraseConfirmBuffer}\n            margin=\"dense\"\n            id=\"name\"\n            label={label}\n            type=\"password\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={() => props.handleConfirm(confirmPassPhrase)}\n            color=\"primary\"\n          >\n            {props.buttonText}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst PassPhrase = (props) => {\n  const classes = useStyles();\n\n  const [passPhrase, passPhraseState] = useState(\"\");\n  const [errors, setErrors] = useState({\n    confirmError: false,\n    passPhraseMissingError: false,\n  });\n  const [open, setOpen] = useState(false);\n  const [strength, setStrength] = useState({ score: null, resp: null });\n\n  let strengthResp = {\n    0: \"Very Bad 👎\",\n    1: \"Bad 👎\",\n    2: \"Weak 😐\",\n    3: \"Good 🙂\",\n    4: \"Strong 🔥🔥🔥\",\n  };\n\n  const handlePassPhrase = (e) => {\n    passPhraseState(e.target.value);\n    const result = zxcvbn(e.target.value);\n    setStrength({\n      score: result.score === 0 ? \"1\" : result.score,\n      resp: strengthResp[result.score],\n    });\n  };\n\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors({ confirmError: false, passPhraseMissingError: false });\n    const err = props.handleSubmit(e);\n\n    if (!passPhrase) {\n      setErrors({ ...errors, passPhraseMissingError: true });\n    }\n    if (!passPhrase || err) {\n      return;\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const handleConfirm = (confirmPassPhrase) => {\n    if (confirmPassPhrase === passPhrase) {\n      setOpen(false);\n      props.handleConfirm(passPhrase);\n    } else {\n      setErrors({ ...errors, confirmError: true });\n    }\n  };\n\n  return (\n    <>\n      <Box>\n        <Grid container spacing={1}>\n          <Grid item>\n            <TextField\n              required\n              helperText={\n                errors.passPhraseMissingError && \"PassPhrase Required!\"\n              }\n              onChange={handlePassPhrase}\n              className={props.class}\n              error={errors.passPhraseMissingError}\n              id=\"pw-in\"\n              type=\"password\"\n              label={\"Passphrase\"}\n              variant=\"outlined\"\n            />\n          </Grid>\n          {passPhrase.length > 0 && (\n            <Grid className={classes.pw} item>\n              {strength.resp}\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n\n      <Box pt={3}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color={\"primary\"}\n          disabled={props.loading}\n          onClick={handleSubmit}\n        >\n          {props.mainButtonText}\n          {props.loading && (\n            <CircularProgress\n              size={24}\n              color=\"primary\"\n              className={classes.buttonProgress}\n            />\n          )}\n        </Button>\n      </Box>\n\n      <PassPhraseConfirm\n        open={open}\n        buttonText={props.modalButtonText}\n        handleClose={() => setOpen(false)}\n        handleConfirm={handleConfirm}\n        confirmError={errors.confirmError}\n      />\n    </>\n  );\n};\n\nexport default PassPhrase;\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\"\n}), 'Help');\n\nexports.default = _default;","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Display from \"../shared/BrowserResult\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { RestoreOutlined } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    marginLeft: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n  button: {\n    margin: \"5px\",\n  },\n}));\n\nconst Result = (props) => {\n  const classes = useStyles();\n\n  const [openPub, setOpenPub] = useState(false);\n  const [openPriv, setOpenPriv] = useState(false);\n\n  const dlKey = (key, name) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([key], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = name + \".txt\";\n    element.click();\n    element.remove();\n  };\n\n  let encKeys = props.encKeys;\n\n  return (\n    <div className={classes.main}>\n      <Box>\n        <Typography variant=\"h5\" gutterBottom>\n          <b> Key Results </b>\n        </Typography>\n        <br />\n        <br />\n\n        <Typography color=\"primary\" variant=\"h6\" gutterBottom>\n          Private Key\n        </Typography>\n\n        <Box pb={2}>\n          <Typography color=\"error\">\n            <b>The private key is private. NEVER SHARE YOUR PRIVATE KEY</b>\n          </Typography>\n          <p>\n            Use the private key for decrypting data encrypted with your public\n            key.\n          </p>\n        </Box>\n        <Box pb={4}>\n          <Button\n            onClick={() => setOpenPriv(!openPriv)}\n            variant=\"outlined\"\n            color={\"primary\"}\n            data-testid=\"privateKey\"\n            className={classes.button}\n          >\n            {openPriv ? \"Hide\" : \"In Browser\"}\n          </Button>\n          <Button\n            onClick={() => dlKey(encKeys.privateKeyArmored, \"private_key\")}\n            variant=\"outlined\"\n            color={\"primary\"}\n            className={classes.button}\n          >\n            Download\n          </Button>\n\n          {openPriv && (\n            <Display val={encKeys.privateKeyArmored} id=\"privateKey\" />\n          )}\n        </Box>\n        <Typography color=\"secondary\" variant=\"h6\" gutterBottom>\n          Public Key\n        </Typography>\n\n        <Box pb={2}>\n          <p>The public key is public. You could share it with anyone.</p>\n          <p>\n            The public key encrypts files that only your private key can\n            decrypt.\n          </p>\n        </Box>\n        <Box mb={2}>\n          <Button\n            onClick={() => setOpenPub(!openPub)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            data-testid=\"publicKey\"\n            className={classes.button}\n          >\n            {openPub ? \"Hide\" : \"In Browser\"}\n          </Button>\n          <Button\n            onClick={() => dlKey(encKeys.publicKeyArmored, \"public_key\")}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            Download\n          </Button>\n\n          {openPub && <Display val={encKeys.publicKeyArmored} id=\"publicKey\" />}\n        </Box>\n      </Box>\n    </div>\n  );\n};\nexport default Result;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PassPhrase from \"../shared/Passphrase\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport Result from './Result'\nimport {\n  Box,\n  Typography,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  IconButton,\n  Tooltip,\n  Grid,\n} from \"@material-ui/core\";\nimport { generateKey } from \"openpgp\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    maxWidth: \"350px\",\n    [theme.breakpoints.down(600 + theme.spacing(3) * 2)]: {\n      maxWidth: \"225px\",\n    },\n  },\n  formField: {\n    width: \"100%\",\n  },\n  pwInput: {\n    maxWidth: \"225px\",\n  },\n  dropSelect: {\n    maxWidth: \"241px\",\n    [theme.breakpoints.down(600 + theme.spacing(3) * 2)]: {\n      maxWidth: \"170px\",\n    },\n  },\n  formControl: { width: \"100%\" },\n  \n  main: {\n\n    marginLeft: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n\n}));\n\nconst KeyGen = () => {\n  const classes = useStyles();\n  const [key, setKey] = useState(undefined);\n  const [bits, setBits] = useState(2048);\n  const [keyFields, setKeyFields] = useState({ name: \"\", email: \"\", pw: \"\" });\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({\n    name: false,\n    emailNull: false,\n    emailFormat: false,\n    emMessage: false,\n  });\n\n  const handleCreate = async (passKey) => {\n    setLoading(true);\n    const key = await generateKey({\n      userIds: [{ name: keyFields.name, email: keyFields.email }],\n      rsaBits: bits, // RSA key size\n      passphrase: passKey,\n    });\n    setKey(key);\n    setLoading(false);\n  };\n\n  let handleEmailValid = (email) => {\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (re.test(email)) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleName = (e) => {\n    setKeyFields({ ...keyFields, name: e.target.value });\n  };\n  const handleEmail = (e) => {\n    setKeyFields({ ...keyFields, email: e.target.value });\n  };\n\n  const handleFormSubmit = () => {\n    let nameNull,\n      emailNull,\n      validFormat,\n      emMessage = false;\n    if (keyFields.name === \"\") {\n      nameNull = true;\n    }\n    if (keyFields.email === \"\") {\n      emailNull = true;\n      emMessage = \"Email Required!\";\n    } else {\n      validFormat = handleEmailValid(keyFields.email);\n      emMessage = \"Invalid Email Format!\";\n    }\n    setErrors({\n      ...errors,\n      name: nameNull,\n      emailNull: emailNull,\n      emailFormat: validFormat,\n      emMessage: emMessage,\n    });\n    if (validFormat || emailNull || nameNull) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleConfirm = (key) => {\n    handleCreate(key);\n  };\n\n  return (\n    <Box>\n      {typeof key == \"undefined\" ? (\n        <>\n          <form onSubmit={(e) => handleFormSubmit(e)}>\n            <div className={classes.main}>\n              <Typography variant=\"h5\" gutterBottom>\n                <b> RSA Key Generation</b>\n              </Typography>\n              <Box pb={4} pt={2}>\n                Creating Keys is simple. Just fill out this form.\n                <br />\n                No worries if you don't want to use your name or email address.\n                Just make one up!\n                <br />\n                <br />\n                <b>Just don't lose you Private Key and Passphrase!</b>\n              </Box>\n              <div className={classes.form}>\n                <Box pb={4}>\n                  <TextField\n                    required\n                    className={classes.formField}\n                    id=\"outlined-required\"\n                    label=\"Name\"\n                    onChange={handleName}\n                    error={errors.name}\n                    helperText={errors.name && \"Text Required!\"}\n                    variant=\"outlined\"\n                  />\n                </Box>\n\n                <Box pb={4}>\n                  {\" \"}\n                  <TextField\n                    required\n                    className={classes.formField}\n                    id=\"outlined-disabled\"\n                    label=\"email\"\n                    onChange={handleEmail}\n                    error={errors.emailNull || errors.emailFormat}\n                    helperText={\n                      (errors.emailNull || errors.emailFormat) &&\n                      errors.emMessage\n                    }\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box>\n                  <Grid container spacing={2}>\n                    <Grid item container className={classes.dropSelect}>\n                      <FormControl\n                        variant=\"outlined\"\n                        className={classes.formControl}\n                        error={errors.fileTypeErr ? true : false}\n                      >\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\n                          RSA Key Size\n                        </InputLabel>\n                        <Select\n                          required\n                          labelId=\"demo-simple-select-outlined-label\"\n                          id=\"demo-simple-select-outlined\"\n                          value={bits}\n                          onChange={(e) => setBits(e.target.value)}\n                          label=\"Text FIle Type\"\n                        >\n                          <MenuItem value={4096}>4096</MenuItem>\n                          <MenuItem value={3072}>3072</MenuItem>\n                          <MenuItem value={2048}>2048</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item>\n                      <div>\n                        <Tooltip\n                          title={`This controls key length. The larger the value, the stronger the encryption. The default is pretty good.`}\n                        >\n                          <IconButton\n                            disableFocusRipple={true}\n                            disableRipple={true}\n                          >\n                            <HelpIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </Box>\n                <Box mt={3}>\n                  <PassPhrase\n                    class={classes.pwInput}\n                    loading={loading}\n                    mainButtonText={\"Generate\"}\n                    modalButtonText={\"Submit\"}\n                    handleSubmit={handleFormSubmit}\n                    handleConfirm={handleConfirm}\n                  />\n                </Box>\n              </div>\n            </div>\n          </form>\n        </>\n      ) : (\n        <Result encKeys={key} />\n      )}\n    </Box>\n  );\n};\n\nexport default KeyGen;\n"],"sourceRoot":""}