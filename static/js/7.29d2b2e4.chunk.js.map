{"version":3,"sources":["components/utils/utils.js","components/utils/BrowserResult.js","components/utils/config.js","components/utils/InFile.js","components/utils/EncTypeTab.js","components/utils/KeyInput.js","components/decrypt/DecResult.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","components/decrypt/DecryptForm.js","components/decrypt/Decrypt.js"],"names":["FileType","require","mimes","txt","csv","html","css","extSelect","decrypted","decType","a","fileType","fromBuffer","bufferType","ext","decFormat","show","severity","message","decGeneric","decPW","decSuccess","encSuccess","encError","resetAlert","keyError","privKeyPassError","useStyles","makeStyles","theme","result","maxHeight","maxWidth","overflowY","button","margin","copy","marginLeft","Display","props","classes","useState","open","vertical","horizontal","openSnack","setOpenSnack","inputId","id","keyIn","val","className","title","aria-label","onClick","copyText","document","getElementById","textContent","textArea","createElement","setAttribute","body","append","select","setSelectionRange","execCommand","remove","anchorOrigin","onClose","key","snackLocation","hidden","visibility","width","buttonProgress","position","top","left","marginTop","helpText","spacing","InFile","selectedFile","fileMetaData","name","handleDelete","click","variant","color","disabled","uploading","size","label","type","onChange","readFile","formByteInputError","error","errMessage","AntTabs","withStyles","root","borderBottom","indicator","backgroundColor","Tabs","AntTab","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","fontFamily","join","opacity","fontWeightMedium","selected","disableRipple","flexGrow","padding","demo1","palette","background","paper","demo2","EncTypeTab","React","value","setValue","event","newValue","handleType","openpgp","main","breakpoints","up","KeyInput","console","log","inputType","privateKey","encrypt","resetErr","err","alert","setAlert","byteKey","setByteKey","inputTypeSelect","setInputTypeSelect","formTextInputError","setFormTextInputError","setFormByteInputError","setFileMetaData","passPhraseError","setPassPhraseError","passPhrase","setPassPhrase","setUploading","handleClose","reason","helperText","textBox","fullWidth","multiline","rows","e","target","buttonLabel","undefined","file","files","reader","FileReader","readAsText","onloadend","replace","onerror","handleSubmit","preventDefault","handlePrivateKey","outkey","handlePublicKey","handleKeyEncrypt","readArmored","rsaKey","keys","decrypt","output","autoHideDuration","gutterBottom","component","row","defaultValue","control","labelPlacement","mt","pt","required","loading","Result","outbound","openEnc","setOpenEnc","disableCopy","length","Box","Typography","mb","pr","Button","decryptedVal","element","Blob","href","URL","createObjectURL","download","split","outputHandler","reset","MenuItem","ref","tabIndex","_props$component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","tabIndexProp","other","_objectWithoutProperties","ListItem","_extends","dense","clsx","gutters","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","overflow","whiteSpace","body2","dropSelect","paddingLeft","paddingRight","DecryptForm","resetErrors","passPhraseMissingError","fileTypeErr","fileExtErr","textInput","textInputState","errors","setErrors","passPhraseState","setFileType","fileExt","setFileExt","TextField","metaData","handleFormSubmit","byteErr","textErr","pwErr","totalErr","encType","handleDecrypt","encryptionKey","aes","rsa","byteDecrypt","onSubmit","pb","FormControl","RadioGroup","FormControlLabel","Radio","formControl","InputLabel","Select","labelId","extIn","FormHelperText","CircularProgress","loader","keyErr","header","display","Decrypt","success","setSuccess","setLoader","setEncType","utils","setOutBound","encIn","format","privateKeys","passwords","data","outFileType","form","Snackbar","Alert","p"],"mappings":"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","file":"static/js/7.29d2b2e4.chunk.js","sourcesContent":["const FileType = require(\"file-type\");\n\nexport const mimes = {\n  txt: \"text/plain\",\n  csv: \"text/csv\",\n  html: \"text/html\",\n  css: \"text/css\",\n};\n\nexport const extSelect = async (decrypted, decType) => {\n  let bufferType\n  if (decType.fileType==='byte'){\n    bufferType =  await FileType.fromBuffer(decrypted);\n  }\n\n  if (bufferType) {\n    return bufferType.ext;\n  } else if (decType.fileType === \"text\") {\n    return decType.ext;\n  } else {\n    return \"txt\";\n  }\n};\n\nexport const decFormat = {\n  show: true,\n  severity: \"error\",\n  message:\n    \"Looks like there is a format issue with your Encrypted text. We recommend using the original text file supplied!\",\n};\n\nexport const decGeneric = {\n  show: true,\n  severity: \"error\",\n  message: \"Something went wrong! Please try again.\",\n};\n\nexport const decPW = {\n  show: true,\n  severity: \"error\",\n  message: \"Passphrase is incorrect!\",\n};\n\nexport const decSuccess = {\n  show: true,\n  severity: \"success\",\n  message: \"Successfully decrypted!\",\n};\n\nexport const encSuccess = {\n  show: true,\n  message: \"Encryption Complete\",\n  severity: \"success\",\n}\n\nexport const encError = {\n  show: true,\n  message: \"Something went wrong! Please try again.\",\n  severity: \"error\",\n};\n\nexport const resetAlert = {\n  show: false,\n  message: \"\",\n  severity: \"\",\n};\n\n\nexport const keyError = {\n  show: true,\n  message: \"Invalid RSA Key! Please try again.\",\n  severity: \"error\",\n};\n\nexport const privKeyPassError = {\n  show: true,\n  message: \"Incorrect Passphrase! Please try again.\",\n  severity: \"error\",\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  result: {\n    maxHeight: \"100px\",\n    maxWidth: \"350px\",\n    overflowY: \"scroll\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n  copy: {\n    marginLeft: \"318px\",\n  },\n}));\n\n  \n  const Display = (props) => {\n    const classes = useStyles();\n    const [openSnack, setOpenSnack] = useState({\n      open: false,\n      vertical: \"bottom\",\n      horizontal: \"left\",\n    });\n  \n    const { vertical, horizontal, open } = openSnack;\n  \n    let inputId = props.id;\n    let keyIn = props.val;\n  \n    const handleCopy = () => {\n      setOpenSnack({ ...openSnack, open: true });\n      let copyText = document.getElementById(inputId).textContent;\n      const textArea = document.createElement(\"textarea\");\n      textArea.setAttribute(\"id\", \"copy\");\n      textArea.textContent = copyText;\n      document.body.append(textArea);\n      textArea.select();\n      textArea.setSelectionRange(0, 99999); /*For mobile devices*/\n  \n      /* Copy the text inside the text field */\n      document.execCommand(\"copy\");\n      textArea.remove();\n    };\n  \n    const handleClose = () => {\n      setOpenSnack({ ...openSnack, open: false });\n    };\n    return (\n      <>\n        <div className={classes.copy}>\n          <Tooltip title=\"Copy\">\n            <IconButton aria-label=\"Copy\" onClick={handleCopy}>\n              <FileCopyIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <Paper className={classes.result}>\n            <pre id={inputId}>{keyIn}</pre>\n        </Paper>\n  \n        <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={open}\n          onClose={handleClose}\n          message=\"Copied to clipboard\"\n          key={vertical + horizontal}\n        />\n      </>\n    );\n  };\n  \n  export default Display;","export const snackLocation = { vertical: \"bottom\", horizontal: \"left\" }\n\nexport const menuOptions = {1:'ENCRYPT', 2:'DECRYPT', 3: 'KEY CREATION', 4: 'ABOUT'}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport DeleteOutlineSharpIcon from \"@material-ui/icons/DeleteOutlineSharp\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  hidden: {\n    visibility: \"hidden\",\n    width: \"1px\",\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  helpText: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst InFile = (props) => {\n  const classes = useStyles();\n\n  const selectedFile = props.fileMetaData && (\n    <div>\n      <FormLabel>{`Selected: ${props.fileMetaData.name}`}</FormLabel>\n      <IconButton onClick={props.handleDelete}>\n        <DeleteOutlineSharpIcon />\n      </IconButton>\n    </div>\n  );\n  return (\n    <Box>\n      <Button\n        onClick={() => document.getElementById(\"inp\").click()}\n        variant=\"outlined\"\n        color=\"secondary\"\n        disabled={props.uploading}\n      >\n        {props.uploading &&\n        <CircularProgress\n          size={24}\n          color=\"secondary\"\n          className={classes.buttonProgress}\n        />}\n        {props.label}\n      </Button>\n\n      <input\n        id=\"inp\"\n        type=\"file\"\n        className={classes.hidden}\n        onChange={props.readFile}\n      />\n      {selectedFile}\n      {props.formByteInputError && (\n        <div className={classes.helpText}>\n          <FormHelperText error={true}>\n            {props.errMessage ? props.errMessage : \"File Required\"}\n          </FormHelperText>\n        </div>\n      )}\n    </Box>\n  );\n};\n\nexport default InFile;\n","import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst AntTabs = withStyles({\n  root: {\n    borderBottom: \"1px solid #e8e8e8\",\n    // width: '700px'\n  },\n  indicator: {\n    backgroundColor: \"#1de9b6\",\n  },\n})(Tabs);\n\nconst AntTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    minWidth: 72,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing(4),\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:hover\": {\n      color: \"#4aedc4\",\n      opacity: 1,\n    },\n    \"&$selected\": {\n      color: \"#1de9b6\",\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    \"&:focus\": {\n      color: \"#1de9b6\",\n    },\n  },\n  selected: {},\n}))((props) => <Tab disableRipple {...props} />);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    // maxWidth:'600px'\n    // marginRight:'50%',\n  },\n  padding: {\n    padding: theme.spacing(2),\n  },\n  demo1: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  demo2: {\n    backgroundColor: \"#2e1534\",\n  },\n}));\n\nexport default function EncTypeTab(props) {\n  //lift up to reset on load of new tab\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.handleType(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\n        <AntTab label=\"Passhrase (Symmetric)\" />\n        <AntTab label=\"Key Pair (Asymmetric)\" />\n      </AntTabs>\n      <Typography className={classes.padding} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { resetAlert, keyError, privKeyPassError } from \"../utils/utils\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { snackLocation } from \"../utils/config\";\nimport InFile from \"../utils/InFile\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst openpgp = require(\"openpgp\");\n\nconst useStyles = makeStyles((theme) => ({\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n\n  main: {\n    backgroundColor: \"#FAFAFA\",\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      padding: theme.spacing(2),\n    },\n  },\n}));\n\nconst KeyInput = (props) => {\n  const classes = useStyles();\n  console.log(\"mount\");\n\n  let privateKey = props.privateKey;\n  let encrypt = props.encrypt;\n\n  let resetErr = { err: false, key: false, message: false };\n\n  const [alert, setAlert] = useState(resetAlert);\n  const [byteKey, setByteKey] = useState();\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"byte\");\n  const [formTextInputError, setFormTextInputError] = useState(resetErr);\n  const [formByteInputError, setFormByteInputError] = useState(resetErr);\n  const [fileMetaData, setFileMetaData] = useState();\n  const [passPhraseError, setPassPhraseError] = useState(false);\n  const [passPhrase, setPassPhrase] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const handlePassPhrase = (e) => setPassPhrase(e.target.value);\n\n  const handleDelete = () => {\n    setByteKey(undefined);\n    setFileMetaData(undefined);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlert(resetAlert);\n  };\n\n  const handleTextInput = (e) => {\n    setByteKey(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setInputTypeSelect(e.target.value);\n  };\n\n  const readKey = (e) => {\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    setUploading(true);\n\n    reader.readAsText(file);\n\n    reader.onloadend = () => {\n      setFileMetaData({ name: file.name, type: file.type.replace(\"/\", \"_\") });\n      setByteKey(reader.result);\n      setUploading(false);\n    };\n    reader.onerror = () => {\n      setByteKey(undefined);\n      setUploading(false);\n    };\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={formTextInputError.err && formTextInputError.message}\n        className={classes.textBox}\n        fullWidth={true}\n        error={formTextInputError.err}\n        id=\"outlined-multiline-static\"\n        label={\"RSA Key Input\"}\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        formByteInputError={formByteInputError.err}\n        errMessage={formByteInputError.err.message}\n        fileMetaData={fileMetaData}\n        label=\"Key Browse\"\n        buttonLabel={\"key browse\"}\n        handleDelete={handleDelete}\n        readFile={readKey}\n        uploading={uploading}\n      />\n    );\n  }\n  console.log(formByteInputError);\n\n  const removeErrors = () => {\n    setAlert(resetAlert);\n    setFormTextInputError(resetErr);\n    setFormByteInputError(resetErr);\n    setPassPhraseError(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    removeErrors();\n\n    let err = false,\n      outkey;\n\n    if (passPhrase === \"\") {\n      setPassPhraseError(true);\n      err = true;\n    }\n\n    if (!byteKey || byteKey === \"\") {\n      if (inputTypeSelect === \"text\") {\n        setFormTextInputError({\n          ...formTextInputError,\n          err: true,\n          message: \"Key Text Required\",\n        });\n      } else {\n        setFormByteInputError({\n          ...formByteInputError,\n          err: true,\n          message: \"Key File Required\",\n        });\n      }\n      err = true;\n    } else {\n      privateKey\n        ? ({ key: outkey, error: err } = await handlePrivateKey(\n            byteKey,\n            passPhrase\n          ))\n        : ({ key: outkey, error: err } = await handlePublicKey(byteKey));\n    }\n\n    //continue to snag error in other input\n\n    props.handleKeyEncrypt(outkey, err);\n  };\n\n  const handlePublicKey = async (byteKey) => {\n    let rsaKey = (await openpgp.key.readArmored(byteKey)).keys[0];\n    if (!rsaKey) {\n      setAlert(keyError);\n      return { key: undefined, error: true };\n    } else {\n      return { key: rsaKey, error: false };\n    }\n  };\n\n  const handlePrivateKey = async (byteKey, passPhrase) => {\n    let output;\n    try {\n      const {\n        keys: [privateKey],\n      } = await openpgp.key.readArmored(byteKey);\n      await privateKey.decrypt(passPhrase);\n      output = [privateKey];\n      return { key: output, error: false };\n    } catch (e) {\n      e.message === \"Incorrect key passphrase\" && setAlert(privKeyPassError);\n      e.message === \"privateKey is undefined\" && setAlert(keyError);\n      return { key: undefined, error: true };\n    }\n  };\n\n  return (\n    <div className={classes.main}>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n      <Box>\n        <Box>\n          <Typography color=\"textPrimary\" variant=\"h6\" gutterBottom>\n            <b>Key Input</b>\n          </Typography>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              value={inputTypeSelect}\n              defaultValue=\"top\"\n              onChange={handleInputType}\n            >\n              <FormControlLabel\n                value=\"byte\"\n                control={<Radio color=\"secondary\" />}\n                label=\"Import from file\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                value=\"text\"\n                control={<Radio color=\"primary\" />}\n                label=\"Paste in text\"\n                labelPlacement=\"end\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box>\n          <FormLabel component=\"legend\"></FormLabel>\n          <Box mt={3}>{inputType}</Box>\n        </Box>\n        {privateKey && (\n          <Box pt={3}>\n            <TextField\n              required\n              helperText={passPhraseError && \"Passphrase Required!\"}\n              onChange={handlePassPhrase}\n              error={passPhraseError}\n              id=\"pw-in private key\"\n              type=\"password\"\n              label={\"Private Key Passphrase\"}\n              variant=\"outlined\"\n            />\n          </Box>\n        )}\n        <Box pt={3}>\n          <Button\n            variant=\"contained\"\n            color={\"primary\"}\n            onClick={handleSubmit}\n            disabled={props.loading}\n          >\n            {encrypt ? \"Encrypt!\" : \"Decrypt!\"}\n            {props.loading && (\n              <CircularProgress\n                size={24}\n                color=\"primary\"\n                className={classes.buttonProgress}\n              />\n            )}\n          </Button>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default KeyInput;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Display from \"../utils/BrowserResult\";\nimport { mimes } from \"../utils/utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    padding: theme.spacing(2),\n\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      padding: theme.spacing(2),\n    },\n  },\n  button: {\n    margin: \"5px\",\n  },\n}));\n\nconst Result = (props) => {\n  const classes = useStyles();\n\n  let outbound = props.outbound;\n\n  const [openEnc, setOpenEnc] = useState(false);\n\n  let disableCopy =\n    outbound.outbound.length > 10000 || outbound.type === \"byte\";\n\n  const outputHandler = (decryptedVal) => {\n    const element = document.createElement(\"a\");\n    let file;\n    if (outbound.type === \"byte\") {\n      file = new Blob([decryptedVal.outbound]);\n    } else {\n      file = new Blob([decryptedVal.outbound], {\n        type: mimes[decryptedVal.ext],\n      });\n    }\n    element.href = URL.createObjectURL(file);\n    element.download =\n      \"pep_output_\" +\n      element.href.split(\"/\")[3].split(\"-\")[0] +\n      \".\" +\n      decryptedVal.ext;\n    element.click();\n    element.remove();\n  };\n\n  return (\n    <div className={classes.main}>\n      <Box pt={2}>\n        <Typography variant=\"h6\" gutterBottom>\n          Decrypted Data:\n        </Typography>\n\n        <Box mb={2} pr={4}>\n          <Button\n            disabled={disableCopy}\n            onClick={() => setOpenEnc(!openEnc)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            {!openEnc ? \"In Browser\" : \"Hide\"}\n          </Button>\n          <Button\n            onClick={() => outputHandler(outbound)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            Download\n          </Button>\n          {openEnc && <Display val={outbound.outbound} id=\"encryptedResult\" />}\n        </Box>\n        <Box>\n          <Button\n            onClick={props.reset}\n            variant=\"contained\"\n            className={classes.button}\n            color={\"primary\"}\n          >\n            {\" \"}\n            New Decryption{\" \"}\n          </Button>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default Result;\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport KeyInput from \"../utils/KeyInput\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InFile from \"../utils/InFile\";\n\nconst useStyles = makeStyles((theme) => ({\n  textBox: {\n    maxWidth: \"700px\",\n  },\n\n  dropSelect: {\n    width: \"225px\",\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  main: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n}));\n\nconst DecryptForm = (props) => {\n  const classes = useStyles();\n\n  let resetErrors = {\n    formTextInputError: false,\n    formByteInputError: false,\n    passPhraseMissingError: false,\n    fileTypeErr: false,\n    fileExtErr: false,\n  };\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"byte\");\n  const [textInput, textInputState] = useState(\"\");\n  const [errors, setErrors] = useState(resetErrors);\n  const [passPhrase, passPhraseState] = useState(\"\");\n  const [fileType, setFileType] = useState(\"\");\n  const [fileExt, setFileExt] = useState(\"\");\n  const [fileMetaData, setFileMetaData] = useState();\n  const [uploading, setUploading] = useState(false);\n\n  const handlePassPhrase = (e) => {\n    passPhraseState(e.target.value);\n  };\n\n  const handleDelete = () => {\n    textInputState(undefined);\n    setFileMetaData(undefined);\n  };\n\n  const handleFileType = (e) => {\n    let extIn = e.target.value;\n    setFileExt(extIn);\n    if (extIn === \"txt\" || extIn === \"csv\") {\n      setFileType(\"text\");\n    } else {\n      setFileType(\"byte\");\n    }\n  };\n\n  const readFile = (e) => {\n    var file = e.target.files[0];\n    if (!file) return;\n    let reader = new FileReader();\n    setUploading(true);\n\n    reader.readAsText(file);\n    let metaData = { name: file.name, type: file.type.replace(\"/\", \"_\") };\n\n    reader.onloadend = () => {\n      setFileMetaData(metaData);\n      textInputState(reader.result);\n      setUploading(false);\n    };\n\n    reader.onerror = () => {\n      textInputState(undefined);\n      setUploading(false);\n    };\n  };\n\n  //text input\n  const handleTextInput = (e) => {\n    textInputState(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setErrors({\n      ...errors,\n      formTextInputError: false,\n      formByteInputError: false,\n    });\n    setInputTypeSelect(e.target.value);\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={errors.formTextInputError && \"Please Select a file object!\"}\n        className={classes.textBox}\n        fullWidth={true}\n        error={errors.formTextInputError}\n        id=\"outlined-multiline-static\"\n        label=\"Enter something like: -----BEGIN PGP MESSAGE-----\"\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        fileMetaData={fileMetaData}\n        formByteInputError={errors.formByteInputError}\n        readFile={readFile}\n        handleDelete={handleDelete}\n        label=\"Browse for Encrypted File\"\n        uploading={uploading}\n        errMessage={'Text File Required'}\n      />\n    );\n  }\n\n  const handleFormSubmit = (e) => {\n    e && e.preventDefault();\n    setErrors(resetErrors);\n\n    let byteErr = false,\n      textErr = false,\n      pwErr = false,\n      fileTypeErr = false,\n      fileExtErr = false;\n\n    let totalErr = false;\n\n    if (inputTypeSelect === \"text\" && (!textInput || textInput === \"\")) {\n      textErr = true;\n      totalErr = true;\n    } else if (inputTypeSelect === \"byte\" && (!textInput || textInput === \"\")) {\n      totalErr = true;\n      byteErr = true;\n    }\n\n    if (fileType === \"\") {\n      fileTypeErr = true;\n      totalErr = true;\n    } else if (fileType === \"text\" && fileExt === \"\") {\n      fileExtErr = true;\n      totalErr = true;\n    }\n\n    if (props.encType === 0 && passPhrase === \"\") {\n      pwErr = true;\n      totalErr = true;\n    } else if (props.encType === 0 && totalErr === false) {\n      handleDecrypt(passPhrase);\n    }\n\n    setErrors({\n      formTextInputError: textErr,\n      formByteInputError: byteErr,\n      passPhraseMissingError: pwErr,\n      fileTypeErr: fileTypeErr,\n      fileExtErr: fileExtErr,\n    });\n    return totalErr;\n  };\n\n  const handleKeyDecrypt = (byteKey, keyErr) => {\n    let errCheck = handleFormSubmit();\n    if (!errCheck && !keyErr) {\n      handleDecrypt(byteKey);\n    }\n  };\n  const handleDecrypt = (encryptionKey) => {\n    let aes, rsa;\n    props.encType === 0 ? (aes = encryptionKey) : (rsa = encryptionKey);\n\n    props.byteDecrypt(aes, rsa, textInput, {\n      fileType: fileType,\n      ext: fileExt,\n    });\n  };\n\n  return (\n    <form onSubmit={(e) => handleFormSubmit(e)}>\n      <div className={classes.main}>\n        <Box mb={2}>\n          <Box pt={2} pb={2}>\n            Simply supply your encrypted file or text.\n            <br />\n            Let us know the expected output format.\n            <br />\n            {props.encType === 0 ? (\n              <>\n                {\" \"}\n                Supply your passphrase.\n                <br />{\" \"}\n              </>\n            ) : (\n              <>\n                Supply your private key and passphrase.\n                <br />\n              </>\n            )}\n            Decrypt.\n            <br />\n          </Box>\n          <FormControl component=\"fieldset\">\n            {/* <FormLabel component=\"legend\">Input Format</FormLabel> */}\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              value={inputTypeSelect}\n              defaultValue=\"top\"\n              onChange={handleInputType}\n            >\n              <FormControlLabel\n                value=\"byte\"\n                control={<Radio color=\"secondary\" />}\n                label=\"Load my gibberish\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                value=\"text\"\n                control={<Radio color=\"primary\" />}\n                label=\"Paste my gibberish\"\n                labelPlacement=\"end\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box pb={4}>{inputType}</Box>\n        <Box pb={2}>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            error={errors.fileTypeErr ? true : false}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              File Type\n            </InputLabel>\n            <Select\n              required\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={fileExt}\n              onChange={handleFileType}\n              className={classes.dropSelect}\n              label=\"Text FIle Type\"\n            >\n              <MenuItem value={\"txt\"}>.txt</MenuItem>\n              <MenuItem value={\"csv\"}>.csv</MenuItem>\n              <MenuItem value={\"byte\"}>Something Else</MenuItem>\n            </Select>\n            {errors.fileTypeErr && (\n              <FormHelperText>\n                Please enter the format of the decrypted file\n              </FormHelperText>\n            )}\n          </FormControl>\n        </Box>\n      </div>\n\n      {props.encType === 0 ? (\n        <div className={classes.main}>\n          <Box>\n            <TextField\n              required\n              helperText={\n                errors.passPhraseMissingError && \"PassPhrase Required!\"\n              }\n              onChange={handlePassPhrase}\n              error={errors.passPhraseMissingError}\n              id=\"pw-in\"\n              type=\"password\"\n              label={\"PassPhrase\"}\n              variant=\"outlined\"\n            />\n          </Box>\n          <Box pt={3}>\n            <Button\n              type=\"submit\"\n              onClick={handleFormSubmit}\n              variant=\"contained\"\n              color={\"primary\"}\n              disabled={props.loading}\n            >\n              Decrypt\n              {props.loading && (\n                <CircularProgress\n                  size={24}\n                  color=\"primary\"\n                  className={classes.buttonProgress}\n                />\n              )}\n            </Button>\n          </Box>\n        </div>\n      ) : (\n        <KeyInput\n          loading={props.loader}\n          privateKey={true}\n          encrypt={false}\n          handleKeyEncrypt={handleKeyDecrypt}\n        />\n      )}\n    </form>\n  );\n};\n\nexport default DecryptForm;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Result from \"./DecResult\";\nimport EncTypeTab from \"../utils/EncTypeTab\";\nimport DecryptForm from \"./DecryptForm\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport * as utils from \"../utils/utils\";\nimport { snackLocation } from \"../utils/config\";\n\nconst openpgp = require(\"openpgp\");\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n    },\n  },\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nconst Decrypt = (props) => {\n  const classes = useStyles();\n  const [success, setSuccess] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [encType, setEncType] = useState(0);\n  const [alert, setAlert] = useState(utils.resetAlert);\n  const [outbound, setOutBound] = useState();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlert(utils.resetAlert);\n  };\n\n  const byteDecrypt = async (passPhrase, privateKey, textInput, decType) => {\n    setLoader(true);\n    setAlert(utils.resetAlert);\n    console.log('ddec', textInput)\n\n    let encIn;\n    try {\n      encIn = {\n        message: await openpgp.message.readArmored(textInput),\n      };\n    } catch (e) {\n      let format =\n        e.message === \"Misformed armored text\" ||\n        e.message === \"String contains an invalid character\";\n      format === true ? setAlert(utils.decFormat) : setAlert(utils.decGeneric);\n      return;\n    }\n    privateKey\n      ? (encIn.privateKeys = privateKey)\n      : (encIn.passwords = [passPhrase]);\n\n    decType.fileType === \"byte\" && (encIn.format = \"binary\");\n\n    try {\n      const { data: decrypted } = await openpgp.decrypt(encIn);\n\n      let outFileType = await utils.extSelect(decrypted, decType);\n\n      setOutBound({\n        outbound: decrypted,\n        ext: outFileType,\n        type: decType.fileType,\n      });\n      outputHandler();\n    } catch (e) {\n      e.message ===\n        \"Error decrypting message: Session key decryption failed.\" &&\n        setAlert(utils.decPW);\n      return;\n    }\n  };\n\n  const outputHandler = () => {\n    setSuccess(true);\n    setLoader(false);\n    setAlert(utils.decSuccess);\n  };\n\n  const reset = () => {\n    setSuccess(false);\n    setAlert(utils.resetAlert);\n  };\n\n  const handleDecType = (type) => {\n    setEncType(type);\n  };\n\n  let form = (\n    <DecryptForm byteDecrypt={byteDecrypt} encType={encType} loader={loader} />\n  );\n\n  return (\n    <div>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n      <Box p={2}>\n        <div className={classes.header}>\n          {!success && <EncTypeTab handleType={handleDecType} />}\n          <Typography variant=\"h5\" gutterBottom>\n            {encType === 0 ? <b>Passphrase Decryption</b>: <b>Key Decryption</b>}\n          </Typography>\n        </div>\n        {success ? <Result reset={reset} outbound={outbound} /> : form}\n      </Box>\n    </div>\n  );\n};\n\nexport default Decrypt;\n"],"sourceRoot":""}