{"version":3,"sources":["components/utils/utils.js","components/utils/BrowserResult.js","components/utils/config.js","components/utils/EncTypeTab.js","components/utils/KeyInput.js","components/decrypt/DecResult.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","components/decrypt/DecryptForm.js","components/decrypt/Decrypt.js"],"names":["FileType","require","mimes","txt","csv","html","css","extSelect","decrypted","decType","a","fileType","fromBuffer","bufferType","ext","decFormat","show","severity","message","decGeneric","decPW","decSuccess","encSuccess","encError","resetAlert","keyError","privKeyPassError","useStyles","makeStyles","theme","result","maxHeight","maxWidth","overflowY","button","margin","copy","marginLeft","Display","props","classes","useState","open","vertical","horizontal","openSnack","setOpenSnack","inputId","id","keyIn","val","className","title","aria-label","onClick","copyText","document","getElementById","textContent","textArea","createElement","setAttribute","body","append","select","setSelectionRange","execCommand","remove","anchorOrigin","onClose","key","snackLocation","AntTabs","withStyles","root","borderBottom","indicator","backgroundColor","Tabs","AntTab","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","spacing","fontFamily","join","color","opacity","fontWeightMedium","selected","disableRipple","flexGrow","padding","demo1","palette","background","paper","demo2","EncTypeTab","React","value","setValue","onChange","event","newValue","handleType","label","openpgp","keyHead","buttonProgress","position","top","left","marginTop","hr","main","breakpoints","up","InFile","selectedFile","fileMetaData","name","setUploadedFile","setFileMetaData","mt","click","variant","err","class","type","style","visibility","readFile","KeyInput","inputType","privateKey","encrypt","resetErr","alert","setAlert","byteKey","setByteKey","inputTypeSelect","setInputTypeSelect","formTextInputError","setFormTextInputError","formByteInputError","setFormByteInputError","passPhraseError","setPassPhraseError","passPhrase","setPassPhrase","handleClose","reason","helperText","textBox","fullWidth","error","multiline","rows","e","target","buttonLabel","file","files","reader","FileReader","readAsText","replace","onload","onerror","handleSubmit","preventDefault","handlePrivateKey","outkey","handlePublicKey","handleKeyEncrypt","readArmored","rsaKey","keys","undefined","decrypt","output","autoHideDuration","component","row","defaultValue","control","labelPlacement","pt","required","disabled","loading","size","Result","outbound","openEnc","setOpenEnc","disableCopy","length","Box","Typography","gutterBottom","mb","pr","Button","decryptedVal","element","Blob","href","URL","createObjectURL","download","split","outputHandler","reset","MenuItem","ref","tabIndex","_props$component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","tabIndexProp","other","_objectWithoutProperties","ListItem","_extends","dense","clsx","gutters","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","body2","dropSelect","paddingLeft","paddingRight","FormLabel","IconButton","DecryptForm","resetErrors","passPhraseMissingError","fileTypeErr","fileExtErr","textInput","textInputState","errors","setErrors","passPhraseState","uploadedFile","setFileType","fileExt","setFileExt","TextField","readAsArrayBuffer","Uint8Array","handleFormSubmit","byteErr","textErr","pwErr","totalErr","encType","handleDecrypt","encryptionKey","aes","rsa","byteDecrypt","onSubmit","pb","FormControl","RadioGroup","FormControlLabel","Radio","formControl","InputLabel","Select","labelId","extIn","FormHelperText","CircularProgress","loader","keyErr","header","display","Decrypt","success","setSuccess","setLoader","setEncType","utils","setOutBound","encIn","format","privateKeys","passwords","data","outFileType","form","Snackbar","Alert","p"],"mappings":"igBAAMA,EAAWC,EAAQ,KAEZC,EAAQ,CACnBC,IAAK,aACLC,IAAK,WACLC,KAAM,YACNC,IAAK,YAGMC,EAAS,uCAAG,WAAOC,EAAWC,GAAlB,eAAAC,EAAA,yDAEA,SAAnBD,EAAQE,SAFW,gCAGDX,EAASY,WAAWJ,GAHnB,OAGrBK,EAHqB,kBAMnBA,EANmB,yCAOdA,EAAWC,KAPG,UAQS,SAArBL,EAAQE,SARI,0CASdF,EAAQK,KATM,iCAWd,OAXc,4CAAH,wDAeTC,EAAY,CACvBC,MAAM,EACNC,SAAU,QACVC,QACE,oHAGSC,EAAa,CACxBH,MAAM,EACNC,SAAU,QACVC,QAAS,2CAGEE,EAAQ,CACnBJ,MAAM,EACNC,SAAU,QACVC,QAAS,4BAGEG,EAAa,CACxBL,MAAM,EACNC,SAAU,UACVC,QAAS,2BAGEI,EAAa,CACxBN,MAAM,EACNE,QAAS,sBACTD,SAAU,WAGCM,EAAW,CACtBP,MAAM,EACNE,QAAS,0CACTD,SAAU,SAGCO,EAAa,CACxBR,MAAM,EACNE,QAAS,GACTD,SAAU,IAICQ,EAAW,CACtBT,MAAM,EACNE,QAAS,qCACTD,SAAU,SAGCS,EAAmB,CAC9BV,MAAM,EACNE,QAAS,0CACTD,SAAU,U,qICpENU,EAAYC,aAAW,SAACC,GAAD,MAAY,CAEvCC,OAAQ,CACNC,UAAW,QACXC,SAAU,QACVC,UAAW,UAEbC,OAAQ,CACNC,OAAQ,OAEVC,KAAM,CACJC,WAAY,aA4DCC,IAvDC,SAACC,GACf,IAAMC,EAAUb,IADS,EAESc,mBAAS,CACzCC,MAAM,EACNC,SAAU,SACVC,WAAY,SALW,mBAElBC,EAFkB,KAEPC,EAFO,KAQjBH,EAA+BE,EAA/BF,SAAUC,EAAqBC,EAArBD,WAAYF,EAASG,EAATH,KAE1BK,EAAUR,EAAMS,GAChBC,EAAQV,EAAMW,IAoBlB,OACE,oCACE,yBAAKC,UAAWX,EAAQJ,MACtB,kBAAC,IAAD,CAASgB,MAAM,QACb,kBAAC,IAAD,CAAYC,aAAW,OAAOC,QAtBnB,WACjBR,EAAa,2BAAKD,GAAN,IAAiBH,MAAM,KACnC,IAAIa,EAAWC,SAASC,eAAeV,GAASW,YAC1CC,EAAWH,SAASI,cAAc,YACxCD,EAASE,aAAa,KAAM,QAC5BF,EAASD,YAAcH,EACvBC,SAASM,KAAKC,OAAOJ,GACrBA,EAASK,SACTL,EAASM,kBAAkB,EAAG,OAG9BT,SAASU,YAAY,QACrBP,EAASQ,WAWD,kBAAC,IAAD,SAIN,kBAAC,IAAD,CAAOhB,UAAWX,EAAQV,QACtB,yBAAKkB,GAAID,GAAUE,IAGvB,kBAAC,IAAD,CACEmB,aAAc,CAAEzB,WAAUC,cAC1BF,KAAMA,EACN2B,QAnBc,WAClBvB,EAAa,2BAAKD,GAAN,IAAiBH,MAAM,MAmB/BxB,QAAQ,sBACRoD,IAAK3B,EAAWC,O,iCC1E1B,kCAAO,IAAM2B,EAAgB,CAAE5B,SAAU,SAAUC,WAAY,S,yICMzD4B,EAAUC,YAAW,CACzBC,KAAM,CACJC,aAAc,qBAGhBC,UAAW,CACTC,gBAAiB,YANLJ,CAQbK,KAEGC,EAASN,aAAW,SAAC5C,GAAD,MAAY,CACpC6C,KAAM,CACJM,cAAe,OACfC,SAAU,GACVC,WAAYrD,EAAMsD,WAAWC,kBAC7BC,YAAaxD,EAAMyD,QAAQ,GAC3BC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,KACP,UAAW,CACTC,MAAO,UACPC,QAAS,GAEX,aAAc,CACZD,MAAO,UACPP,WAAYrD,EAAMsD,WAAWQ,kBAE/B,UAAW,CACTF,MAAO,YAGXG,SAAU,MA9BGnB,EA+BX,SAAClC,GAAD,OAAW,kBAAC,IAAD,eAAKsD,eAAa,GAAKtD,OAGhCZ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6C,KAAM,CACJoB,SAAU,GAIZC,QAAS,CACPA,QAASlE,EAAMyD,QAAQ,IAEzBU,MAAO,CACLnB,gBAAiBhD,EAAMoE,QAAQC,WAAWC,OAE5CC,MAAO,CACLvB,gBAAiB,eAIN,SAASwB,EAAW9D,GAGjC,IAAMC,EAAUb,IAHwB,EAId2E,IAAM7D,SAAS,GAJD,mBAIjC8D,EAJiC,KAI1BC,EAJ0B,KAUxC,OACE,yBAAKrD,UAAWX,EAAQkC,MACtB,kBAACF,EAAD,CAAS+B,MAAOA,EAAOE,SANN,SAACC,EAAOC,GAC3BH,EAASG,GACTpE,EAAMqE,WAAWD,IAIgCtD,aAAW,eACxD,kBAAC0B,EAAD,CAAQ8B,MAAM,0BACd,kBAAC9B,EAAD,CAAQ8B,MAAM,2BAEhB,kBAAC,IAAD,CAAY1D,UAAWX,EAAQuD,a,kQChE/Be,EAAU7G,EAAQ,KAElB0B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkF,QAAS,CACPtB,MAAO,uBAETuB,eAAgB,CACdC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,WAAY,GACZ/E,YAAa,IAEfgF,GAAI,CACF5B,MAAO,uBAET6B,KAAK,aACHzC,gBAAiB,UACjBkB,QAASlE,EAAMyD,QAAQ,IACtBzD,EAAM0F,YAAYC,GAAG,IAAyB,EAAnB3F,EAAMyD,QAAQ,IAAU,CAClDS,QAASlE,EAAMyD,QAAQ,SAMvBmC,EAAS,SAAClF,GACd,IAIMmF,EAAenF,EAAMoF,cACzB,oCACE,kBAAC,IAAD,yBAAyBpF,EAAMoF,aAAaC,OAC5C,kBAAC,IAAD,CAAYtE,QAPK,WACnBf,EAAMsF,gBAAgB,MACtBtF,EAAMuF,gBAAgB,QAMlB,kBAAC,IAAD,QAIN,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CACEzE,QAAS,kBAAME,SAASC,eAAe,YAAYuE,SACnDC,QAAQ,WACRxC,MAAM,aAHR,sBAQCiC,EACAnF,EAAM2F,IAAIA,KACT,uBACEC,MAAM,4EACNnF,GAAG,qBAEFT,EAAM2F,IAAIhH,SAGf,2BACE8B,GAAG,WACHoF,KAAK,OACLC,MAAO,CAAEC,WAAY,UACrB7B,SAAUlE,EAAMgG,cA8OXC,IAvOE,SAACjG,GAChB,IA6CIkG,EA7CEjG,EAAUb,IAEZ+G,EAAanG,EAAMmG,WACnBC,EAAUpG,EAAMoG,QAEhBC,EAAW,CAAEV,KAAK,EAAO5D,KAAK,EAAOpD,SAAS,GANxB,EAQAuB,mBAASjB,KART,mBAQnBqH,EARmB,KAQZC,EARY,OASIrG,qBATJ,mBASnBsG,EATmB,KASVC,EATU,OAUoBvG,mBAAS,QAV7B,mBAUnBwG,EAVmB,KAUFC,EAVE,OAW0BzG,mBAASmG,GAXnC,mBAWnBO,EAXmB,KAWCC,EAXD,OAY0B3G,mBAASmG,GAZnC,mBAYnBS,EAZmB,KAYCC,EAZD,OAac7G,qBAbd,mBAanBkF,EAbmB,KAaLG,EAbK,OAcoBrF,oBAAS,GAd7B,mBAcnB8G,GAdmB,KAcFC,GAdE,QAeU/G,mBAAS,IAfnB,qBAenBgH,GAfmB,MAePC,GAfO,MAmBpBC,GAAc,SAACjD,EAAOkD,GACX,cAAXA,GAGJd,EAAStH,MAyBTiH,EADsB,SAApBQ,EAEA,kBAAC,IAAD,CACEY,WAAYV,EAAmBjB,KAAOiB,EAAmBjI,QACzDiC,UAAWX,EAAQsH,QACnBC,WAAW,EACXC,MAAOb,EAAmBjB,IAC1BlF,GAAG,4BACH6D,MAAO,gBACPoD,WAAS,EACTC,KAAM,GACNzD,SAhCkB,SAAC0D,GACvBnB,EAAWmB,EAAEC,OAAO7D,QAgChB0B,QAAQ,aAKV,kBAACR,EAAD,CACE4C,YAAa,aACb1C,aAAcA,EACdO,IAAKmB,EACLA,mBAAoBA,EACpBd,SAnCU,SAAC4B,GACf,IAAIG,EAAOH,EAAEC,OAAOG,MAAM,GAC1B,GAAKD,EAAL,CACA,IAAIE,EAAS,IAAIC,WACjBD,EAAOE,WAAWJ,GAClBxC,EAAgB,CAAEF,KAAM0C,EAAK1C,KAAMQ,KAAMkC,EAAKlC,KAAKuC,QAAQ,IAAK,OAChEH,EAAOI,OAAS,WACd5B,EAAWwB,EAAO1I,SAEpB0I,EAAOK,QAAU,eA2BbhD,gBAAiBmB,EACjBlB,gBAAiBA,IAKvB,IAOMgD,GAAY,uCAAG,WAAOX,GAAP,qBAAAzJ,EAAA,yDACnByJ,EAAEY,iBAPFjC,EAAStH,KACT4H,EAAsBR,GACtBU,EAAsBV,GACtBY,IAAmB,GAOftB,GAAM,EAGS,KAAfuB,KACFD,IAAmB,GACnBtB,GAAM,GAGHa,GAAuB,KAAZA,EAZG,gBAaO,SAApBE,EACFG,EAAsB,2BACjBD,GADgB,IAEnBjB,KAAK,EACLhH,QAAS,uBAGXoI,EAAsB,2BACjBD,GADgB,IAEnBnB,KAAK,EACLhH,QAAS,uBAGbgH,GAAM,EA1BW,2BA4BjBQ,EA5BiB,kCA6BwBsC,GACnCjC,EACAU,IA/BW,iBA6BLwB,EA7BK,EA6BV3G,IAAoB4D,EA7BV,EA6BG8B,MA7BH,yCAiCwBkB,GAAgBnC,GAjCxC,iBAiCLkC,EAjCK,EAiCV3G,IAAoB4D,EAjCV,EAiCG8B,MAjCH,QAsCnBzH,EAAM4I,iBAAiBF,EAAQ/C,GAtCZ,4CAAH,sDAyCZgD,GAAe,uCAAG,WAAOnC,GAAP,eAAArI,EAAA,sEACFoG,EAAQxC,IAAI8G,YAAYrC,GADtB,UAClBsC,EADkB,OACgCC,KAAK,GADrC,uBAGpBxC,EAASrH,KAHW,kBAIb,CAAE6C,SAAKiH,EAAWvB,OAAO,IAJZ,gCAMb,CAAE1F,IAAK+G,EAAQrB,OAAO,IANT,2CAAH,sDAUfgB,GAAgB,uCAAG,WAAOjC,EAASU,GAAhB,qBAAA/I,EAAA,+EAKXoG,EAAQxC,IAAI8G,YAAYrC,GALb,uCAInBuC,KAJmB,GAIZ5C,EAJY,cAMfA,EAAW8C,QAAQ/B,GANJ,cAOrBgC,EAAS,CAAC/C,GAPW,kBAQd,CAAEpE,IAAKmH,EAAQzB,OAAO,IARR,yCAUP,6BAAd,KAAE9I,SAA0C4H,EAASpH,KACvC,4BAAd,KAAER,SAAyC4H,EAASrH,KAX/B,kBAYd,CAAE6C,SAAKiH,EAAWvB,OAAO,IAZX,0DAAH,wDAgBtB,OACE,yBAAK7G,UAAWX,EAAQ8E,MACrBuB,EAAM7H,MACL,kBAAC,IAAD,CACEoD,aAAcG,IACd7B,KAAMmG,EAAM7H,KACZ0K,iBAAkB,IAClBrH,QAASsF,IAET,kBAAC,IAAD,CAAOtF,QAASsF,GAAa1I,SAAU4H,EAAM5H,UAC1C4H,EAAM3H,UAIb,kBAAC,IAAD,KACE,kBAAC,IAAD,KAEE,yBAAKiC,UAAWX,EAAQuE,SACtB,0CAEF,kBAAC,IAAD,CAAa4E,UAAU,YACrB,kBAAC,IAAD,CACEC,KAAG,EACHvI,aAAW,WACXuE,KAAK,WACLrB,MAAO0C,EACP4C,aAAa,MACbpF,SAnJY,SAAC0D,GACvBjB,EAAmBiB,EAAEC,OAAO7D,SAoJlB,kBAAC,IAAD,CACEA,MAAM,OACNuF,QAAS,kBAAC,IAAD,CAAOrG,MAAM,cACtBoB,MAAM,mBACNkF,eAAe,QAEjB,kBAAC,IAAD,CACExF,MAAM,OACNuF,QAAS,kBAAC,IAAD,CAAOrG,MAAM,YACtBoB,MAAM,gBACNkF,eAAe,WAKvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWJ,UAAU,WACrB,kBAAC,IAAD,CAAK5D,GAAI,GAAIU,IAEdC,GACC,kBAAC,IAAD,CAAKsD,GAAI,GACP,kBAAC,IAAD,CACEC,UAAQ,EACRpC,WAAYN,IAAmB,uBAC/B9C,SA1La,SAAC0D,GAAD,OAAOT,GAAcS,EAAEC,OAAO7D,QA4L3CyD,MAAOT,GACPvG,GAAG,oBACHoF,KAAK,WACLvB,MAAO,yBACPoB,QAAQ,cAKd,kBAAC,IAAD,CAAK+D,GAAI,GACP,kBAAC,IAAD,CAAQ/D,QAAQ,YAAYxC,MAAO,UAAWnC,QAASwH,GAAcoB,SAAU3J,EAAM4J,SAClFxD,EAAU,WAAa,WACvBpG,EAAM4J,SACP,kBAAC,IAAD,CACEC,KAAM,GACN3G,MAAM,UACNtC,UAAWX,EAAQwE,uB,4JC9S3BrF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyF,KAAK,aACHvB,QAASlE,EAAMyD,QAAQ,IAEtBzD,EAAM0F,YAAYC,GAAG,IAAyB,EAAnB3F,EAAMyD,QAAQ,IAAU,CAClDS,QAASlE,EAAMyD,QAAQ,KAG3BpD,OAAQ,CACNC,OAAQ,WA6EGkK,EAzEA,SAAC9J,GACd,IAAMC,EAAUb,IAEZ2K,EAAW/J,EAAM+J,SAHG,EAKM7J,oBAAS,GALf,mBAKjB8J,EALiB,KAKRC,EALQ,KAOpBC,EACFH,EAASA,SAASI,OAAS,KAA2B,SAAlBJ,EAASlE,KAsB/C,OACE,yBAAKjF,UAAWX,EAAQ8E,MACtB,kBAACqF,EAAA,EAAD,CAAKX,GAAI,GACP,kBAACY,EAAA,EAAD,CAAY3E,QAAQ,KAAK4E,cAAY,GAArC,kBAIA,kBAACF,EAAA,EAAD,CAAKG,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEd,SAAUO,EACVnJ,QAAS,kBAAMkJ,GAAYD,IAC3BtE,QAAQ,WACRxC,MAAO,YACPtC,UAAWX,EAAQN,QAEjBqK,EAAyB,OAAf,cAEd,kBAACS,EAAA,EAAD,CACE1J,QAAS,kBAtCG,SAAC2J,GACrB,IACI3C,EADE4C,EAAU1J,SAASI,cAAc,KAGrC0G,EADoB,SAAlBgC,EAASlE,KACJ,IAAI+E,KAAK,CAACF,EAAaX,WAEvB,IAAIa,KAAK,CAACF,EAAaX,UAAW,CACvClE,KAAMlI,IAAM+M,EAAanM,OAG7BoM,EAAQE,KAAOC,IAAIC,gBAAgBhD,GACnC4C,EAAQK,SACN,cACAL,EAAQE,KAAKI,MAAM,KAAK,GAAGA,MAAM,KAAK,GACtC,IACAP,EAAanM,IACfoM,EAAQlF,QACRkF,EAAQ/I,SAqBesJ,CAAcnB,IAC7BrE,QAAQ,WACRxC,MAAO,YACPtC,UAAWX,EAAQN,QAJrB,YAQCqK,GAAW,kBAAC,IAAD,CAASrJ,IAAKoJ,EAASA,SAAUtJ,GAAG,qBAElD,kBAAC2J,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CACE1J,QAASf,EAAMmL,MACfzF,QAAQ,YACR9E,UAAWX,EAAQN,OACnBuD,MAAO,WAEN,IANH,iBAOiB,S,uJClDvBkI,EAAwBrH,cAAiB,SAAkB/D,EAAOqL,GACpE,IAaIC,EAbArL,EAAUD,EAAMC,QAChBW,EAAYZ,EAAMY,UAClB2K,EAAmBvL,EAAMoJ,UACzBA,OAAiC,IAArBmC,EAA8B,KAAOA,EACjDC,EAAwBxL,EAAMyL,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAkB1L,EAAM0L,gBACxBC,EAAc3L,EAAM4L,KACpBA,OAAuB,IAAhBD,EAAyB,WAAaA,EAC7CtI,EAAWrD,EAAMqD,SACjBwI,EAAe7L,EAAMsL,SACrBQ,EAAQC,YAAyB/L,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,kBAAmB,OAAQ,WAAY,aAQ3I,OAJKA,EAAM2J,WACT2B,OAA4BtC,IAAjB6C,EAA6BA,GAAgB,GAGtC9H,gBAAoBiI,IAAUC,YAAS,CACzDtM,QAAQ,EACRiM,KAAMA,EACNN,SAAUA,EACVlC,UAAWA,EACX/F,SAAUA,EACVoI,eAAgBA,EAChBxL,QAASgM,YAAS,CAChBC,MAAOjM,EAAQiM,OACdR,GACH9K,UAAWuL,YAAKlM,EAAQkC,KAAMvB,EAAWyC,GAAYpD,EAAQoD,UAAWoI,GAAkBxL,EAAQmM,SAClGf,IAAKA,GACJS,OA8DU5J,eA1HK,SAAgB5C,GAClC,MAAO,CAEL6C,KAAM8J,YAAS,GAAI3M,EAAMsD,WAAWyJ,MAAOC,YAAgB,CACzDC,UAAW,GACXC,WAAY,EACZC,cAAe,EACfC,UAAW,aACXC,MAAO,OACPC,SAAU,SACVC,WAAY,UACXvN,EAAM0F,YAAYC,GAAG,MAAO,CAC7BsH,UAAW,UAKbH,QAAS,GAGT/I,SAAU,GAGV6I,MAAOD,YAAS,GAAI3M,EAAMsD,WAAWkK,MAAO,CAC1CP,UAAW,YAkGiB,CAChClH,KAAM,eADOnD,CAEZkJ,G,6CC/GGhM,EAAYC,aAAW,SAACC,GAAD,MAAY,CAEvCiI,QAAS,CACP9H,SAAU,SAGZsN,WAAY,CACVJ,MAAO,SAETlI,eAAgB,CACdC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,WAAY,GACZ/E,YAAa,IAEfiF,KAAK,aACHiI,YAAa1N,EAAMyD,QAAQ,GAC3BkK,aAAc3N,EAAMyD,QAAQ,GAC5B0J,cAAenN,EAAMyD,QAAQ,IAE5BzD,EAAM0F,YAAYC,GAAG,IAAyB,EAAnB3F,EAAMyD,QAAQ,IAAU,CAClDiK,YAAa1N,EAAMyD,QAAQ,GAC3BkK,aAAc3N,EAAMyD,QAAQ,GAC5B0J,cAAenN,EAAMyD,QAAQ,SAK7BmC,EAAS,SAAClF,GAGd,IAIMmF,EAAenF,EAAMoF,cACzB,oCACE,kBAAC8H,EAAA,EAAD,yBAAyBlN,EAAMoF,aAAaC,OAC5C,kBAAC8H,EAAA,EAAD,CAAYpM,QAPK,WACnBf,EAAMsF,gBAAgB,MACtBtF,EAAMuF,gBAAgB,QAMlB,kBAAC,IAAD,QAIN,OACE,kBAAC6E,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CACE1J,QAAS,kBAAME,SAASC,eAAe,OAAOuE,SAC9CC,QAAQ,WACRxC,MAAM,aAHR,uBAMU,IACTiC,EACAnF,EAAM8G,oBACL,uBACElB,MAAM,4EACNnF,GAAG,qBAFL,iBAOF,2BACEA,GAAG,MACHoF,KAAK,OACLC,MAAO,CAAEC,WAAY,UACrB7B,SAAUlE,EAAMgG,aAyRToH,EAlRK,SAACpN,GACnB,IA2DIkG,EA3DEjG,EAAUb,IAEZiO,EAAc,CAChBzG,oBAAoB,EACpBE,oBAAoB,EACpBwG,wBAAwB,EACxBC,aAAa,EACbC,YAAY,GARe,EAUiBtN,mBAAS,QAV1B,mBAUtBwG,EAVsB,KAULC,EAVK,OAWOzG,mBAAS,IAXhB,mBAWtBuN,EAXsB,KAWXC,EAXW,OAYDxN,mBAASmN,GAZR,mBAYtBM,EAZsB,KAYdC,EAZc,OAaS1N,mBAAS,IAblB,mBAatBgH,EAbsB,KAaV2G,EAbU,OAcW3N,qBAdX,mBActB4N,EAdsB,KAcRxI,EAdQ,OAeGpF,mBAAS,IAfZ,mBAetB9B,EAfsB,KAeZ2P,EAfY,OAgBC7N,mBAAS,IAhBV,mBAgBtB8N,EAhBsB,KAgBbC,EAhBa,OAiBW/N,qBAjBX,mBAiBtBkF,EAjBsB,KAiBRG,GAjBQ,KA8D3BW,EADsB,SAApBQ,EAEA,kBAACwH,EAAA,EAAD,CACE5G,WAAYqG,EAAO/G,oBAAsB,+BACzChG,UAAWX,EAAQsH,QACnBC,WAAW,EACXC,MAAOkG,EAAO/G,mBACdnG,GAAG,4BACH6D,MAAM,oDACNoD,WAAS,EACTC,KAAM,GACNzD,SAzBkB,SAAC0D,GACvB8F,EAAe9F,EAAEC,OAAO7D,QAyBpB0B,QAAQ,aAKV,kBAAC,EAAD,CACEN,aAAcA,EACd0B,mBAAoB6G,EAAO7G,mBAC3Bd,SAhDW,SAAC4B,GAChB,IAAIG,EAAOH,EAAEC,OAAOG,MAAM,GAC1B,GAAKD,EAAL,CACA,IAAIE,EAAS,IAAIC,WACjBD,EAAOkG,kBAAkBpG,GACzBxC,GAAgB,CAAEF,KAAM0C,EAAK1C,KAAMQ,KAAMkC,EAAKlC,KAAKuC,QAAQ,IAAK,OAEhEH,EAAOI,OAAS,WACd/C,EAAgB,IAAI8I,WAAWnG,EAAO1I,UAExC0I,EAAOK,QAAU,eAuCbhD,gBAAiBA,EACjBC,gBAAiBA,KAKvB,IAAM8I,GAAmB,SAACzG,GACxBA,GAAKA,EAAEY,iBACPoF,EAAUP,GAEV,IAAIiB,EACFC,EACAC,EACAjB,EACAC,GAAa,EAEXiB,GAAW,EAgCf,MA9BwB,SAApB/H,GAAgC+G,GAA2B,KAAdA,EAGlB,SAApB/G,GAA+BoH,IACxCW,GAAW,EACXH,GAAU,IAJVC,GAAU,EACVE,GAAW,GAMI,KAAbrQ,GACFmP,GAAc,EACdkB,GAAW,GACW,SAAbrQ,GAAmC,KAAZ4P,IAChCR,GAAa,EACbiB,GAAW,GAGS,IAAlBzO,EAAM0O,SAAgC,KAAfxH,GACzBsH,GAAQ,EACRC,GAAW,GACgB,IAAlBzO,EAAM0O,UAA8B,IAAbD,GAChCE,GAAczH,GAGhB0G,EAAU,CACRhH,mBAAoB2H,EACpBzH,mBAAoBwH,EACpBhB,uBAAwBkB,EACxBjB,YAAaA,EACbC,WAAYA,IAEPiB,GASHE,GAAgB,SAACC,GACrB,IAAIC,EAAKC,EACS,IAAlB9O,EAAM0O,QAAiBG,EAAMD,EAAkBE,EAAMF,GAEpC,SAAbxQ,GAKoB,SAAbA,IAJT4B,EAAM+O,YAAYF,EAAKC,EAAKrB,EAAW,CACrCrP,SAAUA,EACVG,IAAKyP,KASX,OACE,0BAAMgB,SAAU,SAACpH,GAAD,OAAOyG,GAAiBzG,KACtC,yBAAKhH,UAAWX,EAAQ8E,MACtB,kBAACqF,EAAA,EAAD,CAAKG,GAAI,GACP,kBAACH,EAAA,EAAD,CAAKX,GAAI,EAAGwF,GAAI,GACd,wEACA,sEACmB,IAAlBjP,EAAM0O,QACL,sDAEA,sEAGF,wCAEF,kBAACQ,EAAA,EAAD,CAAa9F,UAAU,YAErB,kBAAC+F,EAAA,EAAD,CACE9F,KAAG,EACHvI,aAAW,WACXuE,KAAK,WACLrB,MAAO0C,EACP4C,aAAa,MACbpF,SA/HY,SAAC0D,GACvBgG,EAAU,2BACLD,GADI,IAEP/G,oBAAoB,EACpBE,oBAAoB,KAEtBH,EAAmBiB,EAAEC,OAAO7D,SA2HlB,kBAACoL,EAAA,EAAD,CACEpL,MAAM,OACNuF,QAAS,kBAAC8F,EAAA,EAAD,CAAOnM,MAAM,cACtBoB,MAAM,oBACNkF,eAAe,QAEjB,kBAAC4F,EAAA,EAAD,CACEpL,MAAM,OACNuF,QAAS,kBAAC8F,EAAA,EAAD,CAAOnM,MAAM,YACtBoB,MAAM,qBACNkF,eAAe,WAKvB,kBAACY,EAAA,EAAD,CAAK6E,GAAI,GAAI/I,GACb,kBAACkE,EAAA,EAAD,CAAK6E,GAAI,GACP,kBAACC,EAAA,EAAD,CACExJ,QAAQ,WACR9E,UAAWX,EAAQqP,YACnB7H,QAAOkG,EAAOJ,aAEd,kBAACgC,EAAA,EAAD,CAAY9O,GAAG,qCAAf,aAGA,kBAAC+O,EAAA,EAAD,CACE9F,UAAQ,EACR+F,QAAQ,oCACRhP,GAAG,8BACHuD,MAAOgK,EACP9J,SA3LW,SAAC0D,GACtB,IAAI8H,EAAQ9H,EAAEC,OAAO7D,MACrBiK,EAAWyB,GAET3B,EADY,QAAV2B,GAA6B,QAAVA,EACT,OAEA,SAsLJ9O,UAAWX,EAAQ8M,WACnBzI,MAAM,kBAEN,kBAAC,EAAD,CAAUN,MAAO,OAAjB,QACA,kBAAC,EAAD,CAAUA,MAAO,OAAjB,QACA,kBAAC,EAAD,CAAUA,MAAO,QAAjB,mBAED2J,EAAOJ,aACN,kBAACoC,EAAA,EAAD,yDAQW,IAAlB3P,EAAM0O,QACL,yBAAK9N,UAAWX,EAAQ8E,MACtB,kBAACqF,EAAA,EAAD,KACE,kBAAC8D,EAAA,EAAD,CACExE,UAAQ,EACRpC,WACEqG,EAAOL,wBAA0B,uBAEnCpJ,SAxNa,SAAC0D,GACxBiG,EAAgBjG,EAAEC,OAAO7D,QAwNfyD,MAAOkG,EAAOL,uBACd7M,GAAG,QACHoF,KAAK,WACLvB,MAAO,aACPoB,QAAQ,cAGZ,kBAAC0E,EAAA,EAAD,CAAKX,GAAI,GACP,kBAACgB,EAAA,EAAD,CACE5E,KAAK,SACL9E,QAASsN,GACT3I,QAAQ,YACRxC,MAAO,UACPyG,SAAU3J,EAAM4J,SALlB,UAQG5J,EAAM4J,SACL,kBAACgG,EAAA,EAAD,CACE/F,KAAM,GACN3G,MAAM,UACNtC,UAAWX,EAAQwE,oBAO7B,kBAACwB,EAAA,EAAD,CACE2D,QAAS5J,EAAM6P,OACf1J,YAAY,EACZC,SAAS,EACTwC,iBAtIiB,SAACpC,EAASsJ,GAClBzB,MACGyB,GAChBnB,GAAcnI,Q,2BC1NdjC,EAAU7G,EAAQ,KAElB0B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyQ,OAAO,aACL9C,aAAc3N,EAAMyD,QAAQ,GAC5BiK,YAAa1N,EAAMyD,QAAQ,IAC1BzD,EAAM0F,YAAYC,GAAG,IAAyB,EAAnB3F,EAAMyD,QAAQ,IAAU,CAClDkK,aAAc3N,EAAMyD,QAAQ,GAC5BiK,YAAa1N,EAAMyD,QAAQ,KAG/BZ,KAAM,CACJ6N,QAAS,OACT,YAAa,CACXlQ,WAAYR,EAAMyD,QAAQ,SA2GjBkN,UAtGC,SAACjQ,GACf,IAAMC,EAAUb,IADS,EAEKc,oBAAS,GAFd,mBAElBgQ,EAFkB,KAETC,EAFS,OAGGjQ,oBAAS,GAHZ,mBAGlB2P,EAHkB,KAGVO,EAHU,OAIKlQ,mBAAS,GAJd,mBAIlBwO,EAJkB,KAIT2B,EAJS,OAKCnQ,mBAASoQ,KALV,mBAKlBhK,EALkB,KAKXC,EALW,OAMOrG,qBANP,mBAMlB6J,EANkB,KAMRwG,EANQ,KAQnBnJ,EAAc,SAACjD,EAAOkD,GACX,cAAXA,GAGJd,EAAS+J,MAGLvB,EAAW,uCAAG,WAAO7H,EAAYf,EAAYsH,EAAWvP,GAA1C,uBAAAC,EAAA,6DAClBiS,GAAU,GACV7J,EAAS+J,KAFS,kBAOC/L,EAAQ5F,QAAQkK,YAAY4E,GAP7B,mBAMhB+C,EANgB,CAOd7R,QAPc,6DAUZ8R,EACY,2BAAd,KAAE9R,SACY,yCAAd,KAAEA,QACc4H,GAAP,IAAXkK,EAA2BH,IAA4BA,KAbvC,kCAgBlBnK,EACKqK,EAAME,YAAcvK,EACpBqK,EAAMG,UAAY,CAACzJ,GAEH,SAArBhJ,EAAQE,WAAwBoS,EAAMC,OAAS,UApB7B,oBAuBkBlM,EAAQ0E,QAAQuH,GAvBlC,wBAuBFvS,EAvBE,EAuBR2S,KAvBQ,UAyBQN,IAAgBrS,EAAWC,GAzBnC,QAyBZ2S,EAzBY,OA2BhBN,EAAY,CACVxG,SAAU9L,EACVM,IAAKsS,EACLhL,KAAM3H,EAAQE,WAEhB8M,IAhCgB,0DAmCd,6DADF,KAAEvM,SAEA4H,EAAS+J,KApCK,oFAAH,4DAyCXpF,EAAgB,WACpBiF,GAAW,GACXC,GAAU,GACV7J,EAAS+J,MAYPQ,EACF,kBAAC,EAAD,CAAa/B,YAAaA,EAAaL,QAASA,EAASmB,OAAQA,IAGnE,OACE,6BACGvJ,EAAM7H,MACL,kBAACsS,EAAA,EAAD,CACElP,aAAcG,IACd7B,KAAMmG,EAAM7H,KACZ0K,iBAAkB,IAClBrH,QAASsF,GAET,kBAAC4J,EAAA,EAAD,CAAOlP,QAASsF,EAAa1I,SAAU4H,EAAM5H,UAC1C4H,EAAM3H,UAIb,kBAACyL,EAAA,EAAD,CAAK6G,EAAG,GACN,yBAAKrQ,UAAWX,EAAQ8P,SACpBG,GAAW,kBAACpM,EAAA,EAAD,CAAYO,WAxBX,SAACwB,GACrBwK,EAAWxK,MAwBL,kBAACwE,EAAA,EAAD,CAAY3E,QAAQ,KAAK4E,cAAY,GACtB,IAAZoE,EAAgB,oDAA8B,+CAGlDwB,EAAU,kBAAC,EAAD,CAAQ/E,MAlCX,WACZgF,GAAW,GACX5J,EAAS+J,MAgC4BvG,SAAUA,IAAe+G","file":"static/js/7.b6ea2200.chunk.js","sourcesContent":["const FileType = require(\"file-type\");\n\nexport const mimes = {\n  txt: \"text/plain\",\n  csv: \"text/csv\",\n  html: \"text/html\",\n  css: \"text/css\",\n};\n\nexport const extSelect = async (decrypted, decType) => {\n  let bufferType\n  if (decType.fileType==='byte'){\n    bufferType =  await FileType.fromBuffer(decrypted);\n  }\n\n  if (bufferType) {\n    return bufferType.ext;\n  } else if (decType.fileType === \"text\") {\n    return decType.ext;\n  } else {\n    return \"txt\";\n  }\n};\n\nexport const decFormat = {\n  show: true,\n  severity: \"error\",\n  message:\n    \"Looks like there is a format issue with your Encrypted text. We recommend using the original text file supplied!\",\n};\n\nexport const decGeneric = {\n  show: true,\n  severity: \"error\",\n  message: \"Something went wrong! Please try again.\",\n};\n\nexport const decPW = {\n  show: true,\n  severity: \"error\",\n  message: \"Passphrase is incorrect!\",\n};\n\nexport const decSuccess = {\n  show: true,\n  severity: \"success\",\n  message: \"Successfully decrypted!\",\n};\n\nexport const encSuccess = {\n  show: true,\n  message: \"Encryption Complete\",\n  severity: \"success\",\n}\n\nexport const encError = {\n  show: true,\n  message: \"Something went wrong! Please try again.\",\n  severity: \"error\",\n};\n\nexport const resetAlert = {\n  show: false,\n  message: \"\",\n  severity: \"\",\n};\n\n\nexport const keyError = {\n  show: true,\n  message: \"Invalid RSA Key! Please try again.\",\n  severity: \"error\",\n};\n\nexport const privKeyPassError = {\n  show: true,\n  message: \"Incorrect Passphrase! Please try again.\",\n  severity: \"error\",\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  result: {\n    maxHeight: \"100px\",\n    maxWidth: \"350px\",\n    overflowY: \"scroll\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n  copy: {\n    marginLeft: \"318px\",\n  },\n}));\n\n  \n  const Display = (props) => {\n    const classes = useStyles();\n    const [openSnack, setOpenSnack] = useState({\n      open: false,\n      vertical: \"bottom\",\n      horizontal: \"left\",\n    });\n  \n    const { vertical, horizontal, open } = openSnack;\n  \n    let inputId = props.id;\n    let keyIn = props.val;\n  \n    const handleCopy = () => {\n      setOpenSnack({ ...openSnack, open: true });\n      let copyText = document.getElementById(inputId).textContent;\n      const textArea = document.createElement(\"textarea\");\n      textArea.setAttribute(\"id\", \"copy\");\n      textArea.textContent = copyText;\n      document.body.append(textArea);\n      textArea.select();\n      textArea.setSelectionRange(0, 99999); /*For mobile devices*/\n  \n      /* Copy the text inside the text field */\n      document.execCommand(\"copy\");\n      textArea.remove();\n    };\n  \n    const handleClose = () => {\n      setOpenSnack({ ...openSnack, open: false });\n    };\n    return (\n      <>\n        <div className={classes.copy}>\n          <Tooltip title=\"Copy\">\n            <IconButton aria-label=\"Copy\" onClick={handleCopy}>\n              <FileCopyIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <Paper className={classes.result}>\n            <pre id={inputId}>{keyIn}</pre>\n        </Paper>\n  \n        <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={open}\n          onClose={handleClose}\n          message=\"Copied to clipboard\"\n          key={vertical + horizontal}\n        />\n      </>\n    );\n  };\n  \n  export default Display;","export const snackLocation = { vertical: \"bottom\", horizontal: \"left\" }\n\nexport const menuOptions = {1:'ENCRYPT', 2:'DECRYPT', 3: 'KEY CREATION', 4: 'ABOUT'}","import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst AntTabs = withStyles({\n  root: {\n    borderBottom: \"1px solid #e8e8e8\",\n    // width: '700px'\n  },\n  indicator: {\n    backgroundColor: \"#1de9b6\",\n  },\n})(Tabs);\n\nconst AntTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    minWidth: 72,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing(4),\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:hover\": {\n      color: \"#4aedc4\",\n      opacity: 1,\n    },\n    \"&$selected\": {\n      color: \"#1de9b6\",\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    \"&:focus\": {\n      color: \"#1de9b6\",\n    },\n  },\n  selected: {},\n}))((props) => <Tab disableRipple {...props} />);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    // maxWidth:'600px'\n    // marginRight:'50%',\n  },\n  padding: {\n    padding: theme.spacing(2),\n  },\n  demo1: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  demo2: {\n    backgroundColor: \"#2e1534\",\n  },\n}));\n\nexport default function EncTypeTab(props) {\n  //lift up to reset on load of new tab\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.handleType(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\n        <AntTab label=\"Passhrase (Symmetric)\" />\n        <AntTab label=\"Key Pair (Asymmetric)\" />\n      </AntTabs>\n      <Typography className={classes.padding} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport DeleteOutlineSharpIcon from \"@material-ui/icons/DeleteOutlineSharp\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { resetAlert, keyError, privKeyPassError } from \"../utils/utils\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {snackLocation} from '../utils/config';\nimport { grey } from \"@material-ui/core/colors\";\n\nconst openpgp = require(\"openpgp\");\n\nconst useStyles = makeStyles((theme) => ({\n  keyHead: {\n    color: \"rgba(0, 0, 0, 0.54)\",\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  hr: {\n    color: \"rgba(0, 0, 0, 0.54)\",\n  },\n  main: {\n    backgroundColor: '#FAFAFA',\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      padding: theme.spacing(2),\n    },\n  }\n}\n));\n\nconst InFile = (props) => {\n  const handleDelete = () => {\n    props.setUploadedFile(null);\n    props.setFileMetaData(null);\n  };\n  const selectedFile = props.fileMetaData && (\n    <>\n      <FormLabel>{`Selected: ${props.fileMetaData.name}`}</FormLabel>\n      <IconButton onClick={handleDelete}>\n        <DeleteOutlineSharpIcon />\n      </IconButton>\n    </>\n  );\n  return (\n    <Box>\n      <Box mt={1}>\n        <Button\n          onClick={() => document.getElementById(\"keyInput\").click()}\n          variant=\"outlined\"\n          color=\"secondary\"\n        >\n          Browse for RSA Key\n        </Button>\n\n        {selectedFile}\n        {props.err.err && (\n          <p\n            class=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error Mui-required\"\n            id=\"pw-in-helper-text\"\n          >\n            {props.err.message}\n          </p>\n        )}\n        <input\n          id=\"keyInput\"\n          type=\"file\"\n          style={{ visibility: \"hidden\" }}\n          onChange={props.readFile}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nconst KeyInput = (props) => {\n  const classes = useStyles();\n\n  let privateKey = props.privateKey\n  let encrypt = props.encrypt\n\n  let resetErr = { err: false, key: false, message: false };\n\n  const [alert, setAlert] = useState(resetAlert);\n  const [byteKey, setByteKey] = useState();\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"byte\");\n  const [formTextInputError, setFormTextInputError] = useState(resetErr);\n  const [formByteInputError, setFormByteInputError] = useState(resetErr);\n  const [fileMetaData, setFileMetaData] = useState();\n  const [passPhraseError, setPassPhraseError] = useState(false);\n  const [passPhrase, setPassPhrase] = useState(\"\");\n\n  const handlePassPhrase = (e) => setPassPhrase(e.target.value);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlert(resetAlert);\n  };\n\n  const handleTextInput = (e) => {\n    setByteKey(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setInputTypeSelect(e.target.value);\n  };\n\n  const readKey = (e) => {\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    reader.readAsText(file);\n    setFileMetaData({ name: file.name, type: file.type.replace(\"/\", \"_\") });\n    reader.onload = () => {\n      setByteKey(reader.result);\n    };\n    reader.onerror = function () {};\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={formTextInputError.err && formTextInputError.message}\n        className={classes.textBox}\n        fullWidth={true}\n        error={formTextInputError.err}\n        id=\"outlined-multiline-static\"\n        label={\"RSA Key Input\"}\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        buttonLabel={\"key browse\"}\n        fileMetaData={fileMetaData}\n        err={formByteInputError}\n        formByteInputError={formByteInputError}\n        readFile={readKey}\n        setUploadedFile={setByteKey}\n        setFileMetaData={setFileMetaData}\n      />\n    );\n  }\n\n  const removeErrors = () => {\n    setAlert(resetAlert);\n    setFormTextInputError(resetErr);\n    setFormByteInputError(resetErr);\n    setPassPhraseError(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    removeErrors();\n\n    let err = false,\n      outkey;\n\n    if (passPhrase === \"\") {\n      setPassPhraseError(true);\n      err = true;\n    }\n\n    if (!byteKey || byteKey === \"\") {\n      if (inputTypeSelect === \"text\") {\n        setFormTextInputError({\n          ...formTextInputError,\n          err: true,\n          message: \"Key Text Required\",\n        });\n      } else {\n        setFormByteInputError({\n          ...formByteInputError,\n          err: true,\n          message: \"Key File Required\",\n        });\n      }\n      err = true;\n    } else {\n      privateKey\n        ? ({ key: outkey, error: err } = await handlePrivateKey(\n            byteKey,\n            passPhrase\n          ))\n        : ({ key: outkey, error: err } = await handlePublicKey(byteKey));\n    }\n\n    //continue to snag error in other input\n\n    props.handleKeyEncrypt(outkey, err);\n  };\n\n  const handlePublicKey = async (byteKey) => {\n    let rsaKey = (await openpgp.key.readArmored(byteKey)).keys[0];\n    if (!rsaKey) {\n      setAlert(keyError);\n      return { key: undefined, error: true };\n    } else {\n      return { key: rsaKey, error: false };\n    }\n  };\n\n  const handlePrivateKey = async (byteKey, passPhrase) => {\n    let output;\n    try {\n      const {\n        keys: [privateKey],\n      } = await openpgp.key.readArmored(byteKey);\n      await privateKey.decrypt(passPhrase);\n      output = [privateKey];\n      return { key: output, error: false };\n    } catch (e) {\n      e.message === \"Incorrect key passphrase\" && setAlert(privKeyPassError);\n      e.message === \"privateKey is undefined\" && setAlert(keyError);\n      return { key: undefined, error: true };\n    }\n  };\n\n  return (\n    <div className={classes.main}>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n      <Box>\n        <Box>\n          {/* <hr className={classes.hr}></hr> */}\n          <div className={classes.keyHead}>\n            <h3>Key Input</h3>\n          </div>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              value={inputTypeSelect}\n              defaultValue=\"top\"\n              onChange={handleInputType}\n            >\n              <FormControlLabel\n                value=\"byte\"\n                control={<Radio color=\"secondary\" />}\n                label=\"Import from file\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                value=\"text\"\n                control={<Radio color=\"primary\" />}\n                label=\"Paste in text\"\n                labelPlacement=\"end\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box>\n          <FormLabel component=\"legend\"></FormLabel>\n          <Box mt={3}>{inputType}</Box>\n        </Box>\n        {privateKey && (\n          <Box pt={3}>\n            <TextField\n              required\n              helperText={passPhraseError && \"PassPhrase Required!\"}\n              onChange={handlePassPhrase}\n              // className={props.class}\n              error={passPhraseError}\n              id=\"pw-in private key\"\n              type=\"password\"\n              label={\"Private Key PassPhrase\"}\n              variant=\"outlined\"\n              // variant=\"filled\"\n            />\n          </Box>\n        )}\n        <Box pt={3}>\n          <Button variant=\"contained\" color={\"primary\"} onClick={handleSubmit} disabled={props.loading}>\n            {encrypt ? \"Encrypt!\" : \"Decrypt!\"}\n            {props.loading && (\n            <CircularProgress\n              size={24}\n              color=\"primary\"\n              className={classes.buttonProgress}\n            />\n          )}\n          </Button>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default KeyInput;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Display from \"../utils/BrowserResult\";\nimport { mimes } from \"../utils/utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    padding: theme.spacing(2),\n\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      padding: theme.spacing(2),\n    },\n  },\n  button: {\n    margin: \"5px\",\n  },\n}));\n\nconst Result = (props) => {\n  const classes = useStyles();\n\n  let outbound = props.outbound;\n\n  const [openEnc, setOpenEnc] = useState(false);\n\n  let disableCopy =\n    outbound.outbound.length > 10000 || outbound.type === \"byte\";\n\n  const outputHandler = (decryptedVal) => {\n    const element = document.createElement(\"a\");\n    let file;\n    if (outbound.type === \"byte\") {\n      file = new Blob([decryptedVal.outbound]);\n    } else {\n      file = new Blob([decryptedVal.outbound], {\n        type: mimes[decryptedVal.ext],\n      });\n    }\n    element.href = URL.createObjectURL(file);\n    element.download =\n      \"pep_output_\" +\n      element.href.split(\"/\")[3].split(\"-\")[0] +\n      \".\" +\n      decryptedVal.ext;\n    element.click();\n    element.remove();\n  };\n\n  return (\n    <div className={classes.main}>\n      <Box pt={2}>\n        <Typography variant=\"h6\" gutterBottom>\n          Decrypted Data\n        </Typography>\n\n        <Box mb={2} pr={4}>\n          <Button\n            disabled={disableCopy}\n            onClick={() => setOpenEnc(!openEnc)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            {!openEnc ? \"In Browser\" : \"Hide\"}\n          </Button>\n          <Button\n            onClick={() => outputHandler(outbound)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            Download\n          </Button>\n          {openEnc && <Display val={outbound.outbound} id=\"encryptedResult\" />}\n        </Box>\n        <Box>\n          <Button\n            onClick={props.reset}\n            variant=\"contained\"\n            className={classes.button}\n            color={\"primary\"}\n          >\n            {\" \"}\n            New Decryption{\" \"}\n          </Button>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default Result;\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport DeleteOutlineSharpIcon from \"@material-ui/icons/DeleteOutlineSharp\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport KeyInput from \"../utils/KeyInput\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\n//todo file type (text, csv) or image based\n\nconst useStyles = makeStyles((theme) => ({\n\n  textBox: {\n    maxWidth: \"700px\",\n  },\n\n  dropSelect: {\n    width: \"225px\",\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  main: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n}));\n\nconst InFile = (props) => {\n  // const classes = useStyles();\n\n  const handleDelete = () => {\n    props.setUploadedFile(null);\n    props.setFileMetaData(null);\n  };\n  const selectedFile = props.fileMetaData && (\n    <>\n      <FormLabel>{`Selected: ${props.fileMetaData.name}`}</FormLabel>\n      <IconButton onClick={handleDelete}>\n        <DeleteOutlineSharpIcon />\n      </IconButton>\n    </>\n  );\n  return (\n    <Box>\n      <Button\n        onClick={() => document.getElementById(\"inp\").click()}\n        variant=\"outlined\"\n        color=\"secondary\"\n      >\n        Browse for PGP File\n      </Button>{\" \"}\n      {selectedFile}\n      {props.formByteInputError && (\n        <p\n          class=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error Mui-required\"\n          id=\"pw-in-helper-text\"\n        >\n          File Required\n        </p>\n      )}\n      <input\n        id=\"inp\"\n        type=\"file\"\n        style={{ visibility: \"hidden\" }}\n        onChange={props.readFile}\n      />\n      {/* </Box> */}\n    </Box>\n  );\n};\n\nconst DecryptForm = (props) => {\n  const classes = useStyles();\n\n  let resetErrors = {\n    formTextInputError: false,\n    formByteInputError: false,\n    passPhraseMissingError: false,\n    fileTypeErr: false,\n    fileExtErr: false,\n  };\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"byte\");\n  const [textInput, textInputState] = useState(\"\");\n  const [errors, setErrors] = useState(resetErrors);\n  const [passPhrase, passPhraseState] = useState(\"\");\n  const [uploadedFile, setUploadedFile] = useState();\n  const [fileType, setFileType] = useState(\"\");\n  const [fileExt, setFileExt] = useState(\"\");\n  const [fileMetaData, setFileMetaData] = useState();\n\n  const handlePassPhrase = (e) => {\n    passPhraseState(e.target.value);\n  };\n\n  const handleFileType = (e) => {\n    let extIn = e.target.value;\n    setFileExt(extIn);\n    if (extIn === \"txt\" || extIn === \"csv\") {\n      setFileType(\"text\");\n    } else {\n      setFileType(\"byte\");\n    }\n  };\n\n  const readFile = (e) => {\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    setFileMetaData({ name: file.name, type: file.type.replace(\"/\", \"_\") });\n\n    reader.onload = function () {\n      setUploadedFile(new Uint8Array(reader.result));\n    };\n    reader.onerror = function () {};\n  };\n\n  //text input\n  const handleTextInput = (e) => {\n    textInputState(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setErrors({\n      ...errors,\n      formTextInputError: false,\n      formByteInputError: false,\n    });\n    setInputTypeSelect(e.target.value);\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={errors.formTextInputError && \"Please Select a file object!\"}\n        className={classes.textBox}\n        fullWidth={true}\n        error={errors.formTextInputError}\n        id=\"outlined-multiline-static\"\n        label=\"Enter something like: -----BEGIN PGP MESSAGE-----\"\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        fileMetaData={fileMetaData}\n        formByteInputError={errors.formByteInputError}\n        readFile={readFile}\n        setUploadedFile={setUploadedFile}\n        setFileMetaData={setFileMetaData}\n      />\n    );\n  }\n\n  const handleFormSubmit = (e) => {\n    e && e.preventDefault();\n    setErrors(resetErrors);\n\n    let byteErr,\n      textErr,\n      pwErr,\n      fileTypeErr,\n      fileExtErr = false;\n\n    let totalErr = false;\n\n    if (inputTypeSelect === \"text\" && (!textInput || textInput === \"\")) {\n      textErr = true;\n      totalErr = true;\n    } else if (inputTypeSelect === \"byte\" && !uploadedFile) {\n      totalErr = true;\n      byteErr = true;\n    }\n\n    if (fileType === \"\") {\n      fileTypeErr = true;\n      totalErr = true;\n    } else if (fileType === \"text\" && fileExt === \"\") {\n      fileExtErr = true;\n      totalErr = true;\n    }\n\n    if (props.encType === 0 && passPhrase === \"\") {\n      pwErr = true;\n      totalErr = true;\n    } else if (props.encType === 0 && totalErr === false) {\n      handleDecrypt(passPhrase);\n    }\n\n    setErrors({\n      formTextInputError: textErr,\n      formByteInputError: byteErr,\n      passPhraseMissingError: pwErr,\n      fileTypeErr: fileTypeErr,\n      fileExtErr: fileExtErr,\n    });\n    return totalErr;\n  };\n\n  const handleKeyDecrypt = (byteKey, keyErr) => {\n    let errCheck = handleFormSubmit();\n    if (!errCheck && !keyErr) {\n      handleDecrypt(byteKey);\n    }\n  };\n  const handleDecrypt = (encryptionKey) => {\n    let aes, rsa;\n    props.encType === 0 ? (aes = encryptionKey) : (rsa = encryptionKey);\n\n    if (fileType === \"text\") {\n      props.byteDecrypt(aes, rsa, textInput, {\n        fileType: fileType,\n        ext: fileExt,\n      });\n    } else if (fileType === \"byte\") {\n      props.byteDecrypt(aes, rsa, textInput, {\n        fileType: fileType,\n        ext: fileExt,\n      });\n    }\n  };\n  return (\n    <form onSubmit={(e) => handleFormSubmit(e)}>\n      <div className={classes.main}>\n        <Box mb={2}>\n          <Box pt={2} pb={2}>\n            <p>Simply supply you encrypted file or text.</p>\n            <p>Let us know the expected output format.</p>\n            {props.encType === 0 ? (\n              <p>Supply your passphrase.</p>\n            ) : (\n              <p>Supply your private key and passphrase.</p>\n            )}\n\n            <p>Decrypt.</p>\n          </Box>\n          <FormControl component=\"fieldset\">\n            {/* <FormLabel component=\"legend\">Input Format</FormLabel> */}\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              value={inputTypeSelect}\n              defaultValue=\"top\"\n              onChange={handleInputType}\n            >\n              <FormControlLabel\n                value=\"byte\"\n                control={<Radio color=\"secondary\" />}\n                label=\"Load my gibberish\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                value=\"text\"\n                control={<Radio color=\"primary\" />}\n                label=\"Paste my gibberish\"\n                labelPlacement=\"end\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box pb={4}>{inputType}</Box>\n        <Box pb={2}>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            error={errors.fileTypeErr ? true : false}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              File Type\n            </InputLabel>\n            <Select\n              required\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={fileExt}\n              onChange={handleFileType}\n              className={classes.dropSelect}\n              label=\"Text FIle Type\"\n            >\n              <MenuItem value={\"txt\"}>.txt</MenuItem>\n              <MenuItem value={\"csv\"}>.csv</MenuItem>\n              <MenuItem value={\"byte\"}>Something Else</MenuItem>\n            </Select>\n            {errors.fileTypeErr && (\n              <FormHelperText>\n                Please enter the format of the decrypted file\n              </FormHelperText>\n            )}\n          </FormControl>\n        </Box>\n      </div>\n\n      {props.encType === 0 ? (\n        <div className={classes.main}>\n          <Box>\n            <TextField\n              required\n              helperText={\n                errors.passPhraseMissingError && \"PassPhrase Required!\"\n              }\n              onChange={handlePassPhrase}\n              error={errors.passPhraseMissingError}\n              id=\"pw-in\"\n              type=\"password\"\n              label={\"PassPhrase\"}\n              variant=\"outlined\"\n            />\n          </Box>\n          <Box pt={3}>\n            <Button\n              type=\"submit\"\n              onClick={handleFormSubmit}\n              variant=\"contained\"\n              color={\"primary\"}\n              disabled={props.loading}\n            >\n              Decrypt\n              {props.loading && (\n                <CircularProgress\n                  size={24}\n                  color=\"primary\"\n                  className={classes.buttonProgress}\n                />\n              )}\n            </Button>\n          </Box>\n        </div>\n      ) : (\n        <KeyInput\n          loading={props.loader}\n          privateKey={true}\n          encrypt={false}\n          handleKeyEncrypt={handleKeyDecrypt}\n        />\n      )}\n    </form>\n  );\n};\n\nexport default DecryptForm;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Result from \"./DecResult\";\nimport EncTypeTab from \"../utils/EncTypeTab\";\nimport DecryptForm from \"./DecryptForm\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport * as utils from \"../utils/utils\";\nimport { snackLocation } from \"../utils/config\";\n\nconst openpgp = require(\"openpgp\");\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n    },\n  },\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nconst Decrypt = (props) => {\n  const classes = useStyles();\n  const [success, setSuccess] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [encType, setEncType] = useState(0);\n  const [alert, setAlert] = useState(utils.resetAlert);\n  const [outbound, setOutBound] = useState();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlert(utils.resetAlert);\n  };\n\n  const byteDecrypt = async (passPhrase, privateKey, textInput, decType) => {\n    setLoader(true);\n    setAlert(utils.resetAlert);\n\n    let encIn;\n    try {\n      encIn = {\n        message: await openpgp.message.readArmored(textInput),\n      };\n    } catch (e) {\n      let format =\n        e.message === \"Misformed armored text\" ||\n        e.message === \"String contains an invalid character\";\n      format === true ? setAlert(utils.decFormat) : setAlert(utils.decGeneric);\n      return;\n    }\n    privateKey\n      ? (encIn.privateKeys = privateKey)\n      : (encIn.passwords = [passPhrase]);\n\n    decType.fileType === \"byte\" && (encIn.format = \"binary\");\n\n    try {\n      const { data: decrypted } = await openpgp.decrypt(encIn);\n\n      let outFileType = await utils.extSelect(decrypted, decType);\n\n      setOutBound({\n        outbound: decrypted,\n        ext: outFileType,\n        type: decType.fileType,\n      });\n      outputHandler();\n    } catch (e) {\n      e.message ===\n        \"Error decrypting message: Session key decryption failed.\" &&\n        setAlert(utils.decPW);\n      return;\n    }\n  };\n\n  const outputHandler = () => {\n    setSuccess(true);\n    setLoader(false);\n    setAlert(utils.decSuccess);\n  };\n\n  const reset = () => {\n    setSuccess(false);\n    setAlert(utils.resetAlert);\n  };\n\n  const handleDecType = (type) => {\n    setEncType(type);\n  };\n\n  let form = (\n    <DecryptForm byteDecrypt={byteDecrypt} encType={encType} loader={loader} />\n  );\n\n  return (\n    <div>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n      <Box p={2}>\n        <div className={classes.header}>\n          {!success && <EncTypeTab handleType={handleDecType} />}\n          <Typography variant=\"h5\" gutterBottom>\n            {encType === 0 ? <b>Passphrase Decryption</b>: <b>Key Decryption</b>}\n          </Typography>\n        </div>\n        {success ? <Result reset={reset} outbound={outbound} /> : form}\n      </Box>\n    </div>\n  );\n};\n\nexport default Decrypt;\n"],"sourceRoot":""}