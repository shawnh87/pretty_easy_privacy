{"version":3,"sources":["components/NavBarMenu.js","components/utils/config.js","components/NavBar.js","components/utils/BrowserResult.js","components/encrypt/EncResult.js","components/utils/EncTypeTab.js","components/utils/Passphrase.js","components/utils/utils.js","components/utils/KeyInput.js","components/encrypt/EncryptForm.js","components/encrypt/Encrypt.js","components/decrypt/DecResult.js","components/decrypt/DecryptForm.js","components/decrypt/Decrypt.js","components/key_gen/KeyGen.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","zIndex","paper","marginRight","spacing","icon","color","MenuListComposition","props","classes","React","useState","open","setOpen","anchorRef","useRef","handleClose","event","selection","menuStateHandler","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","useEffect","focus","className","Button","ref","aria-controls","undefined","aria-haspopup","onClick","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","MenuItem","e","snackLocation","vertical","horizontal","menuOptions","1","2","3","4","flexGrow","menuButton","state","title","textAlign","NavBar","AppBar","position","Toolbar","IconButton","edge","aria-label","setMenuState","Typography","variant","appState","result","height","width","overflowY","button","margin","copy","marginLeft","Display","openSnack","setOpenSnack","inputId","keyIn","val","Tooltip","copyText","document","getElementById","textContent","textArea","createElement","setAttribute","body","append","select","setSelectionRange","execCommand","remove","Snackbar","anchorOrigin","onClose","message","heading","marginTop","marginBottom","Result","openEnc","setOpenEnc","armorTxt","disableCopy","length","Grid","container","wrap","item","xs","gutterBottom","Box","mb","disabled","textVal","element","file","Blob","type","href","URL","createObjectURL","download","split","ext","click","outputHandler","FormHelperText","paddingLeft","reset","AntTabs","withStyles","borderBottom","indicator","backgroundColor","Tabs","AntTab","textTransform","minWidth","fontWeight","typography","fontWeightRegular","fontFamily","join","opacity","fontWeightMedium","selected","Tab","disableRipple","padding","demo1","palette","background","demo2","EncTypeTab","value","setValue","onChange","newValue","handleType","label","pwInput","pw","buttonProgress","top","left","PassPhraseConfirm","confirmPassPhrase","setConfirmPassPhrase","status","confirmError","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","required","autoFocus","error","fullWidth","DialogActions","handleConfirm","buttonText","PassPhrase","passPhrase","passPhraseState","passPhraseMissingError","errors","setErrors","score","resp","strength","setStrength","strengthResp","0","helperText","zxcvbn","class","pt","loading","err","handleSubmit","mainButtonText","CircularProgress","size","modalButtonText","FileType","require","mimes","txt","csv","html","css","extSelect","decrypted","decType","a","fileType","fromBuffer","bufferType","decFormat","show","severity","decGeneric","decPW","decSuccess","encSuccess","encError","resetAlert","keyError","privKeyPassError","openpgp","keyHead","InFile","selectedFile","fileMetaData","FormLabel","name","setUploadedFile","setFileMetaData","component","mt","visibility","readFile","KeyInput","inputType","privateKey","encrypt","resetErr","alert","setAlert","byteKey","setByteKey","inputTypeSelect","setInputTypeSelect","formTextInputError","setFormTextInputError","formByteInputError","setFormByteInputError","passPhraseError","setPassPhraseError","setPassPhrase","reason","textBox","multiline","rows","buttonLabel","files","reader","FileReader","readAsText","replace","onload","onerror","handlePrivateKey","outkey","handlePublicKey","handleKeyEncrypt","readArmored","rsaKey","keys","decrypt","output","autoHideDuration","Alert","FormControl","RadioGroup","row","defaultValue","FormControlLabel","control","Radio","labelPlacement","pwMeter","maxWidth","EncryptForm","textInput","textInputState","uploadedFile","readAsArrayBuffer","Uint8Array","handleFormSubmit","handleEncrypt","encryptionKey","aes","rsa","encType","onSubmit","loader","keyErr","pre","fontSize","border","Encrypt","success","setSuccess","setLoader","setEncType","setArmorTxt","byteEncrypt","pubKey","binInd","inputMessage","fromBinary","fromText","encIn","armor","publicKeys","passwords","packets","write","form","outbound","decryptedVal","dropSelect","DecryptForm","resetErrors","fileTypeErr","fileExtErr","setFileType","fileExt","setFileExt","byteErr","textErr","pwErr","totalErr","handleDecrypt","byteDecrypt","formControl","InputLabel","Select","labelId","extIn","main","Decrypt","utils","setOutBound","format","privateKeys","data","outFileType","formField","openPub","setOpenPub","openPriv","setOpenPriv","dlKey","encKeys","privateKeyArmored","publicKeyArmored","KeyGen","setKey","email","keyFields","setKeyFields","setLoading","emailNull","emailFormat","emMessage","handleCreate","passKey","generateKey","userIds","rsaBits","passphrase","nameNull","validFormat","test","paddingTop","layout","breakpoints","up","App","menuState","Container","Boolean","window","location","hostname","match","createMuiTheme","primary","deepPurple","secondary","teal","ReactDOM","render","Fragment","ThemeProvider","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"iZAaMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,OAAQ,MAEVC,MAAO,CACLC,YAAaL,EAAMM,QAAQ,IAE7BC,KAAM,CAAEC,MAAO,aAGF,SAASC,EAAoBC,GAC1C,IAAMC,EAAUb,IADiC,EAEzBc,IAAMC,UAAS,GAFU,mBAE1CC,EAF0C,KAEpCC,EAFoC,KAG3CC,EAAYJ,IAAMK,OAAO,MAMzBC,EAAc,SAACC,EAAOC,GACtBA,GACFV,EAAMW,iBAAiBD,GAGrBJ,EAAUM,SAAWN,EAAUM,QAAQC,SAASJ,EAAMK,SAI1DT,GAAQ,IAGV,SAASU,EAAkBN,GACP,QAAdA,EAAMO,MACRP,EAAMQ,iBACNZ,GAAQ,IAKZ,IAAMa,EAAWhB,IAAMK,OAAOH,GAS9B,OARAF,IAAMiB,WAAU,YACW,IAArBD,EAASN,UAA6B,IAATR,GAC/BE,EAAUM,QAAQQ,QAGpBF,EAASN,QAAUR,IAClB,CAACA,IAGF,yBAAKiB,UAAWpB,EAAQV,MACtB,6BACE,kBAAC+B,EAAA,EAAD,CACEC,IAAKjB,EACLkB,gBAAepB,EAAO,sBAAmBqB,EACzCC,gBAAc,OACdC,QAxCa,WACnBtB,GAAQ,SAACa,GAAD,OAAeA,OAyCfd,EAGA,kBAAC,IAAD,CAAciB,UAAWpB,EAAQJ,OAFjC,kBAAC,IAAD,CAAUwB,UAAWpB,EAAQJ,QAKjC,kBAAC+B,EAAA,EAAD,CACExB,KAAMA,EACNyB,SAAUvB,EAAUM,QACpBkB,UAAML,EACNM,YAAU,EACVC,eAAa,IAEZ,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACC,kBAACC,EAAA,EAAD,iBACMF,EADN,CAEEG,MAAO,CACLC,gBACgB,WAAdH,EAAyB,aAAe,mBAG5C,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBC,YAAahC,GAC9B,kBAACiC,EAAA,EAAD,CACEC,cAAetC,EACfuC,GAAG,iBACHC,UAAW7B,GAEX,kBAAC8B,EAAA,EAAD,CAAUlB,QAAS,SAACmB,GAAD,OAAOtC,EAAYsC,EAAG,KAAzC,WAGA,kBAACD,EAAA,EAAD,CAAUlB,QAAS,SAACmB,GAAD,OAAOtC,EAAYsC,EAAG,KAAzC,WAGA,kBAACD,EAAA,EAAD,CAAUlB,QAAS,SAACmB,GAAD,OAAOtC,EAAYsC,EAAG,KAAzC,kBAGA,kBAACD,EAAA,EAAD,CAAUlB,QAAS,SAACmB,GAAD,OAAOtC,EAAYsC,EAAG,KAAzC,iBC5Gb,IAAMC,EAAgB,CAAEC,SAAU,SAAUC,WAAY,QAElDC,EAAc,CAACC,EAAE,UAAWC,EAAE,UAAWC,EAAG,eAAgBC,EAAG,S,kBCQtElE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJgE,SAAU,GAEZC,WAAY,CACV7D,YAAaL,EAAMM,QAAQ,IAG7B6D,MAAO,CACLF,SAAU,GAEZG,MAAO,CACLC,UAAW,cAuCAC,EAlCA,SAAC5D,GACd,IAAMC,EAAUb,IAMhB,OACE,6BACE,kBAACyE,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACL5C,UAAWpB,EAAQuD,WACnB1D,MAAM,UACNoE,aAAW,QAEX,kBAAC,EAAD,CAAYvD,iBAdG,SAAC8C,GACxBzD,EAAMmE,aAAaV,OAeb,kBAACW,EAAA,EAAD,CAAYC,QAAQ,KAAKhD,UAAWpB,EAAQwD,OACzCP,EAAYlD,EAAMsE,WAErB,kBAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKhD,UAAWpB,EAAQyD,OAA5C,uBAGA,kBAACM,EAAA,EAAD,KACE,kBAAC,IAAD,CAAYlE,MAAM,mB,uFC5CxBV,EAAYC,aAAW,SAACC,GAAD,MAAY,CAEvCiF,OAAQ,CAENC,OAAQ,QACRC,MAAO,QACPC,UAAW,UAEbhF,MAAO,CACL8E,OAAQ,QACRC,MAAO,SAETE,OAAQ,CACNC,OAAQ,OAEVC,KAAM,CACJC,WAAY,aA8DCC,EAzDC,SAAC/E,GACf,IAAMC,EAAUb,IADS,EAESe,mBAAS,CACzCC,MAAM,EACN4C,SAAU,SACVC,WAAY,SALW,mBAElB+B,EAFkB,KAEPC,EAFO,KAQjBjC,EAA+BgC,EAA/BhC,SAAUC,EAAqB+B,EAArB/B,WAAY7C,EAAS4E,EAAT5E,KAE1B8E,EAAUlF,EAAM2C,GAChBwC,EAAQnF,EAAMoF,IAoBlB,OACE,oCACE,yBAAK/D,UAAWpB,EAAQ4E,MACtB,kBAACQ,EAAA,EAAD,CAAS3B,MAAM,QACb,kBAACM,EAAA,EAAD,CAAYE,aAAW,OAAOvC,QAtBnB,WACjBsD,EAAa,2BAAKD,GAAN,IAAiB5E,MAAM,KACnC,IAAIkF,EAAWC,SAASC,eAAeN,GAASO,YAC1CC,EAAWH,SAASI,cAAc,YACxCD,EAASE,aAAa,KAAM,QAC5BF,EAASD,YAAcH,EACvBC,SAASM,KAAKC,OAAOJ,GACrBA,EAASK,SACTL,EAASM,kBAAkB,EAAG,OAG9BT,SAASU,YAAY,QACrBP,EAASQ,WAWD,kBAAC,IAAD,SAIN,kBAAC5D,EAAA,EAAD,CAAOjB,UAAWpB,EAAQP,OACxB,yBAAK2B,UAAWpB,EAAQsE,QACtB,yBAAK5B,GAAIuC,GAAUC,KAIvB,kBAACgB,EAAA,EAAD,CACEC,aAAc,CAAEpD,WAAUC,cAC1B7C,KAAMA,EACNiG,QArBc,WAClBpB,EAAa,2BAAKD,GAAN,IAAiB5E,MAAM,MAqB/BkG,QAAQ,sBACRtF,IAAKgC,EAAWC,M,SCtEpB7D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiH,QAAS,CACPC,UAAW,OACXC,aAAc,OACd9C,UAAW,QAEbY,OAAQ,CAENC,OAAQ,QACRC,MAAO,QACPC,UAAW,UAEbhF,MAAO,CACL8E,OAAQ,QACRC,MAAO,SAETE,OAAQ,CACNC,OAAQ,WA8EG8B,EAxEA,SAAC1G,GACd,IAAMC,EAAUb,IADQ,EAGMe,oBAAS,GAHf,mBAGjBwG,EAHiB,KAGRC,EAHQ,KAKpBC,EAAW7G,EAAM6G,SACjBC,EAAcD,EAASA,SAASE,OAAS,IAY7C,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,KAAK,SAAStH,QAAS,GACrC,kBAACoH,EAAA,EAAD,CAAMG,MAAI,IACV,kBAACH,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GACX,kBAAChD,EAAA,EAAD,CAAY/C,UAAWpB,EAAQsG,QAASlC,QAAQ,KAAKgD,cAAY,GAAjE,2BAGA,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACjG,EAAA,EAAD,CACEkG,SAAUV,EACVnF,QAAS,kBAAMiF,GAAYD,IAC3BtC,QAAQ,WACRvE,MAAO,YACPuB,UAAWpB,EAAQ0E,QALrB,cAUA,kBAACrD,EAAA,EAAD,CACEK,QAAS,kBA7BG,SAAC8F,GACrB,IAAMC,EAAUnC,SAASI,cAAc,KACjCgC,EAAO,IAAIC,KAAK,CAACH,EAAQZ,UAAW,CAAEgB,KAAM,eAClDH,EAAQI,KAAOC,IAAIC,gBAAgBL,GACnCD,EAAQO,SAAR,UACKP,EAAQI,KAAKI,MAAM,KAAK,GAD7B,YACmCT,EAAQU,IAD3C,UAEAT,EAAQU,QACRV,EAAQxB,SAsBemC,CAAcxB,IAC7BxC,QAAQ,WACRvE,MAAO,YACPuB,UAAWpB,EAAQ0E,QAJrB,YAQCmC,GACC,kBAACwB,EAAA,EAAD,CAAgBlG,MAAO,CAAEmG,YAAa,QAAtC,oBAID5B,GAAW,kBAAC,EAAD,CAASvB,IAAKyB,EAASA,SAAUlE,GAAG,qBAOlD,kBAAC2E,EAAA,EAAD,KACE,kBAAChG,EAAA,EAAD,CACEK,QAAS3B,EAAMwI,MACfnE,QAAQ,YACRhD,UAAWpB,EAAQ0E,OACnB7E,MAAO,WAEN,IANH,iBAOiB,S,yBC5FrB2I,EAAUC,YAAW,CACzBnJ,KAAM,CACJoJ,aAAc,qBAGhBC,UAAW,CACTC,gBAAiB,YANLH,CAQbI,KAEGC,EAASL,aAAW,SAACpJ,GAAD,MAAY,CACpCC,KAAM,CACJyJ,cAAe,OACfC,SAAU,GACVC,WAAY5J,EAAM6J,WAAWC,kBAC7BzJ,YAAaL,EAAMM,QAAQ,GAC3ByJ,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,KACP,UAAW,CACTxJ,MAAO,UACPyJ,QAAS,GAEX,aAAc,CACZzJ,MAAO,UACPoJ,WAAY5J,EAAM6J,WAAWK,kBAE/B,UAAW,CACT1J,MAAO,YAGX2J,SAAU,MA9BGf,EA+BX,SAAC1I,GAAD,OAAW,kBAAC0J,EAAA,EAAD,eAAKC,eAAa,GAAK3J,OA4BhCZ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJgE,SAAU,GAIZqG,QAAS,CACPA,QAAStK,EAAMM,QAAQ,IAEzBiK,MAAO,CACLhB,gBAAiBvJ,EAAMwK,QAAQC,WAAWrK,OAE5CsK,MAAO,CACLnB,gBAAiB,eAIN,SAASoB,GAAWjK,GAGjC,IAAMC,EAAUb,IAHwB,EAIdc,IAAMC,SAAS,GAJD,mBAIjC+J,EAJiC,KAI1BC,EAJ0B,KAUxC,OACE,yBAAK9I,UAAWpB,EAAQV,MACtB,kBAACkJ,EAAD,CAASyB,MAAOA,EAAOE,SANN,SAAC3J,EAAO4J,GAC3BF,EAASE,GACTrK,EAAMsK,WAAWD,IAIgCnG,aAAW,eACxD,kBAAC6E,EAAD,CAAQwB,MAAM,2BACd,kBAACxB,EAAD,CAAQwB,MAAM,6BAEhB,kBAACnG,EAAA,EAAD,CAAY/C,UAAWpB,EAAQ2J,W,qKC9F/BxK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkL,QAAS,CACP/F,MAAO,SAETgG,GAAI,CACF3K,MAAO,UACP0G,UAAW,QAEbkE,eAAgB,CAEd5G,SAAU,WACV6G,IAAK,MACLC,KAAM,MACNpE,WAAY,GACZ1B,YAAa,QAIX+F,GAAoB,SAAC7K,GAAW,IAAD,EACeG,qBADf,mBAC5B2K,EAD4B,KACTC,EADS,KAO7BC,EAAShL,EAAMI,KAEfmK,EAAQvK,EAAMiL,aAChB,mBACA,0BAEJ,OACE,6BACE,kBAACC,GAAA,EAAD,CACE9K,KAAM4K,EACN3E,QAASrG,EAAMQ,YACf2K,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAazI,GAAG,qBAAhB,2BAGA,kBAAC0I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,+CAGA,kBAACC,GAAA,EAAD,CACEC,UAAQ,EACRC,WAAS,EACTC,MAAO1L,EAAMiL,aACbb,SA5BsB,SAACtH,GAC/BiI,EAAqBjI,EAAEhC,OAAOoJ,QA4BtBtF,OAAO,QACPjC,GAAG,OACH4H,MAAOA,EACP1C,KAAK,WACL8D,WAAS,KAGb,kBAACC,GAAA,EAAD,KACE,kBAACtK,EAAA,EAAD,CAAQK,QAAS3B,EAAMQ,YAAaV,MAAM,WAA1C,UAGA,kBAACwB,EAAA,EAAD,CACEuG,KAAK,SACLlG,QAAS,kBAAM3B,EAAM6L,cAAcf,IACnChL,MAAM,WAELE,EAAM8L,gBAuHJC,GA/GI,SAAC/L,GAClB,IAAMC,EAAUb,KADY,EAGUe,mBAAS,IAHnB,mBAGrB6L,EAHqB,KAGTC,EAHS,OAIA9L,mBAAS,CACnC8K,cAAc,EACdiB,wBAAwB,IANE,mBAIrBC,EAJqB,KAIbC,EAJa,OAQJjM,oBAAS,GARL,mBAQrBC,EARqB,KAQfC,EARe,OASIF,mBAAS,CAAEkM,MAAO,KAAMC,KAAM,OATlC,mBASrBC,EATqB,KASXC,EATW,KAWxBC,EAAe,CACjBC,EAAG,wBACHvJ,EAAG,mBACHC,EAAG,oBACHC,EAAG,oBACHC,EAAG,+CAoCL,OACE,6BACE,kBAACgE,EAAA,EAAD,KAEE,kBAACN,EAAA,EAAD,CAAMC,WAAS,EAACrH,QAAS,GACvB,kBAACoH,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACoE,GAAA,EAAD,CACEC,UAAQ,EACRmB,WACER,EAAOD,wBAA0B,uBAEnC9B,SA5Ca,SAACtH,GACxBmJ,EAAgBnJ,EAAEhC,OAAOoJ,OACzB,IAAM3F,EAASqI,KAAO9J,EAAEhC,OAAOoJ,OAC/BsC,EAAY,CACVH,MAAwB,IAAjB9H,EAAO8H,MAAc,IAAM9H,EAAO8H,MACzCC,KAAMG,EAAalI,EAAO8H,UAwClBhL,UAAWrB,EAAM6M,MACjBnB,MAAOS,EAAOD,uBACdvJ,GAAG,QACHkF,KAAK,WACL0C,MAAO,aACPlG,QAAQ,cAIX2H,EAAWjF,OAAS,GACnB,kBAACC,EAAA,EAAD,CAAM3F,UAAWpB,EAAQwK,GAAItD,MAAI,GAC9BoF,EAASD,QAMlB,kBAAChF,EAAA,EAAD,CAAKwF,GAAI,GACP,kBAACxL,EAAA,EAAD,CACEuG,KAAK,SACLxD,QAAQ,YACRvE,MAAO,UACP0H,SAAUxH,EAAM+M,QAChBpL,QA3DW,SAACmB,GAClBA,EAAE7B,iBACFmL,EAAU,2BAAKD,GAAN,IAAcD,wBAAwB,KAC/C,IAAMc,EAAMhN,EAAMiN,aAAanK,GAE1BkJ,GACHI,EAAU,2BAAKD,GAAN,IAAcD,wBAAwB,KAE5CF,IAAcgB,GAGjB3M,GAAQ,KAkDHL,EAAMkN,eACNlN,EAAM+M,SACL,kBAACI,GAAA,EAAD,CACEC,KAAM,GACNtN,MAAM,UACNuB,UAAWpB,EAAQyK,mBAM3B,kBAAC,GAAD,CACEtK,KAAMA,EACN0L,WAAY9L,EAAMqN,gBAClB7M,YAAa,kBAAMH,GAAQ,IAC3BwL,cA7DgB,SAACf,GACjBA,IAAsBkB,GACxB3L,GAAQ,GACRL,EAAM6L,cAAcG,IAEpBI,EAAU,2BAAKD,GAAN,IAAclB,cAAc,MAyDnCA,aAAckB,EAAOlB,iB,UCjMvBqC,GAAWC,EAAQ,KAEZC,GAAQ,CACnBC,IAAK,aACLC,IAAK,WACLC,KAAM,YACNC,IAAK,YAGMC,GAAS,uCAAG,WAAOC,EAAWC,GAAlB,eAAAC,EAAA,yDAEA,SAAnBD,EAAQE,SAFW,gCAGDX,GAASY,WAAWJ,GAHnB,OAGrBK,EAHqB,kBAMnBA,EANmB,yCAOdA,EAAWhG,KAPG,UAQS,SAArB4F,EAAQE,SARI,0CASdF,EAAQ5F,KATM,iCAWd,OAXc,4CAAH,wDAeTiG,GAAY,CACvBC,MAAM,EACNC,SAAU,QACVhI,QACE,oHAGSiI,GAAa,CACxBF,MAAM,EACNC,SAAU,QACVhI,QAAS,2CAGEkI,GAAQ,CACnBH,MAAM,EACNC,SAAU,QACVhI,QAAS,4BAGEmI,GAAa,CACxBJ,MAAM,EACNC,SAAU,UACVhI,QAAS,2BAGEoI,GAAa,CACxBL,MAAM,EACN/H,QAAS,sBACTgI,SAAU,WAGCK,GAAW,CACtBN,MAAM,EACN/H,QAAS,0CACTgI,SAAU,SAGCM,GAAa,CACxBP,MAAM,EACN/H,QAAS,GACTgI,SAAU,IAICO,GAAW,CACtBR,MAAM,EACN/H,QAAS,qCACTgI,SAAU,SAGCQ,GAAmB,CAC9BT,MAAM,EACN/H,QAAS,0CACTgI,SAAU,SC3DNS,GAAUxB,EAAQ,IAElBnO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0P,QAAS,CACPlP,MAAO,uBAET4K,eAAgB,CAEd5G,SAAU,WACV6G,IAAK,MACLC,KAAM,MACNpE,WAAY,GACZ1B,YAAa,QAIXmK,GAAS,SAACjP,GACd,IAIMkP,EAAelP,EAAMmP,cACzB,oCACE,kBAACC,GAAA,EAAD,yBAAyBpP,EAAMmP,aAAaE,OAC5C,kBAACrL,EAAA,EAAD,CAAYrC,QAPK,WACnB3B,EAAMsP,gBAAgB,MACtBtP,EAAMuP,gBAAgB,QAMlB,kBAAC,KAAD,QAIN,OACE,kBAACjI,EAAA,EAAD,KACE,kBAAC8H,GAAA,EAAD,CAAWI,UAAU,UAArB,mBACA,kBAAClI,EAAA,EAAD,CAAKmI,GAAI,GACP,kBAACnO,EAAA,EAAD,CACEK,QAAS,kBAAM4D,SAASC,eAAe,YAAY4C,SACnD/D,QAAQ,WACRvE,MAAM,aAHR,cAQCoP,EACAlP,EAAMgN,IAAIA,KACT,uBACEH,MAAM,4EACNlK,GAAG,qBAEF3C,EAAMgN,IAAI1G,SAGf,2BACE3D,GAAG,WACHkF,KAAK,OACLzF,MAAO,CAAEsN,WAAY,UACrBtF,SAAUpK,EAAM2P,cA8OXC,GAvOE,SAAC5P,GAChB,IA6CI6P,EA7CE5P,EAAUb,KAEZ0Q,EAAa9P,EAAM8P,WACnBC,EAAU/P,EAAM+P,QAEhBC,EAAW,CAAEhD,KAAK,EAAOhM,KAAK,EAAOsF,SAAS,GANxB,EAQAnG,mBAASyO,IART,mBAQnBqB,EARmB,KAQZC,EARY,OASI/P,qBATJ,mBASnBgQ,EATmB,KASVC,EATU,OAUoBjQ,mBAAS,QAV7B,mBAUnBkQ,EAVmB,KAUFC,EAVE,OAW0BnQ,mBAAS6P,GAXnC,mBAWnBO,EAXmB,KAWCC,EAXD,OAY0BrQ,mBAAS6P,GAZnC,mBAYnBS,EAZmB,KAYCC,EAZD,OAacvQ,qBAbd,mBAanBgP,EAbmB,KAaLI,EAbK,OAcoBpP,oBAAS,GAd7B,mBAcnBwQ,EAdmB,KAcFC,EAdE,OAeUzQ,mBAAS,IAfnB,mBAenB6L,EAfmB,KAeP6E,EAfO,KAmBpBrQ,EAAc,SAACC,EAAOqQ,GACX,cAAXA,GAGJZ,EAAStB,KAyBTiB,EADsB,SAApBQ,EAEA,kBAAC9E,GAAA,EAAD,CACEoB,WAAY4D,EAAmBvD,KAAOuD,EAAmBjK,QACzDjF,UAAWpB,EAAQ8Q,QACnBpF,WAAW,EACXD,MAAO6E,EAAmBvD,IAC1BrK,GAAG,4BACH4H,MAAO,gBACPyG,WAAS,EACTC,KAAM,GACN7G,SAhCkB,SAACtH,GACvBsN,EAAWtN,EAAEhC,OAAOoJ,QAgChB7F,QAAQ,aAKV,kBAAC,GAAD,CACE6M,YAAa,aACb/B,aAAcA,EACdnC,IAAKyD,EACLA,mBAAoBA,EACpBd,SAnCU,SAAC7M,GACf,IAAI6E,EAAO7E,EAAEhC,OAAOqQ,MAAM,GAC1B,GAAKxJ,EAAL,CACA,IAAIyJ,EAAS,IAAIC,WACjBD,EAAOE,WAAW3J,GAClB4H,EAAgB,CAAEF,KAAM1H,EAAK0H,KAAMxH,KAAMF,EAAKE,KAAK0J,QAAQ,IAAK,OAChEH,EAAOI,OAAS,WACdpB,EAAWgB,EAAO7M,SAEpB6M,EAAOK,QAAU,eA2BbnC,gBAAiBc,EACjBb,gBAAiBA,IAKvB,IAOMtC,EAAY,uCAAG,WAAOnK,GAAP,qBAAAkL,EAAA,yDACnBlL,EAAE7B,iBAPFiP,EAAStB,IACT4B,EAAsBR,GACtBU,EAAsBV,GACtBY,GAAmB,GAOf5D,GAAM,EAGS,KAAfhB,IACF4E,GAAmB,GACnB5D,GAAM,GAGHmD,GAAuB,KAAZA,EAZG,gBAaO,SAApBE,EACFG,EAAsB,2BACjBD,GADgB,IAEnBvD,KAAK,EACL1G,QAAS,uBAGXoK,EAAsB,2BACjBD,GADgB,IAEnBzD,KAAK,EACL1G,QAAS,uBAGb0G,GAAM,EA1BW,2BA4BjB8C,EA5BiB,kCA6BwB4B,EACnCvB,EACAnE,GA/BW,iBA6BL2F,EA7BK,EA6BV3Q,IAAoBgM,EA7BV,EA6BGtB,MA7BH,yCAiCwBkG,EAAgBzB,GAjCxC,iBAiCLwB,EAjCK,EAiCV3Q,IAAoBgM,EAjCV,EAiCGtB,MAjCH,QAsCnB1L,EAAM6R,iBAAiBF,EAAQ3E,GAtCZ,4CAAH,sDAyCZ4E,EAAe,uCAAG,WAAOzB,GAAP,eAAAnC,EAAA,sEACFe,GAAQ/N,IAAI8Q,YAAY3B,GADtB,UAClB4B,EADkB,OACgCC,KAAK,GADrC,uBAGpB9B,EAASrB,IAHW,kBAIb,CAAE7N,SAAKS,EAAWiK,OAAO,IAJZ,gCAMb,CAAE1K,IAAK+Q,EAAQrG,OAAO,IANT,2CAAH,sDAUfgG,EAAgB,uCAAG,WAAOvB,EAASnE,GAAhB,qBAAAgC,EAAA,+EAKXe,GAAQ/N,IAAI8Q,YAAY3B,GALb,uCAInB6B,KAJmB,GAIZlC,EAJY,cAMfA,EAAWmC,QAAQjG,GANJ,cAOrBkG,EAAS,CAACpC,GAPW,kBAQd,CAAE9O,IAAKkR,EAAQxG,OAAO,IARR,yCAUP,6BAAd,KAAEpF,SAA0C4J,EAASpB,IACvC,4BAAd,KAAExI,SAAyC4J,EAASrB,IAX/B,kBAYd,CAAE7N,SAAKS,EAAWiK,OAAO,IAZX,0DAAH,wDAgBtB,OACE,oCACGuE,EAAM5B,MACL,kBAAClI,EAAA,EAAD,CACEC,aAAcrD,EACd3C,KAAM6P,EAAM5B,KACZ8D,iBAAkB,IAClB9L,QAAS7F,GAET,kBAAC4R,GAAA,EAAD,CAAO/L,QAAS7F,EAAa8N,SAAU2B,EAAM3B,UAC1C2B,EAAM3J,UAIb,kBAACgB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAKwF,GAAI,EAAG2C,GAAI,GACd,yBAAKpO,UAAWpB,EAAQ+O,SACtB,0CAEF,kBAACqD,GAAA,EAAD,CAAa7C,UAAU,YACrB,kBAACJ,GAAA,EAAD,CAAWI,UAAU,UAArB,cACA,kBAAC8C,GAAA,EAAD,CACEC,KAAG,EACHrO,aAAW,WACXmL,KAAK,WACLnF,MAAOmG,EACPmC,aAAa,MACbpI,SAnJY,SAACtH,GACvBwN,EAAmBxN,EAAEhC,OAAOoJ,SAoJlB,kBAACuI,GAAA,EAAD,CACEvI,MAAM,OACNwI,QAAS,kBAACC,GAAA,EAAD,CAAO7S,MAAM,cACtByK,MAAM,OACNqI,eAAe,UAEjB,kBAACH,GAAA,EAAD,CACEvI,MAAM,OACNwI,QAAS,kBAACC,GAAA,EAAD,CAAO7S,MAAM,YACtByK,MAAM,OACNqI,eAAe,aAKvB,kBAACtL,EAAA,EAAD,KACE,kBAAC8H,GAAA,EAAD,CAAWI,UAAU,WACrB,kBAAClI,EAAA,EAAD,CAAKmI,GAAI,GAAII,IAEdC,GACC,kBAACxI,EAAA,EAAD,CAAKwF,GAAI,GACP,kBAACvB,GAAA,EAAD,CACEC,UAAQ,EACRmB,WAAYgE,GAAmB,uBAC/BvG,SA1La,SAACtH,GAAD,OAAO+N,EAAc/N,EAAEhC,OAAOoJ,QA4L3CwB,MAAOiF,EACPhO,GAAG,oBACHkF,KAAK,WACL0C,MAAO,yBACPlG,QAAQ,cAKd,kBAACiD,EAAA,EAAD,CAAKwF,GAAI,GACP,kBAACxL,EAAA,EAAD,CAAQ+C,QAAQ,YAAYvE,MAAO,UAAW6B,QAASsL,EAAczF,SAAUxH,EAAM+M,SAClFgD,EAAU,WAAa,WACvB/P,EAAM+M,SACP,kBAACI,GAAA,EAAD,CACEC,KAAM,GACNtN,MAAM,UACNuB,UAAWpB,EAAQyK,sBC7R3BtL,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiH,QAAS,CACPC,UAAW,OACXC,aAAc,OACd9C,UAAW,QAEbkP,QAAS,CACPpO,MAAO,SAETgG,GAAI,CACF3K,MAAO,UACP0G,UAAW,QAEbuK,QAAS,CACP+B,SAAU,aAIR7D,GAAS,SAACjP,GAGd,IAIMkP,EAAelP,EAAMmP,cACzB,oCACE,kBAACC,GAAA,EAAD,yBAAyBpP,EAAMmP,aAAaE,OAC5C,kBAACrL,EAAA,EAAD,CAAYrC,QAPK,WACnB3B,EAAMsP,gBAAgB,MACtBtP,EAAMuP,gBAAgB,QAMlB,kBAAC,KAAD,QAIN,OACE,kBAACjI,EAAA,EAAD,KACE,kBAAC8H,GAAA,EAAD,CAAWI,UAAU,UAArB,yBACA,kBAAClI,EAAA,EAAD,CAAKmI,GAAI,GACP,kBAACnO,EAAA,EAAD,CACEK,QAAS,kBAAM4D,SAASC,eAAe,OAAO4C,SAC9C/D,QAAQ,WACRvE,MAAM,aAHR,UAMU,IACToP,EACAlP,EAAMyQ,oBACL,uBACE5D,MAAM,4EACNlK,GAAG,qBAFL,iBAOF,2BACEA,GAAG,MACHkF,KAAK,OACLzF,MAAO,CAAEsN,WAAY,UACrBtF,SAAUpK,EAAM2P,cA8JXoD,GAvJK,SAAC/S,GACnB,IAuCI6P,EAvCE5P,EAAUb,KADa,EAOiBe,mBAAS,QAP1B,mBAOtBkQ,EAPsB,KAOLC,EAPK,OAQOnQ,mBAAS,IARhB,mBAQtB6S,EARsB,KAQXC,EARW,OASuB9S,oBAAS,GAThC,mBAStBoQ,EATsB,KASFC,EATE,OAUuBrQ,oBAAS,GAVhC,mBAUtBsQ,EAVsB,KAUFC,EAVE,OAYWvQ,qBAZX,mBAYtB+S,EAZsB,KAYR5D,EAZQ,OAaWnP,qBAbX,mBAatBgP,EAbsB,KAaRI,EAbQ,KA0C3BM,EADsB,SAApBQ,EAEA,kBAAC9E,GAAA,EAAD,CACEoB,WAAY4D,GAAsB,+BAClClP,UAAWpB,EAAQ8Q,QACnBpF,WAAW,EACXD,MAAO6E,EACP5N,GAAG,4BACH4H,MAAM,kBACNyG,WAAS,EACTC,KAAM,GACN7G,SAtBkB,SAACtH,GACvBmQ,EAAenQ,EAAEhC,OAAOoJ,QAsBpB7F,QAAQ,aAKV,kBAAC,GAAD,CACE8K,aAAcA,EACdsB,mBAAoBA,EACpBd,SA9CW,SAAC7M,GAChB,IAAI6E,EAAO7E,EAAEhC,OAAOqQ,MAAM,GAC1B,GAAKxJ,EAAL,CACA,IAAIyJ,EAAS,IAAIC,WACjBD,EAAO+B,kBAAkBxL,GACzB4H,EAAgB,CAAEF,KAAM1H,EAAK0H,KAAMxH,KAAMF,EAAKE,KAAK0J,QAAQ,IAAK,OAEhEH,EAAOI,OAAS,WACdlC,EAAgB,IAAI8D,WAAWhC,EAAO7M,UAGxC6M,EAAOK,QAAU,eAoCbnC,gBAAiBA,EACjBC,gBAAiBA,IAKvB,IAAM8D,EAAmB,WAMvB,OAHA7C,GAAsB,GACtBE,GAAsB,GAEE,SAApBL,GAAgC2C,GAA2B,KAAdA,EAGlB,SAApB3C,IAA+B6C,IACxCxC,GAAsB,IACf,IAJPF,GAAsB,IACf,IAcL8C,EAAgB,SAACC,GACrB,IAAIC,EAAKC,EACS,IAAlBzT,EAAM0T,QAAiBF,EAAMD,EAAkBE,EAAMF,EAE7B,SAApBlD,EACFrQ,EAAMsT,cAAcE,EAAKC,EAAKT,EAAW,OAAO,GAEhDhT,EAAMsT,cAAcE,EAAKC,EAAKP,EAAc/D,EAAahH,KAAK,IAIlE,OACE,0BAAMwL,SAAU,SAAC7Q,GAAD,OAAOuQ,MACrB,kBAAC/L,EAAA,EAAD,CAAKmI,GAAI,EAAGlI,GAAI,GACd,kBAAC8K,GAAA,EAAD,CAAa7C,UAAU,YACrB,kBAACJ,GAAA,EAAD,CAAWI,UAAU,UAArB,gBACA,kBAAC8C,GAAA,EAAD,CACEC,KAAG,EACHrO,aAAW,WACXmL,KAAK,WACLnF,MAAOmG,EACPmC,aAAa,MACbpI,SA9Ec,SAACtH,GACvB0N,GAAsB,GACtBE,GAAsB,GACtBJ,EAAmBxN,EAAEhC,OAAOoJ,SA6EpB,kBAACuI,GAAA,EAAD,CACEvI,MAAM,OACNwI,QAAS,kBAACC,GAAA,EAAD,CAAO7S,MAAM,YACtByK,MAAM,aACNqI,eAAe,UAEjB,kBAACH,GAAA,EAAD,CACEvI,MAAM,OACNwI,QAAS,kBAACC,GAAA,EAAD,CAAO7S,MAAM,cACtByK,MAAM,aACNqI,eAAe,aAKtB/C,EAEkB,IAAlB7P,EAAM0T,QACL,kBAAC,GAAD,CACExG,eAAgB,UAChBG,gBAAiB,SACjBJ,aAAcoG,EACdxH,cAAeyH,EACfvG,QAAS/M,EAAM4T,SAGjB,kBAAC,GAAD,CACE7G,QAAS/M,EAAM4T,OACf9D,YAAY,EACZC,SAAS,EACT8B,iBA5DiB,SAAC1B,EAAS0D,GAClBR,KACGQ,GAChBP,EAAcnD,QCzJdpB,GAAUxB,EAAQ,IAElBnO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiH,QAAS,CAEPE,aAAc,OACd9C,UAAW,QAEbmQ,IAAK,CACHC,SAAU,UACVjU,MAAO,UACPkU,OAAQ,UACRpK,QAAS,UACTP,WAAY,WAEd9J,KAAM,CACJC,QAAS,OACT,YAAa,CACXsF,WAAYxF,EAAMM,QAAQ,KAG9BqQ,MAAO,CACLxL,MAAO,MAEPG,OAAQ,YAoHGqP,GAhHC,SAACjU,GAEf,IAAMC,EAAUb,KAFS,EAGKe,oBAAS,GAHd,mBAGlB+T,EAHkB,KAGTC,EAHS,OAIGhU,oBAAS,GAJZ,mBAIlByT,EAJkB,KAIVQ,EAJU,OAKKjU,mBAAS,GALd,mBAKlBuT,EALkB,KAKTW,EALS,OAMClU,mBAASyO,IANV,mBAMlBqB,EANkB,KAMXC,EANW,OAOO/P,qBAPP,mBAOlB0G,EAPkB,KAORyN,EAPQ,KASnBC,EAAW,uCAAG,WAClBvI,EACAwI,EACAtB,EACA/K,EACAsM,GALkB,qBAAAzG,EAAA,sEASlBoG,GAAU,GAENM,EACJD,EACM1F,GAAQzI,QAAQqO,WAAWzB,GAC3BnE,GAAQzI,QAAQsO,SAAS1B,GAE3B2B,EAAQ,CACVvO,QAASoO,EACTI,OAAO,GAGTN,EACKK,EAAME,WAAaP,EACnBK,EAAMG,UAAY,CAAChJ,GAvBN,SAyBQ+C,GAAQgB,QAAQ8E,GAzBxB,gBAyBVvO,EAzBU,EAyBVA,QACRmO,GAAUnO,EAAQ2O,QAAQC,QAG1BZ,EAAY,CAAEzN,SAAUP,EAAQwO,QAAS3M,IAAKA,IAC9CE,IA9BkB,kDAgClB6H,EAASvB,IAhCS,0DAAH,8DAoCXnO,EAAc,SAACC,EAAOqQ,GACX,cAAXA,GAIJZ,EAAStB,KAGLvG,EAAgB,WACpB6H,EAASxB,IACTyF,GAAW,GACXC,GAAU,IAYRe,EACF,kBAAC,GAAD,CACE7B,cAAeiB,EACfb,QAASA,EACTE,OAAQA,IAIZ,OACE,oCACG3D,EAAM5B,MACL,kBAAClI,EAAA,EAAD,CACEC,aAAcrD,EACd3C,KAAM6P,EAAM5B,KACZ8D,iBAAkB,IAClB9L,QAAS7F,GAET,kBAAC4R,GAAA,EAAD,CAAO/L,QAAS7F,EAAa8N,SAAU2B,EAAM3B,UAC1C2B,EAAM3J,WAKX4N,GAAW,kBAACjK,GAAD,CAAYK,WA3BP,SAACzC,GACrBwM,EAAWxM,MA2BT,kBAACb,EAAA,EAAD,CAAMC,WAAS,EAACC,KAAK,SAAStH,QAAS,GACrC,kBAACoH,EAAA,EAAD,CAAMG,MAAI,IACV,kBAACH,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GACX,kBAAChD,EAAA,EAAD,CAAY/C,UAAWpB,EAAQsG,QAASlC,QAAQ,KAAKgD,cAAY,GAClD,IAAZqM,EAAgB,qBAAuB,mBAEzCQ,EACC,kBAAC,EAAD,CACE1L,MAzCE,WACZ2L,GAAW,GACXjE,EAAStB,KAwCC/H,SAAUA,IAGZsO,MCvIN/V,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiH,QAAS,CACPC,UAAW,OACXC,aAAc,OACd9C,UAAW,QAEbY,OAAQ,CAENC,OAAQ,QACRC,MAAO,QACPC,UAAW,UAEbhF,MAAO,CACL8E,OAAQ,QACRC,MAAO,SAETE,OAAQ,CACNC,OAAQ,WAmFG8B,GA/EA,SAAC1G,GACd,IAAMC,EAAUb,KAEZgW,EAAWpV,EAAMoV,SAHG,EAKMjV,oBAAS,GALf,mBAKjBwG,EALiB,KAKRC,EALQ,KAOpBE,EACFsO,EAASA,SAASrO,OAAS,KAA2B,SAAlBqO,EAASvN,KAsB/C,OACE,kBAACb,EAAA,EAAD,CAAMC,WAAS,EAACC,KAAK,SAAStH,QAAS,GACrC,kBAACoH,EAAA,EAAD,CAAMG,MAAI,IACV,kBAACH,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GACX,kBAAChD,EAAA,EAAD,CAAY/C,UAAWpB,EAAQsG,QAASlC,QAAQ,KAAKgD,cAAY,GAAjE,2BAGA,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACH,kBAACjG,EAAA,EAAD,CACEkG,SAAUV,EACVnF,QAAS,kBAAMiF,GAAYD,IAC3BtC,QAAQ,WACRvE,MAAO,YACPuB,UAAWpB,EAAQ0E,QALrB,cASHmC,GACC,kBAACwB,EAAA,EAAD,CAAgBlG,MAAO,CAAEmG,YAAa,QAAtC,oBAIF,kBAACjH,EAAA,EAAD,CAEEK,QAAS,kBA5CG,SAAC0T,GACrB,IACI1N,EADED,EAAUnC,SAASI,cAAc,KAGrCgC,EADoB,SAAlByN,EAASvN,KACJ,IAAID,KAAK,CAACyN,EAAaD,WAEvB,IAAIxN,KAAK,CAACyN,EAAaD,UAAW,CACvCvN,KAAM2F,GAAM6H,EAAalN,OAG7BT,EAAQI,KAAOC,IAAIC,gBAAgBL,GACnCD,EAAQO,SACN,cACAP,EAAQI,KAAKI,MAAM,KAAK,GAAGA,MAAM,KAAK,GACtC,IACAmN,EAAalN,IACfT,EAAQU,QACRV,EAAQxB,SA2BemC,CAAc+M,IAC7B/Q,QAAQ,WACRvE,MAAO,YACPuB,UAAWpB,EAAQ0E,QALrB,YASCgC,GAAW,kBAAC,EAAD,CAASvB,IAAKgQ,EAASA,SAAUzS,GAAG,qBAElD,kBAAC2E,EAAA,EAAD,KACE,kBAAChG,EAAA,EAAD,CACEK,QAAS3B,EAAMwI,MACfnE,QAAQ,YACRhD,UAAWpB,EAAQ0E,OACnB7E,MAAO,WAEN,IANH,iBAOiB,S,oBCjFrBV,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiH,QAAS,CACPC,UAAW,OACXC,aAAc,OACd9C,UAAW,QAEbkP,QAAS,CACPpO,MAAO,SAETgG,GAAI,CACF3K,MAAO,UACP0G,UAAW,QAEbuK,QAAS,CACP+B,SAAU,SAGZwC,WAAY,CACV7Q,MAAO,SAETiG,eAAgB,CAEd5G,SAAU,WACV6G,IAAK,MACLC,KAAM,MACNpE,WAAY,GACZ1B,YAAa,QAIXmK,GAAS,SAACjP,GAGd,IAIMkP,EAAelP,EAAMmP,cACzB,oCACE,kBAACC,GAAA,EAAD,yBAAyBpP,EAAMmP,aAAaE,OAC5C,kBAACrL,EAAA,EAAD,CAAYrC,QAPK,WACnB3B,EAAMsP,gBAAgB,MACtBtP,EAAMuP,gBAAgB,QAMlB,kBAAC,KAAD,QAIN,OACE,kBAACjI,EAAA,EAAD,KACE,kBAAC8H,GAAA,EAAD,CAAWI,UAAU,UAArB,yBACA,kBAAClI,EAAA,EAAD,CAAKmI,GAAI,GACP,kBAACnO,EAAA,EAAD,CACEK,QAAS,kBAAM4D,SAASC,eAAe,OAAO4C,SAC9C/D,QAAQ,WACRvE,MAAM,aAHR,UAMU,IACToP,EACAlP,EAAMyQ,oBACL,uBACE5D,MAAM,4EACNlK,GAAG,qBAFL,iBAOF,2BACEA,GAAG,MACHkF,KAAK,OACLzF,MAAO,CAAEsN,WAAY,UACrBtF,SAAUpK,EAAM2P,cAkRX4F,GA3QK,SAACvV,GACnB,IAgEI6P,EAhEE5P,EAAUb,KAMZoW,EAAc,CAChBjF,oBAAoB,EACpBE,oBAAoB,EACpBvE,wBAAwB,EACxBuJ,aAAa,EACbC,YAAY,GAZe,EAciBvV,mBAAS,QAd1B,mBActBkQ,EAdsB,KAcLC,EAdK,OAeOnQ,mBAAS,IAfhB,mBAetB6S,EAfsB,KAeXC,EAfW,OAgBD9S,mBAASqV,GAhBR,mBAgBtBrJ,EAhBsB,KAgBdC,EAhBc,OAiBSjM,mBAAS,IAjBlB,mBAiBtB6L,EAjBsB,KAiBVC,EAjBU,OAkBW9L,qBAlBX,mBAkBtB+S,EAlBsB,KAkBR5D,EAlBQ,OAmBGnP,mBAAS,IAnBZ,mBAmBtB8N,EAnBsB,KAmBZ0H,EAnBY,OAoBCxV,mBAAS,IApBV,mBAoBtByV,EApBsB,KAoBbC,EApBa,OAqBW1V,qBArBX,mBAqBtBgP,EArBsB,KAqBRI,EArBQ,KAmE3BM,EADsB,SAApBQ,EAEA,kBAAC9E,GAAA,EAAD,CACEoB,WAAYR,EAAOoE,oBAAsB,+BACzClP,UAAWpB,EAAQ8Q,QACnBpF,WAAW,EACXD,MAAOS,EAAOoE,mBACd5N,GAAG,4BACH4H,MAAM,kBACNyG,WAAS,EACTC,KAAM,GACN7G,SAzBkB,SAACtH,GACvBmQ,EAAenQ,EAAEhC,OAAOoJ,QAyBpB7F,QAAQ,aAKV,kBAAC,GAAD,CACE8K,aAAcA,EACdsB,mBAAoBtE,EAAOsE,mBAC3Bd,SAjDW,SAAC7M,GAChB,IAAI6E,EAAO7E,EAAEhC,OAAOqQ,MAAM,GAC1B,GAAKxJ,EAAL,CACA,IAAIyJ,EAAS,IAAIC,WACjBD,EAAO+B,kBAAkBxL,GACzB4H,EAAgB,CAAEF,KAAM1H,EAAK0H,KAAMxH,KAAMF,EAAKE,KAAK0J,QAAQ,IAAK,OAEhEH,EAAOI,OAAS,WACdlC,EAAgB,IAAI8D,WAAWhC,EAAO7M,UAExC6M,EAAOK,QAAU,eAwCbnC,gBAAiBA,EACjBC,gBAAiBA,IAKvB,IAAM8D,EAAmB,SAACvQ,GACxBA,GAAKA,EAAE7B,iBACPmL,EAAUoJ,GAEV,IAAIM,EACFC,EACAC,EACAP,EACAC,GAAa,EAEXO,GAAW,EAgCf,MA9BwB,SAApB5F,GAAgC2C,GAA2B,KAAdA,EAGlB,SAApB3C,GAA+B6C,IACxC+C,GAAW,EACXH,GAAU,IAJVC,GAAU,EACVE,GAAW,GAMI,KAAbhI,GACFwH,GAAc,EACdQ,GAAW,GACW,SAAbhI,GAAmC,KAAZ2H,IAChCF,GAAa,EACbO,GAAW,GAGS,IAAlBjW,EAAM0T,SAAgC,KAAf1H,GACzBgK,GAAQ,EACRC,GAAW,GACgB,IAAlBjW,EAAM0T,UAA8B,IAAbuC,GAChCC,EAAclK,GAGhBI,EAAU,CACRmE,mBAAoBwF,EACpBtF,mBAAoBqF,EACpB5J,uBAAwB8J,EACxBP,YAAaA,EACbC,WAAYA,IAEPO,GASHC,EAAgB,SAAC3C,GACrB,IAAIC,EAAKC,EACS,IAAlBzT,EAAM0T,QAAiBF,EAAMD,EAAkBE,EAAMF,GAEpC,SAAbtF,GAKoB,SAAbA,IAJTjO,EAAMmW,YAAY3C,EAAKC,EAAKT,EAAW,CACrC/E,SAAUA,EACV9F,IAAKyN,KASX,OACE,0BAAMjC,SAAU,SAAC7Q,GAAD,OAAOuQ,EAAiBvQ,KACtC,kBAACwE,EAAA,EAAD,CAAKmI,GAAI,EAAGlI,GAAI,GACd,kBAAC8K,GAAA,EAAD,CAAa7C,UAAU,YACrB,kBAACJ,GAAA,EAAD,CAAWI,UAAU,UAArB,gBACA,kBAAC8C,GAAA,EAAD,CACEC,KAAG,EACHrO,aAAW,WACXmL,KAAK,WACLnF,MAAOmG,EACPmC,aAAa,MACbpI,SAnHc,SAACtH,GACvBsJ,EAAU,2BACLD,GADI,IAEPoE,oBAAoB,EACpBE,oBAAoB,KAEtBH,EAAmBxN,EAAEhC,OAAOoJ,SA+GpB,kBAACuI,GAAA,EAAD,CACEvI,MAAM,OACNwI,QAAS,kBAACC,GAAA,EAAD,CAAO7S,MAAM,YACtByK,MAAM,aACNqI,eAAe,UAEjB,kBAACH,GAAA,EAAD,CACEvI,MAAM,OACNwI,QAAS,kBAACC,GAAA,EAAD,CAAO7S,MAAM,cACtByK,MAAM,aACNqI,eAAe,aAKtB/C,EAED,kBAACvI,EAAA,EAAD,CAAKmI,GAAI,EAAGlI,GAAI,GACd,kBAAC8K,GAAA,EAAD,CACEhO,QAAQ,WACRhD,UAAWpB,EAAQmW,YACnB1K,QAAOS,EAAOsJ,aAEd,kBAACY,GAAA,EAAD,CAAY1T,GAAG,qCAAf,aAGA,kBAAC2T,GAAA,EAAD,CACE9K,UAAQ,EACR+K,QAAQ,oCACR5T,GAAG,8BACHuH,MAAO0L,EACPxL,SAjLa,SAACtH,GACtB,IAAI0T,EAAQ1T,EAAEhC,OAAOoJ,MACrB2L,EAAWW,GAETb,EADY,QAAVa,GAA6B,QAAVA,EACT,OAEA,SA4KNnV,UAAWpB,EAAQqV,WACnB/K,MAAM,kBAEN,kBAAC1H,EAAA,EAAD,CAAUqH,MAAO,OAAjB,QACA,kBAACrH,EAAA,EAAD,CAAUqH,MAAO,OAAjB,QACA,kBAACrH,EAAA,EAAD,CAAUqH,MAAO,QAAjB,mBAEDiC,EAAOsJ,aACN,kBAACnN,EAAA,EAAD,wDAOa,IAAlBtI,EAAM0T,QACL,oCACE,kBAACpM,EAAA,EAAD,CAAKmI,GAAI,EAAGlI,GAAI,GACd,kBAACgE,GAAA,EAAD,CACEC,UAAQ,EACRmB,WACER,EAAOD,wBAA0B,uBAEnC9B,SA7Ma,SAACtH,GACxBmJ,EAAgBnJ,EAAEhC,OAAOoJ,QA6MfwB,MAAOS,EAAOD,uBACdvJ,GAAG,QACHkF,KAAK,WACL0C,MAAO,aACPlG,QAAQ,cAGZ,kBAACiD,EAAA,EAAD,CAAKwF,GAAI,GACP,kBAACxL,EAAA,EAAD,CACEuG,KAAK,SACLlG,QAAS0R,EACThP,QAAQ,YACRvE,MAAO,UACP0H,SAAUxH,EAAM+M,SALlB,UAQG/M,EAAM+M,SACL,kBAACI,GAAA,EAAD,CACEC,KAAM,GACNtN,MAAM,UACNuB,UAAWpB,EAAQyK,oBAO7B,kBAAC,GAAD,CACEqC,QAAS/M,EAAM4T,OACf9D,YAAY,EACZC,SAAS,EACT8B,iBA1HiB,SAAC1B,EAAS0D,GAClBR,KACGQ,GAChBqC,EAAc/F,QClOdpB,GAAUxB,EAAQ,IAElBnO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiH,QAAS,CAEPE,aAAc,OACd9C,UAAW,QAEbmQ,IAAK,CACHC,SAAU,UACVjU,MAAO,UACPkU,OAAQ,UACRpK,QAAS,UACTP,WAAY,WAEdoN,KAAM,CACJhS,MAAO,OAETlF,KAAM,CACJC,QAAS,OACT,YAAa,CACXsF,WAAYxF,EAAMM,QAAQ,KAG9BqQ,MAAO,CACLxL,MAAO,MAEPG,OAAQ,YAmHG8R,GA/GC,SAAC1W,GACf,IAAMC,EAAUb,KADS,EAEKe,oBAAS,GAFd,mBAElB+T,EAFkB,KAETC,EAFS,OAGGhU,oBAAS,GAHZ,mBAGlByT,EAHkB,KAGVQ,EAHU,OAIKjU,mBAAS,GAJd,mBAIlBuT,EAJkB,KAITW,EAJS,OAKClU,mBAASwW,IALV,mBAKlB1G,EALkB,KAKXC,EALW,OAMO/P,qBANP,mBAMlBiV,EANkB,KAMRwB,EANQ,KAQnBpW,EAAc,SAACC,EAAOqQ,GACX,cAAXA,GAGJZ,EAASyG,KAGLR,EAAW,uCAAG,WAAOnK,EAAY8D,EAAYkD,EAAWjF,GAA1C,uBAAAC,EAAA,6DAClBoG,GAAU,GACVlE,EAASyG,IAFS,kBAOC5H,GAAQzI,QAAQwL,YAAYkB,GAP7B,mBAMhB6B,EANgB,CAOdvO,QAPc,6DAUZuQ,EACY,2BAAd,KAAEvQ,SACY,yCAAd,KAAEA,QACc4J,GAAP,IAAX2G,EAA2BF,GAA4BA,IAbvC,kCAgBlB7G,EACK+E,EAAMiC,YAAchH,EACpB+E,EAAMG,UAAY,CAAChJ,GAEH,SAArB+B,EAAQE,WAAwB4G,EAAMgC,OAAS,UApB7B,oBAuBkB9H,GAAQkD,QAAQ4C,GAvBlC,wBAuBF/G,EAvBE,EAuBRiJ,KAvBQ,UAyBQJ,GAAgB7I,EAAWC,GAzBnC,QAyBZiJ,EAzBY,OA2BhBJ,EAAY,CACVxB,SAAUtH,EACV3F,IAAK6O,EACLnP,KAAMkG,EAAQE,WAEhB5F,IAhCgB,0DAmCd,6DADF,KAAE/B,SAEA4J,EAASyG,IApCK,oFAAH,4DAyCXtO,EAAgB,WACpB8L,GAAW,GACXC,GAAU,GACVlE,EAASyG,KAYPxB,EACF,kBAAC,GAAD,CAAagB,YAAaA,EAAazC,QAASA,EAASE,OAAQA,IAGnE,OACE,oCACG3D,EAAM5B,MACL,kBAAClI,EAAA,EAAD,CACEC,aAAcrD,EACd3C,KAAM6P,EAAM5B,KACZ8D,iBAAkB,IAClB9L,QAAS7F,GAET,kBAAC4R,GAAA,EAAD,CAAO/L,QAAS7F,EAAa8N,SAAU2B,EAAM3B,UAC1C2B,EAAM3J,WAKX4N,GAAW,kBAACjK,GAAD,CAAYK,WAvBP,SAACzC,GACrBwM,EAAWxM,MA+BT,kBAACb,EAAA,EAAD,CAAMC,WAAS,EAACC,KAAK,SAAStH,QAAS,GACrC,kBAACoH,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GACX,kBAAChD,EAAA,EAAD,CAAY/C,UAAWpB,EAAQsG,QAASlC,QAAQ,KAAKgD,cAAY,GAClD,IAAZqM,EAAgB,qBAAuB,mBAEzCQ,EAAU,kBAAC,GAAD,CAAQ1L,MA1Cb,WACZ2L,GAAW,GACXjE,EAASyG,KAwC8BvB,SAAUA,IAAeD,M,UCvI9DpG,GAAUxB,EAAQ,IAElBnO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2X,UAAW,CACTxS,MAAO,SAET+F,QAAS,CACP/F,MAAO,SAGTgS,KAAM,CACJjQ,UAAW,QAGbD,QAAS,CACPC,UAAW,OACXC,aAAc,OACd9C,UAAW,QAEbgB,OAAQ,CACNC,OAAQ,OAKVqL,MAAO,CAELxL,MAAO,QACPD,OAAQ,YAuINkC,GAAS,SAAC1G,GACd,IAAMC,EAAUb,KADQ,EAGMe,oBAAS,GAHf,mBAGjB+W,EAHiB,KAGRC,EAHQ,OAIQhX,oBAAS,GAJjB,mBAIjBiX,EAJiB,KAIPC,EAJO,KAMlBC,EAAQ,SAACtW,EAAIqO,GACjB,IAAM3H,EAAUnC,SAASI,cAAc,KACjCgC,EAAO,IAAIC,KAAK,CAAC5G,GAAM,CAAE6G,KAAM,eACrCH,EAAQI,KAAOC,IAAIC,gBAAgBL,GACnCD,EAAQO,SAAWoH,EAAK,OACxB3H,EAAQU,QACRV,EAAQxB,UAGNqR,EAAUvX,EAAMuX,QAEpB,OACE,oCACE,kBAACvQ,EAAA,EAAD,CAAMC,WAAS,EAACC,KAAK,SAAStH,QAAS,GACrC,kBAACoH,EAAA,EAAD,CAAMG,MAAI,IACV,kBAACH,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GACX,kBAAChD,EAAA,EAAD,CAAY/C,UAAWpB,EAAQsG,QAASlC,QAAQ,KAAKgD,cAAY,GAAjE,cAIA,kBAACjD,EAAA,EAAD,CAAY/C,UAAWpB,EAAQsG,QAASlC,QAAQ,KAAKgD,cAAY,GAAjE,eAGA,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACjG,EAAA,EAAD,CACEK,QAAS,kBAAM0V,GAAaD,IAC5B/S,QAAQ,WACRvE,MAAO,UACPuB,UAAWpB,EAAQ0E,QAElByS,EAAW,OAAS,cAEvB,kBAAC9V,EAAA,EAAD,CACEK,QAAS,kBAAM2V,EAAMC,EAAQC,kBAAmB,gBAChDnT,QAAQ,WACRvE,MAAO,UACPuB,UAAWpB,EAAQ0E,QAJrB,YASCyS,GACC,kBAAC,EAAD,CAAShS,IAAKmS,EAAQC,kBAAmB7U,GAAG,gBAGhD,kBAACyB,EAAA,EAAD,CAAY/C,UAAWpB,EAAQsG,QAASlC,QAAQ,KAAKgD,cAAY,GAAjE,cAGA,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACjG,EAAA,EAAD,CACEK,QAAS,kBAAMwV,GAAYD,IAC3B7S,QAAQ,WACRvE,MAAO,YACPuB,UAAWpB,EAAQ0E,QAElBuS,EAAU,OAAS,cAEtB,kBAAC5V,EAAA,EAAD,CACEK,QAAS,kBAAM2V,EAAMC,EAAQE,iBAAkB,eAC/CpT,QAAQ,WACRvE,MAAO,YACPuB,UAAWpB,EAAQ0E,QAJrB,YASCuS,GACC,kBAAC,EAAD,CAAS9R,IAAKmS,EAAQE,iBAAkB9U,GAAG,eAG/C,kBAAC2E,EAAA,EAAD,UAMKoQ,GArNA,SAAC1X,GACd,IAAMC,EAAUb,KADQ,EAEFe,wBAASsB,GAFP,mBAEjBT,EAFiB,KAEZ2W,EAFY,OAGUxX,mBAAS,CAAEkP,KAAM,GAAIuI,MAAO,GAAInN,GAAI,KAH9C,mBAGjBoN,EAHiB,KAGNC,EAHM,OAIM3X,oBAAS,GAJf,mBAIjB4M,EAJiB,KAIRgL,EAJQ,OAKI5X,mBAAS,CACnCkP,MAAM,EACN2I,WAAW,EACXC,aAAa,EACbC,WAAW,IATW,mBAKjB/L,EALiB,KAKTC,EALS,KAYlB+L,EAAY,uCAAG,WAAOC,GAAP,eAAApK,EAAA,6DACnB+J,GAAW,GADQ,SAEDhJ,GAAQsJ,YAAY,CACpCC,QAAS,CAAC,CAAEjJ,KAAMwI,EAAUxI,KAAMuI,MAAOC,EAAUD,QACnDW,QAAS,KACTC,WAAYJ,IALK,OAEbpX,EAFa,OAOnB2W,EAAO3W,GACP+W,GAAW,GARQ,2CAAH,sDA2BZ1E,EAAmB,WACvB,IAAIoF,EACFT,EACAU,EAnBoBd,EAoBpBM,GAAY,EAkBd,MAjBuB,KAAnBL,EAAUxI,OACZoJ,GAAW,GAEW,KAApBZ,EAAUD,OACZI,GAAY,EACZE,EAAY,oBA1BQN,EA4BWC,EAAUD,MAAzCc,GA3BO,yJACFC,KAAKf,GA2BVM,EAAY,yBAEd9L,EAAU,2BACLD,GADI,IAEPkD,KAAMoJ,EACNT,UAAWA,EACXC,YAAaS,EACbR,UAAWA,QAETQ,GAAeV,GAAaS,IAWlC,OACE,oCACiB,oBAAPzX,EACN,oCACE,kBAACoD,EAAA,EAAD,CAAY/C,UAAWpB,EAAQsG,QAASlC,QAAQ,KAAKgD,cAAY,GAAjE,sBAGA,yBAAKhG,UAAWpB,EAAQwW,MACtB,0BAAM9C,SAAU,SAAC7Q,GAAD,OAAOuQ,MACrB,kBAAC/L,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACgE,GAAA,EAAD,CACEC,UAAQ,EACRnK,UAAWpB,EAAQgX,UACnBtU,GAAG,oBACH4H,MAAM,OACNH,SAvDG,SAACtH,GAClBgV,EAAa,2BAAKD,GAAN,IAAiBxI,KAAMvM,EAAEhC,OAAOoJ,UAuD9BwB,MAAOS,EAAOkD,KACd1C,WAAYR,EAAOkD,MAAQ,iBAE3BhL,QAAQ,cAIZ,kBAACiD,EAAA,EAAD,CAAKC,GAAI,GACN,IACD,kBAACgE,GAAA,EAAD,CACEC,UAAQ,EACRnK,UAAWpB,EAAQgX,UACnBtU,GAAG,oBACH4H,MAAM,QACNH,SAnEI,SAACtH,GACnBgV,EAAa,2BAAKD,GAAN,IAAiBD,MAAO9U,EAAEhC,OAAOoJ,UAmE/BwB,MAAOS,EAAO6L,WAAa7L,EAAO8L,YAClCtL,YACGR,EAAO6L,WAAa7L,EAAO8L,cAAgB9L,EAAO+L,UAGrD7T,QAAQ,cAGZ,kBAACiD,EAAA,EAAD,CAAKC,GAAI,IACT,kBAAC,GAAD,CACEsF,MAAO5M,EAAQuK,QACfuC,QAASA,EACTG,eAAgB,WAChBG,gBAAiB,SACjBJ,aAAcoG,EACdxH,cAlDQ,SAAC7K,GACrBmX,EAAanX,SAuDT,kBAAC,GAAD,CAAQuW,QAASvW,MC9JnB5B,I,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPqF,OAAQtF,EAAMM,QAAQ,GACtBE,MAAO,WAGXmQ,MAAO,CACLxL,MAAO,MACPmU,WAAY,OACZhU,OAAQ,QAGViU,OAAO,aACLpU,MAAO,OACPK,WAAYxF,EAAMM,QAAQ,GAC1BD,YAAaL,EAAMM,QAAQ,IAC1BN,EAAMwZ,YAAYC,GAAG,IAAyB,EAAnBzZ,EAAMM,QAAQ,IAAU,CAClD6E,MAAO,IACPK,WAAY,OACZnF,YAAa,SAGjBD,MAAM,aAEJ8G,UAAWlH,EAAMM,QAAQ,GACzB6G,aAAcnH,EAAMM,QAAQ,GAC5BgK,QAAStK,EAAMM,QAAQ,IACtBN,EAAMwZ,YAAYC,GAAG,IAAyB,EAAnBzZ,EAAMM,QAAQ,IAAU,CAClD4G,UAAWlH,EAAMM,QAAQ,GACzB6G,aAAcnH,EAAMM,QAAQ,GAC5BgK,QAAStK,EAAMM,QAAQ,UAgCdoZ,GA3BH,WACV,IAIIvV,EAJExD,EAAUb,KADA,EAGkBe,mBAAS,GAH3B,mBAGT8Y,EAHS,KAGE9U,EAHF,KAchB,OARkB,IAAd8U,EACFxV,EAAQ,kBAAC,GAAD,MACe,IAAdwV,EACTxV,EAAQ,kBAAC,GAAD,MACe,IAAdwV,IACTxV,EAAQ,kBAAC,GAAD,OAIR,6BACE,kBAAC,EAAD,CAAQU,aAAcA,EAAcG,SAAU2U,IAE9C,kBAACC,GAAA,EAAD,CAAW7X,UAAWpB,EAAQ4Y,QAC5B,kBAACvW,EAAA,EAAD,CAAOjB,UAAWpB,EAAQP,OACvB+D,MCtDS0V,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kECRAja,GAAQka,aAAe,CAC3B1P,QAAS,CACP2P,QAASC,KACTC,UAAWC,QAMfC,IAASC,OACP,kBAAC,IAAMC,SAAP,KACE,kBAACC,GAAA,EAAD,CAAe1a,MAAOA,IACtB,kBAAC,GAAD,QAGFiG,SAASC,eAAe,SD0GpB,kBAAmByU,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA7O,GACL8O,QAAQ9O,MAAMA,EAAMpF,c","file":"static/js/main.8dad1e9c.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    zIndex: 9999,\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  icon: { color: \"white\" },\n}));\n\nexport default function MenuListComposition(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event, selection) => {\n    if (selection) {\n      props.menuStateHandler(selection);\n    }\n\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? \"menu-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n        >\n          {!open ? (\n            <MenuIcon className={classes.icon} />\n          ) : (\n            <MenuOpenIcon className={classes.icon} />\n          )}\n        </Button>\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          role={undefined}\n          transition\n          disablePortal\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList\n                    autoFocusItem={open}\n                    id=\"menu-list-grow\"\n                    onKeyDown={handleListKeyDown}\n                  >\n                    <MenuItem onClick={(e) => handleClose(e, 1)}>\n                      Encrypt\n                    </MenuItem>\n                    <MenuItem onClick={(e) => handleClose(e, 2)}>\n                      Decrypt\n                    </MenuItem>\n                    <MenuItem onClick={(e) => handleClose(e, 3)}>\n                      Key Generation\n                    </MenuItem>\n                    <MenuItem onClick={(e) => handleClose(e, 4)}>Help</MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}\n","export const snackLocation = { vertical: \"bottom\", horizontal: \"left\" }\n\nexport const menuOptions = {1:'ENCRYPT', 2:'DECRYPT', 3: 'KEY CREATION', 4: 'ABOUT'}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavBarMenu from \"./NavBarMenu\";\nimport { menuOptions } from \"./utils/config\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    // marginRight: 'auto',\n  },\n  state: {\n    flexGrow: 1,\n  },\n  title: {\n    textAlign: \"center\",\n    // flexGrow: 1,\n  },\n}));\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n\n  const menuStateHandler = (state) => {\n    props.setMenuState(state);\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <NavBarMenu menuStateHandler={menuStateHandler} />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.state}>\n            {menuOptions[props.appState]}\n          </Typography>\n          <Typography variant=\"h6\" className={classes.title}>\n            Pretty Easy Privacy\n          </Typography>\n          <IconButton>\n            <GitHubIcon color=\"secondary\" />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  result: {\n    // marginTop: '200px',\n    height: \"100px\",\n    width: \"350px\",\n    overflowY: \"scroll\",\n  },\n  paper: {\n    height: \"100px\",\n    width: \"350px\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n  copy: {\n    marginLeft: \"318px\",\n  },\n}));\n\n  \n  const Display = (props) => {\n    const classes = useStyles();\n    const [openSnack, setOpenSnack] = useState({\n      open: false,\n      vertical: \"bottom\",\n      horizontal: \"left\",\n    });\n  \n    const { vertical, horizontal, open } = openSnack;\n  \n    let inputId = props.id;\n    let keyIn = props.val;\n  \n    const handleCopy = () => {\n      setOpenSnack({ ...openSnack, open: true });\n      let copyText = document.getElementById(inputId).textContent;\n      const textArea = document.createElement(\"textarea\");\n      textArea.setAttribute(\"id\", \"copy\");\n      textArea.textContent = copyText;\n      document.body.append(textArea);\n      textArea.select();\n      textArea.setSelectionRange(0, 99999); /*For mobile devices*/\n  \n      /* Copy the text inside the text field */\n      document.execCommand(\"copy\");\n      textArea.remove();\n    };\n  \n    const handleClose = () => {\n      setOpenSnack({ ...openSnack, open: false });\n    };\n    return (\n      <>\n        <div className={classes.copy}>\n          <Tooltip title=\"Copy\">\n            <IconButton aria-label=\"Copy\" onClick={handleCopy}>\n              <FileCopyIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <Paper className={classes.paper}>\n          <div className={classes.result}>\n            <pre id={inputId}>{keyIn}</pre>\n          </div>\n        </Paper>\n  \n        <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={open}\n          onClose={handleClose}\n          message=\"Copied to clipboard\"\n          key={vertical + horizontal}\n        />\n      </>\n    );\n  };\n  \n  export default Display;","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Display from \"../utils/BrowserResult\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\n//todo disbale in browser if 'larger'\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    marginTop: \"15px\",\n    marginBottom: \"30px\",\n    textAlign: \"left\",\n  },\n  result: {\n    // marginTop: '200px',\n    height: \"100px\",\n    width: \"350px\",\n    overflowY: \"scroll\",\n  },\n  paper: {\n    height: \"100px\",\n    width: \"350px\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n}));\n\n//id, armorTxt\n\nconst Result = (props) => {\n  const classes = useStyles();\n\n  const [openEnc, setOpenEnc] = useState(false);\n\n  let armorTxt = props.armorTxt;\n  let disableCopy = armorTxt.armorTxt.length > 10000;\n\n  const outputHandler = (textVal) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([textVal.armorTxt], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download =\n      `${element.href.split(\"/\")[3]}_${textVal.ext}_.aes\"`;\n    element.click();\n    element.remove();\n  };\n\n  return (\n    <Grid container wrap=\"nowrap\" spacing={0}>\n      <Grid item></Grid>\n      <Grid item xs>\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\n          Retrieve Encrypted Data\n        </Typography>\n        <Box mb={2}>\n          <Button\n            disabled={disableCopy}\n            onClick={() => setOpenEnc(!openEnc)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            In Browser\n          </Button>\n\n          <Button\n            onClick={() => outputHandler(armorTxt)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            Download\n          </Button>\n          {disableCopy && (\n            <FormHelperText style={{ paddingLeft: \"8px\" }}>\n              Result too Large\n            </FormHelperText>\n          )}\n          {openEnc && <Display val={armorTxt.armorTxt} id=\"encryptedResult\" />}\n        </Box>\n        {/* <Paper className={classes.paper}>\n        <div className={classes.result}>\n          <pre id={'test'}>{props.armorTxt}</pre>\n        </div>\n      </Paper> */}\n        <Box>\n          <Button\n            onClick={props.reset}\n            variant=\"contained\"\n            className={classes.button}\n            color={\"primary\"}\n          >\n            {\" \"}\n            New Encryption{\" \"}\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Result;\n","import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst AntTabs = withStyles({\n  root: {\n    borderBottom: \"1px solid #e8e8e8\",\n    // width: '700px'\n  },\n  indicator: {\n    backgroundColor: \"#1890ff\",\n  },\n})(Tabs);\n\nconst AntTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    minWidth: 72,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing(4),\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:hover\": {\n      color: \"#40a9ff\",\n      opacity: 1,\n    },\n    \"&$selected\": {\n      color: \"#1890ff\",\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    \"&:focus\": {\n      color: \"#40a9ff\",\n    },\n  },\n  selected: {},\n}))((props) => <Tab disableRipple {...props} />);\n\n// const StyledTabs = withStyles({\n//   indicator: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     backgroundColor: \"transparent\",\n//     \"& > span\": {\n//       maxWidth: 40,\n//       width: \"100%\",\n//       backgroundColor: \"#635ee7\",\n//     },\n//   },\n// })((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n\n// const StyledTab = withStyles((theme) => ({\n//   root: {\n//     textTransform: \"none\",\n//     color: \"#fff\",\n//     fontWeight: theme.typography.fontWeightRegular,\n//     fontSize: theme.typography.pxToRem(15),\n//     marginRight: theme.spacing(1),\n//     \"&:focus\": {\n//       opacity: 1,\n//     },\n//   },\n// }))((props) => <Tab disableRipple {...props} />);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    // maxWidth:'600px'\n    // marginRight:'50%',\n  },\n  padding: {\n    padding: theme.spacing(3),\n  },\n  demo1: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  demo2: {\n    backgroundColor: \"#2e1534\",\n  },\n}));\n\nexport default function EncTypeTab(props) {\n  //lift up to reset on load of new tab\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.handleType(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\n        <AntTab label=\"Symmetric (PassPhrase)\" />\n        <AntTab label=\"Asymmetric (Public Key)\" />\n      </AntTabs>\n      <Typography className={classes.padding} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport zxcvbn from \"zxcvbn\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  pwInput: {\n    width: \"225px\",\n  },\n  pw: {\n    color: \"#777fa7\",\n    marginTop: \"18px\",\n  },\n  buttonProgress: {\n    // color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst PassPhraseConfirm = (props) => {\n  const [confirmPassPhrase, setConfirmPassPhrase] = useState();\n\n  const passPhraseConfirmBuffer = (e) => {\n    setConfirmPassPhrase(e.target.value);\n  };\n\n  const status = props.open;\n\n  const label = props.confirmError\n    ? \"Please Try Again\"\n    : \"PassPhrase Confirmation\";\n\n  return (\n    <div>\n      <Dialog\n        open={status}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          PassPhrase Confirmation\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please re enter your passphrase below:\n          </DialogContentText>\n          <TextField\n            required\n            autoFocus\n            error={props.confirmError}\n            onChange={passPhraseConfirmBuffer}\n            margin=\"dense\"\n            id=\"name\"\n            label={label}\n            type=\"password\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={() => props.handleConfirm(confirmPassPhrase)}\n            color=\"primary\"\n          >\n            {props.buttonText}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst PassPhrase = (props) => {\n  const classes = useStyles();\n\n  const [passPhrase, passPhraseState] = useState(\"\");\n  const [errors, setErrors] = useState({\n    confirmError: false,\n    passPhraseMissingError: false,\n  });\n  const [open, setOpen] = useState(false);\n  const [strength, setStrength] = useState({ score: null, resp: null });\n\n  let strengthResp = {\n    0: \"Very Bad 👎\",\n    1: \"Bad 👎\",\n    2: \"Weak 😐\",\n    3: \"Good 🙂\",\n    4: \"Strong 🔥🔥🔥\",\n  };\n\n  const handlePassPhrase = (e) => {\n    passPhraseState(e.target.value);\n    const result = zxcvbn(e.target.value);\n    setStrength({\n      score: result.score === 0 ? \"1\" : result.score,\n      resp: strengthResp[result.score],\n    });\n  };\n\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors({ ...errors, passPhraseMissingError: false });\n    const err = props.handleSubmit(e);\n\n    if (!passPhrase) {\n      setErrors({ ...errors, passPhraseMissingError: true });\n    }\n    if (!passPhrase || err) {\n      return;\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const handleConfirm = (confirmPassPhrase) => {\n    if (confirmPassPhrase === passPhrase) {\n      setOpen(false);\n      props.handleConfirm(passPhrase);\n    } else {\n      setErrors({ ...errors, confirmError: true });\n    }\n  };\n\n  return (\n    <div>\n      <Box>\n        {/* <Box pb={1}> */}\n        <Grid container spacing={1}>\n          <Grid item>\n            <TextField\n              required\n              helperText={\n                errors.passPhraseMissingError && \"PassPhrase Required!\"\n              }\n              onChange={handlePassPhrase}\n              className={props.class}\n              error={errors.passPhraseMissingError}\n              id=\"pw-in\"\n              type=\"password\"\n              label={\"PassPhrase\"}\n              variant=\"outlined\"\n              // variant=\"filled\"\n            />\n          </Grid>\n          {passPhrase.length > 0 && (\n            <Grid className={classes.pw} item>\n              {strength.resp}\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n\n      <Box pt={3}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color={\"primary\"}\n          disabled={props.loading}\n          onClick={handleSubmit}\n        >\n          {props.mainButtonText}\n          {props.loading && (\n            <CircularProgress\n              size={24}\n              color=\"primary\"\n              className={classes.buttonProgress}\n            />\n          )}\n        </Button>\n      </Box>\n\n      <PassPhraseConfirm\n        open={open}\n        buttonText={props.modalButtonText}\n        handleClose={() => setOpen(false)}\n        handleConfirm={handleConfirm}\n        confirmError={errors.confirmError}\n      />\n    </div>\n  );\n};\n\nexport default PassPhrase;\n","const FileType = require(\"file-type\");\n\nexport const mimes = {\n  txt: \"text/plain\",\n  csv: \"text/csv\",\n  html: \"text/html\",\n  css: \"text/css\",\n};\n\nexport const extSelect = async (decrypted, decType) => {\n  let bufferType\n  if (decType.fileType==='byte'){\n    bufferType =  await FileType.fromBuffer(decrypted);\n  }\n\n  if (bufferType) {\n    return bufferType.ext;\n  } else if (decType.fileType === \"text\") {\n    return decType.ext;\n  } else {\n    return \"txt\";\n  }\n};\n\nexport const decFormat = {\n  show: true,\n  severity: \"error\",\n  message:\n    \"Looks like there is a format issue with your Encrypted text. We recommend using the original text file supplied!\",\n};\n\nexport const decGeneric = {\n  show: true,\n  severity: \"error\",\n  message: \"Something went wrong! Please try again.\",\n};\n\nexport const decPW = {\n  show: true,\n  severity: \"error\",\n  message: \"Passphrase is incorrect!\",\n};\n\nexport const decSuccess = {\n  show: true,\n  severity: \"success\",\n  message: \"Successfully decrypted!\",\n};\n\nexport const encSuccess = {\n  show: true,\n  message: \"Encryption Complete\",\n  severity: \"success\",\n}\n\nexport const encError = {\n  show: true,\n  message: \"Something went wrong! Please try again.\",\n  severity: \"error\",\n};\n\nexport const resetAlert = {\n  show: false,\n  message: \"\",\n  severity: \"\",\n};\n\n\nexport const keyError = {\n  show: true,\n  message: \"Invalid RSA Key! Please try again.\",\n  severity: \"error\",\n};\n\nexport const privKeyPassError = {\n  show: true,\n  message: \"Incorrect Passphrase! Please try again.\",\n  severity: \"error\",\n};\n\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport DeleteOutlineSharpIcon from \"@material-ui/icons/DeleteOutlineSharp\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { resetAlert, keyError, privKeyPassError } from \"../utils/utils\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {snackLocation} from '../utils/config';\n\nconst openpgp = require(\"openpgp\");\n\nconst useStyles = makeStyles((theme) => ({\n  keyHead: {\n    color: \"rgba(0, 0, 0, 0.54)\",\n  },\n  buttonProgress: {\n    // color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst InFile = (props) => {\n  const handleDelete = () => {\n    props.setUploadedFile(null);\n    props.setFileMetaData(null);\n  };\n  const selectedFile = props.fileMetaData && (\n    <>\n      <FormLabel>{`Selected: ${props.fileMetaData.name}`}</FormLabel>\n      <IconButton onClick={handleDelete}>\n        <DeleteOutlineSharpIcon />\n      </IconButton>\n    </>\n  );\n  return (\n    <Box>\n      <FormLabel component=\"legend\">Select RSA Key:</FormLabel>\n      <Box mt={1}>\n        <Button\n          onClick={() => document.getElementById(\"keyInput\").click()}\n          variant=\"outlined\"\n          color=\"secondary\"\n        >\n          Key Browse\n        </Button>\n\n        {selectedFile}\n        {props.err.err && (\n          <p\n            class=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error Mui-required\"\n            id=\"pw-in-helper-text\"\n          >\n            {props.err.message}\n          </p>\n        )}\n        <input\n          id=\"keyInput\"\n          type=\"file\"\n          style={{ visibility: \"hidden\" }}\n          onChange={props.readFile}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nconst KeyInput = (props) => {\n  const classes = useStyles();\n\n  let privateKey = props.privateKey\n  let encrypt = props.encrypt\n\n  let resetErr = { err: false, key: false, message: false };\n\n  const [alert, setAlert] = useState(resetAlert);\n  const [byteKey, setByteKey] = useState();\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"byte\");\n  const [formTextInputError, setFormTextInputError] = useState(resetErr);\n  const [formByteInputError, setFormByteInputError] = useState(resetErr);\n  const [fileMetaData, setFileMetaData] = useState();\n  const [passPhraseError, setPassPhraseError] = useState(false);\n  const [passPhrase, setPassPhrase] = useState(\"\");\n\n  const handlePassPhrase = (e) => setPassPhrase(e.target.value);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlert(resetAlert);\n  };\n\n  const handleTextInput = (e) => {\n    setByteKey(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setInputTypeSelect(e.target.value);\n  };\n\n  const readKey = (e) => {\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    reader.readAsText(file);\n    setFileMetaData({ name: file.name, type: file.type.replace(\"/\", \"_\") });\n    reader.onload = () => {\n      setByteKey(reader.result);\n    };\n    reader.onerror = function () {};\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={formTextInputError.err && formTextInputError.message}\n        className={classes.textBox}\n        fullWidth={true}\n        error={formTextInputError.err}\n        id=\"outlined-multiline-static\"\n        label={\"RSA Key Input\"}\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        buttonLabel={\"key browse\"}\n        fileMetaData={fileMetaData}\n        err={formByteInputError}\n        formByteInputError={formByteInputError}\n        readFile={readKey}\n        setUploadedFile={setByteKey}\n        setFileMetaData={setFileMetaData}\n      />\n    );\n  }\n\n  const removeErrors = () => {\n    setAlert(resetAlert);\n    setFormTextInputError(resetErr);\n    setFormByteInputError(resetErr);\n    setPassPhraseError(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    removeErrors();\n\n    let err = false,\n      outkey;\n\n    if (passPhrase === \"\") {\n      setPassPhraseError(true);\n      err = true;\n    }\n\n    if (!byteKey || byteKey === \"\") {\n      if (inputTypeSelect === \"text\") {\n        setFormTextInputError({\n          ...formTextInputError,\n          err: true,\n          message: \"Key Text Required\",\n        });\n      } else {\n        setFormByteInputError({\n          ...formByteInputError,\n          err: true,\n          message: \"Key File Required\",\n        });\n      }\n      err = true;\n    } else {\n      privateKey\n        ? ({ key: outkey, error: err } = await handlePrivateKey(\n            byteKey,\n            passPhrase\n          ))\n        : ({ key: outkey, error: err } = await handlePublicKey(byteKey));\n    }\n\n    //continue to snag error in other input\n\n    props.handleKeyEncrypt(outkey, err);\n  };\n\n  const handlePublicKey = async (byteKey) => {\n    let rsaKey = (await openpgp.key.readArmored(byteKey)).keys[0];\n    if (!rsaKey) {\n      setAlert(keyError);\n      return { key: undefined, error: true };\n    } else {\n      return { key: rsaKey, error: false };\n    }\n  };\n\n  const handlePrivateKey = async (byteKey, passPhrase) => {\n    let output;\n    try {\n      const {\n        keys: [privateKey],\n      } = await openpgp.key.readArmored(byteKey);\n      await privateKey.decrypt(passPhrase);\n      output = [privateKey];\n      return { key: output, error: false };\n    } catch (e) {\n      e.message === \"Incorrect key passphrase\" && setAlert(privKeyPassError);\n      e.message === \"privateKey is undefined\" && setAlert(keyError);\n      return { key: undefined, error: true };\n    }\n  };\n\n  return (\n    <>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n      <Box>\n        <Box pt={3} mt={3}>\n          <div className={classes.keyHead}>\n            <h3>Key Input</h3>\n          </div>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Key Format</FormLabel>\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              value={inputTypeSelect}\n              defaultValue=\"top\"\n              onChange={handleInputType}\n            >\n              <FormControlLabel\n                value=\"byte\"\n                control={<Radio color=\"secondary\" />}\n                label=\"File\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                value=\"text\"\n                control={<Radio color=\"primary\" />}\n                label=\"Text\"\n                labelPlacement=\"start\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box>\n          <FormLabel component=\"legend\"></FormLabel>\n          <Box mt={3}>{inputType}</Box>\n        </Box>\n        {privateKey && (\n          <Box pt={3}>\n            <TextField\n              required\n              helperText={passPhraseError && \"PassPhrase Required!\"}\n              onChange={handlePassPhrase}\n              // className={props.class}\n              error={passPhraseError}\n              id=\"pw-in private key\"\n              type=\"password\"\n              label={\"Private Key PassPhrase\"}\n              variant=\"outlined\"\n              // variant=\"filled\"\n            />\n          </Box>\n        )}\n        <Box pt={3}>\n          <Button variant=\"contained\" color={\"primary\"} onClick={handleSubmit} disabled={props.loading}>\n            {encrypt ? \"Encrypt!\" : \"Decrypt!\"}\n            {props.loading && (\n            <CircularProgress\n              size={24}\n              color=\"primary\"\n              className={classes.buttonProgress}\n            />\n          )}\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default KeyInput;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport DeleteOutlineSharpIcon from \"@material-ui/icons/DeleteOutlineSharp\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport PassPhrase from \"../utils/Passphrase\";\nimport KeyInput from \"../utils/KeyInput\";\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    marginTop: \"15px\",\n    marginBottom: \"30px\",\n    textAlign: \"left\",\n  },\n  pwMeter: {\n    width: \"225px\",\n  },\n  pw: {\n    color: \"#777fa7\",\n    marginTop: \"18px\",\n  },\n  textBox: {\n    maxWidth: \"700px\",\n  },\n}));\n\nconst InFile = (props) => {\n  // const classes = useStyles();\n\n  const handleDelete = () => {\n    props.setUploadedFile(null);\n    props.setFileMetaData(null);\n  };\n  const selectedFile = props.fileMetaData && (\n    <>\n      <FormLabel>{`Selected: ${props.fileMetaData.name}`}</FormLabel>\n      <IconButton onClick={handleDelete}>\n        <DeleteOutlineSharpIcon />\n      </IconButton>\n    </>\n  );\n  return (\n    <Box>\n      <FormLabel component=\"legend\">Select a File Object:</FormLabel>\n      <Box mt={1}>\n        <Button\n          onClick={() => document.getElementById(\"inp\").click()}\n          variant=\"outlined\"\n          color=\"secondary\"\n        >\n          Browse\n        </Button>{\" \"}\n        {selectedFile}\n        {props.formByteInputError && (\n          <p\n            class=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error Mui-required\"\n            id=\"pw-in-helper-text\"\n          >\n            File Required\n          </p>\n        )}\n        <input\n          id=\"inp\"\n          type=\"file\"\n          style={{ visibility: \"hidden\" }}\n          onChange={props.readFile}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nconst EncryptForm = (props) => {\n  const classes = useStyles();\n\n  //update-> handle all Files wor here. send up to handle enc + output\n  //on unmout clear all state\n  //is pw comp to handle all passphrase work\n\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"text\");\n  const [textInput, textInputState] = useState(\"\");\n  const [formTextInputError, setFormTextInputError] = useState(false);\n  const [formByteInputError, setFormByteInputError] = useState(false);\n\n  const [uploadedFile, setUploadedFile] = useState();\n  const [fileMetaData, setFileMetaData] = useState();\n\n  const readFile = (e) => {\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    setFileMetaData({ name: file.name, type: file.type.replace(\"/\", \"_\") });\n\n    reader.onload = function () {\n      setUploadedFile(new Uint8Array(reader.result));\n    };\n\n    reader.onerror = function () {};\n  };\n\n  //text input\n  const handleTextInput = (e) => {\n    textInputState(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setFormTextInputError(false);\n    setFormByteInputError(false);\n    setInputTypeSelect(e.target.value);\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={formTextInputError && \"Please Select a file object!\"}\n        className={classes.textBox}\n        fullWidth={true}\n        error={formTextInputError}\n        id=\"outlined-multiline-static\"\n        label=\"Text to Encrypt\"\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        fileMetaData={fileMetaData}\n        formByteInputError={formByteInputError}\n        readFile={readFile}\n        setUploadedFile={setUploadedFile}\n        setFileMetaData={setFileMetaData}\n      />\n    );\n  }\n\n  const handleFormSubmit = () => {\n    //TODO Needed?\n    // e && e.preventDefault();\n    setFormTextInputError(false);\n    setFormByteInputError(false);\n\n    if (inputTypeSelect === \"text\" && (!textInput || textInput === \"\")) {\n      setFormTextInputError(true);\n      return true;\n    } else if (inputTypeSelect === \"byte\" && !uploadedFile) {\n      setFormByteInputError(true);\n      return true;\n    }\n    return false;\n  };\n\n  const handleKeyEncrypt = (byteKey, keyErr) => {\n    let errCheck = handleFormSubmit();\n    if (!errCheck && !keyErr) {\n      handleEncrypt(byteKey);\n    }\n  };\n  const handleEncrypt = (encryptionKey) => {\n    let aes, rsa;\n    props.encType === 0 ? (aes = encryptionKey) : (rsa = encryptionKey);\n\n    if (inputTypeSelect === \"text\") {\n      props.handleEncrypt(aes, rsa, textInput, \"txt\", false);\n    } else {\n      props.handleEncrypt(aes, rsa, uploadedFile, fileMetaData.ext, true);\n    }\n  };\n\n  return (\n    <form onSubmit={(e) => handleFormSubmit(e)}>\n      <Box mt={4} mb={4}>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Input Format</FormLabel>\n          <RadioGroup\n            row\n            aria-label=\"position\"\n            name=\"position\"\n            value={inputTypeSelect}\n            defaultValue=\"top\"\n            onChange={handleInputType}\n          >\n            <FormControlLabel\n              value=\"text\"\n              control={<Radio color=\"primary\" />}\n              label=\"Text Input\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              value=\"byte\"\n              control={<Radio color=\"secondary\" />}\n              label=\"File Input\"\n              labelPlacement=\"start\"\n            />\n          </RadioGroup>\n        </FormControl>\n      </Box>\n      {inputType}\n\n      {props.encType === 0 ? (\n        <PassPhrase\n          mainButtonText={\"Encrypt\"}\n          modalButtonText={\"Submit\"}\n          handleSubmit={handleFormSubmit}\n          handleConfirm={handleEncrypt}\n          loading={props.loader}\n        />\n      ) : (\n        <KeyInput\n          loading={props.loader}\n          privateKey={false}\n          encrypt={true}\n          handleKeyEncrypt={handleKeyEncrypt}\n        />\n      )}\n    </form>\n  );\n};\n\nexport default EncryptForm;\n","import React, { useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Result from \"./EncResult\";\nimport EncTypeTab from \"../utils/EncTypeTab\";\nimport EncryptForm from \"./EncryptForm\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { resetAlert, encSuccess, encError } from \"../utils/utils\";\nimport {snackLocation} from '../utils/config';\n\n\nconst openpgp = require(\"openpgp\");\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    // marginTop: \"15px\",\n    marginBottom: \"30px\",\n    textAlign: \"left\",\n  },\n  pre: {\n    fontSize: \"inherit\",\n    color: \"inherit\",\n    border: \"initial\",\n    padding: \"initial\",\n    fontFamily: \"inherit\",\n  },\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  alert: {\n    width: \"95%\",\n    // paddingTop: \"5px\",\n    margin: \"auto\",\n  },\n}));\n\nconst Encrypt = (props) => {\n\n  const classes = useStyles();\n  const [success, setSuccess] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [encType, setEncType] = useState(0);\n  const [alert, setAlert] = useState(resetAlert);\n  const [armorTxt, setArmorTxt] = useState();\n\n  const byteEncrypt = async (\n    passPhrase,\n    pubKey,\n    uploadedFile,\n    ext,\n    binInd\n  ) => {\n\n    try {\n    setLoader(true);\n\n    let inputMessage =\n    binInd\n        ? openpgp.message.fromBinary(uploadedFile)\n        : openpgp.message.fromText(uploadedFile);\n\n    let encIn = {\n      message: inputMessage,\n      armor: false,\n    };\n\n    pubKey\n      ? (encIn.publicKeys = pubKey)\n      : (encIn.passwords = [passPhrase]);\n\n    const { message } = await openpgp.encrypt(encIn);\n    binInd && message.packets.write();\n\n\n    setArmorTxt({ armorTxt: message.armor(), ext: ext });\n    outputHandler();\n  } catch (e) {\n    setAlert(encError);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlert(resetAlert);\n  };\n\n  const outputHandler = () => {\n    setAlert(encSuccess);\n    setSuccess(true);\n    setLoader(false);\n  };\n\n  const reset = () => {\n    setSuccess(false);\n    setAlert(resetAlert);\n  };\n\n  const handleEncType = (type) => {\n    setEncType(type);\n  };\n\n  let form = (\n    <EncryptForm\n      handleEncrypt={byteEncrypt}\n      encType={encType}\n      loader={loader}\n    />\n  );\n\n  return (\n    <>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n\n      {!success && <EncTypeTab handleType={handleEncType} />}\n      <Grid container wrap=\"nowrap\" spacing={0}>\n        <Grid item></Grid>\n        <Grid item xs>\n          <Typography className={classes.heading} variant=\"h5\" gutterBottom>\n            {encType === 0 ? \"AES 256 Encryption\" : \"RSA  Encryption\"}\n          </Typography>\n          {success ? (\n            <Result\n              reset={reset}\n              armorTxt={armorTxt}\n            />\n          ) : (\n            form\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Encrypt;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Display from \"../utils/BrowserResult\";\nimport { mimes } from \"../utils/utils\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    marginTop: \"15px\",\n    marginBottom: \"30px\",\n    textAlign: \"left\",\n  },\n  result: {\n    // marginTop: '200px',\n    height: \"100px\",\n    width: \"350px\",\n    overflowY: \"scroll\",\n  },\n  paper: {\n    height: \"100px\",\n    width: \"350px\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n}));\n\nconst Result = (props) => {\n  const classes = useStyles();\n\n  let outbound = props.outbound;\n\n  const [openEnc, setOpenEnc] = useState(false);\n\n  let disableCopy =\n    outbound.outbound.length > 10000 || outbound.type === \"byte\";\n\n  const outputHandler = (decryptedVal) => {\n    const element = document.createElement(\"a\");\n    let file;\n    if (outbound.type === \"byte\") {\n      file = new Blob([decryptedVal.outbound]);\n    } else {\n      file = new Blob([decryptedVal.outbound], {\n        type: mimes[decryptedVal.ext],\n      });\n    }\n    element.href = URL.createObjectURL(file);\n    element.download =\n      \"pep_output_\" +\n      element.href.split(\"/\")[3].split(\"-\")[0] +\n      \".\" +\n      decryptedVal.ext; //make random name\n    element.click();\n    element.remove();\n  };\n\n  return (\n    <Grid container wrap=\"nowrap\" spacing={0}>\n      <Grid item></Grid>\n      <Grid item xs>\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\n          Retrieve Encrypted Data\n        </Typography>\n        <Box mb={2}>\n              <Button\n                disabled={disableCopy}\n                onClick={() => setOpenEnc(!openEnc)}\n                variant=\"outlined\"\n                color={\"secondary\"}\n                className={classes.button}\n              >\n                In Browser\n              </Button>\n          {disableCopy && (\n            <FormHelperText style={{ paddingLeft: \"8px\" }}>\n              Result too Large\n            </FormHelperText>\n          )}\n          <Button\n            // onClick={() => props.outputTag.click()}\n            onClick={() => outputHandler(outbound)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            Download\n          </Button>\n          {openEnc && <Display val={outbound.outbound} id=\"encryptedResult\" />}\n        </Box>\n        <Box>\n          <Button\n            onClick={props.reset}\n            variant=\"contained\"\n            className={classes.button}\n            color={\"primary\"}\n          >\n            {\" \"}\n            New Decryption{\" \"}\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Result;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport DeleteOutlineSharpIcon from \"@material-ui/icons/DeleteOutlineSharp\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport KeyInput from \"../utils/KeyInput\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\n//todo file type (text, csv) or image based\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    marginTop: \"15px\",\n    marginBottom: \"30px\",\n    textAlign: \"left\",\n  },\n  pwMeter: {\n    width: \"225px\",\n  },\n  pw: {\n    color: \"#777fa7\",\n    marginTop: \"18px\",\n  },\n  textBox: {\n    maxWidth: \"700px\",\n  },\n\n  dropSelect: {\n    width: \"225px\",\n  },\n  buttonProgress: {\n    // color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst InFile = (props) => {\n  // const classes = useStyles();\n\n  const handleDelete = () => {\n    props.setUploadedFile(null);\n    props.setFileMetaData(null);\n  };\n  const selectedFile = props.fileMetaData && (\n    <>\n      <FormLabel>{`Selected: ${props.fileMetaData.name}`}</FormLabel>\n      <IconButton onClick={handleDelete}>\n        <DeleteOutlineSharpIcon />\n      </IconButton>\n    </>\n  );\n  return (\n    <Box>\n      <FormLabel component=\"legend\">Select a File Object:</FormLabel>\n      <Box mt={1}>\n        <Button\n          onClick={() => document.getElementById(\"inp\").click()}\n          variant=\"outlined\"\n          color=\"secondary\"\n        >\n          Browse\n        </Button>{\" \"}\n        {selectedFile}\n        {props.formByteInputError && (\n          <p\n            class=\"MuiFormHelperText-root MuiFormHelperText-contained Mui-error Mui-required\"\n            id=\"pw-in-helper-text\"\n          >\n            File Required\n          </p>\n        )}\n        <input\n          id=\"inp\"\n          type=\"file\"\n          style={{ visibility: \"hidden\" }}\n          onChange={props.readFile}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nconst DecryptForm = (props) => {\n  const classes = useStyles();\n\n  //update-> handle all Files wor here. send up to handle enc + output\n  //on unmout clear all state\n  //is pw comp to handle all passphrase work\n\n  let resetErrors = {\n    formTextInputError: false,\n    formByteInputError: false,\n    passPhraseMissingError: false,\n    fileTypeErr: false,\n    fileExtErr: false,\n  };\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"text\");\n  const [textInput, textInputState] = useState(\"\");\n  const [errors, setErrors] = useState(resetErrors);\n  const [passPhrase, passPhraseState] = useState(\"\");\n  const [uploadedFile, setUploadedFile] = useState();\n  const [fileType, setFileType] = useState(\"\");\n  const [fileExt, setFileExt] = useState(\"\");\n  const [fileMetaData, setFileMetaData] = useState();\n\n  const handlePassPhrase = (e) => {\n    passPhraseState(e.target.value);\n  };\n\n  const handleFileType = (e) => {\n    let extIn = e.target.value;\n    setFileExt(extIn);\n    if (extIn === \"txt\" || extIn === \"csv\") {\n      setFileType(\"text\");\n    } else {\n      setFileType(\"byte\");\n    }\n  };\n\n  const readFile = (e) => {\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    setFileMetaData({ name: file.name, type: file.type.replace(\"/\", \"_\") });\n\n    reader.onload = function () {\n      setUploadedFile(new Uint8Array(reader.result));\n    };\n    reader.onerror = function () {};\n\n  };\n\n  //text input\n  const handleTextInput = (e) => {\n    textInputState(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setErrors({\n      ...errors,\n      formTextInputError: false,\n      formByteInputError: false,\n    });\n    setInputTypeSelect(e.target.value);\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={errors.formTextInputError && \"Please Select a file object!\"}\n        className={classes.textBox}\n        fullWidth={true}\n        error={errors.formTextInputError}\n        id=\"outlined-multiline-static\"\n        label=\"Text to Encrypt\"\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        fileMetaData={fileMetaData}\n        formByteInputError={errors.formByteInputError}\n        readFile={readFile}\n        setUploadedFile={setUploadedFile}\n        setFileMetaData={setFileMetaData}\n      />\n    );\n  }\n\n  const handleFormSubmit = (e) => {\n    e && e.preventDefault();\n    setErrors(resetErrors);\n\n    let byteErr,\n      textErr,\n      pwErr,\n      fileTypeErr,\n      fileExtErr = false;\n\n    let totalErr = false;\n\n    if (inputTypeSelect === \"text\" && (!textInput || textInput === \"\")) {\n      textErr = true;\n      totalErr = true;\n    } else if (inputTypeSelect === \"byte\" && !uploadedFile) {\n      totalErr = true;\n      byteErr = true;\n    }\n\n    if (fileType === \"\") {\n      fileTypeErr = true;\n      totalErr = true;\n    } else if (fileType === \"text\" && fileExt === \"\") {\n      fileExtErr = true;\n      totalErr = true;\n    }\n\n    if (props.encType === 0 && passPhrase === \"\") {\n      pwErr = true;\n      totalErr = true;\n    } else if (props.encType === 0 && totalErr === false) {\n      handleDecrypt(passPhrase);\n    }\n\n    setErrors({\n      formTextInputError: textErr,\n      formByteInputError: byteErr,\n      passPhraseMissingError: pwErr,\n      fileTypeErr: fileTypeErr,\n      fileExtErr: fileExtErr,\n    });\n    return totalErr;\n  };\n\n  const handleKeyDecrypt = (byteKey, keyErr) => {\n    let errCheck = handleFormSubmit();\n    if (!errCheck && !keyErr) {\n      handleDecrypt(byteKey);\n    }\n  };\n  const handleDecrypt = (encryptionKey) => {\n    let aes, rsa;\n    props.encType === 0 ? (aes = encryptionKey) : (rsa = encryptionKey);\n\n    if (fileType === \"text\") {\n      props.byteDecrypt(aes, rsa, textInput, {\n        fileType: fileType,\n        ext: fileExt,\n      });\n    } else if (fileType === \"byte\") {\n      props.byteDecrypt(aes, rsa, textInput, {\n        fileType: fileType,\n        ext: fileExt,\n      });\n    }\n  };\n  return (\n    <form onSubmit={(e) => handleFormSubmit(e)}>\n      <Box mt={4} mb={4}>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Input Format</FormLabel>\n          <RadioGroup\n            row\n            aria-label=\"position\"\n            name=\"position\"\n            value={inputTypeSelect}\n            defaultValue=\"top\"\n            onChange={handleInputType}\n          >\n            <FormControlLabel\n              value=\"text\"\n              control={<Radio color=\"primary\" />}\n              label=\"Text Input\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              value=\"byte\"\n              control={<Radio color=\"secondary\" />}\n              label=\"File Input\"\n              labelPlacement=\"start\"\n            />\n          </RadioGroup>\n        </FormControl>\n      </Box>\n      {inputType}\n\n      <Box mt={4} mb={4}>\n        <FormControl\n          variant=\"outlined\"\n          className={classes.formControl}\n          error={errors.fileTypeErr ? true : false}\n        >\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            File Type\n          </InputLabel>\n          <Select\n            required\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={fileExt}\n            onChange={handleFileType}\n            className={classes.dropSelect}\n            label=\"Text FIle Type\"\n          >\n            <MenuItem value={\"txt\"}>.txt</MenuItem>\n            <MenuItem value={\"csv\"}>.csv</MenuItem>\n            <MenuItem value={\"byte\"}>Something Else</MenuItem>\n          </Select>\n          {errors.fileTypeErr && (\n            <FormHelperText>\n              Please enter the format of the decrypted file\n            </FormHelperText>\n          )}\n        </FormControl>\n      </Box>\n\n      {props.encType === 0 ? (\n        <>\n          <Box mt={4} mb={4}>\n            <TextField\n              required\n              helperText={\n                errors.passPhraseMissingError && \"PassPhrase Required!\"\n              }\n              onChange={handlePassPhrase}\n              error={errors.passPhraseMissingError}\n              id=\"pw-in\"\n              type=\"password\"\n              label={\"PassPhrase\"}\n              variant=\"outlined\"\n            />\n          </Box>\n          <Box pt={3}>\n            <Button\n              type=\"submit\"\n              onClick={handleFormSubmit}\n              variant=\"contained\"\n              color={\"primary\"}\n              disabled={props.loading}\n            >\n              Decrypt\n              {props.loading && (\n                <CircularProgress\n                  size={24}\n                  color=\"primary\"\n                  className={classes.buttonProgress}\n                />\n              )}\n            </Button>\n          </Box>\n        </>\n      ) : (\n        <KeyInput\n          loading={props.loader}\n          privateKey={true}\n          encrypt={false}\n          handleKeyEncrypt={handleKeyDecrypt}\n        />\n      )}\n    </form>\n  );\n};\n\nexport default DecryptForm;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Result from \"./DecResult\";\nimport EncTypeTab from \"../utils/EncTypeTab\";\nimport DecryptForm from \"./DecryptForm\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport * as utils from \"../utils/utils\";\nimport { snackLocation } from \"../utils/config\";\n\nconst openpgp = require(\"openpgp\");\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    // marginTop: \"15px\",\n    marginBottom: \"30px\",\n    textAlign: \"left\",\n  },\n  pre: {\n    fontSize: \"inherit\",\n    color: \"inherit\",\n    border: \"initial\",\n    padding: \"initial\",\n    fontFamily: \"inherit\",\n  },\n  main: {\n    width: \"80%\",\n  },\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  alert: {\n    width: \"95%\",\n    // paddingTop: \"5px\",\n    margin: \"auto\",\n  },\n}));\n\nconst Decrypt = (props) => {\n  const classes = useStyles();\n  const [success, setSuccess] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [encType, setEncType] = useState(0);\n  const [alert, setAlert] = useState(utils.resetAlert);\n  const [outbound, setOutBound] = useState();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlert(utils.resetAlert);\n  };\n\n  const byteDecrypt = async (passPhrase, privateKey, textInput, decType) => {\n    setLoader(true);\n    setAlert(utils.resetAlert);\n\n    let encIn;\n    try {\n      encIn = {\n        message: await openpgp.message.readArmored(textInput),\n      };\n    } catch (e) {\n      let format =\n        e.message === \"Misformed armored text\" ||\n        e.message === \"String contains an invalid character\";\n      format === true ? setAlert(utils.decFormat) : setAlert(utils.decGeneric);\n      return;\n    }\n    privateKey\n      ? (encIn.privateKeys = privateKey)\n      : (encIn.passwords = [passPhrase]);\n\n    decType.fileType === \"byte\" && (encIn.format = \"binary\");\n\n    try {\n      const { data: decrypted } = await openpgp.decrypt(encIn);\n\n      let outFileType = await utils.extSelect(decrypted, decType);\n\n      setOutBound({\n        outbound: decrypted,\n        ext: outFileType,\n        type: decType.fileType,\n      });\n      outputHandler();\n    } catch (e) {\n      e.message ===\n        \"Error decrypting message: Session key decryption failed.\" &&\n        setAlert(utils.decPW);\n      return;\n    }\n  };\n\n  const outputHandler = () => {\n    setSuccess(true);\n    setLoader(false);\n    setAlert(utils.decSuccess);\n  };\n\n  const reset = () => {\n    setSuccess(false);\n    setAlert(utils.resetAlert);\n  };\n\n  const handleDecType = (type) => {\n    setEncType(type);\n  };\n\n  let form = (\n    <DecryptForm byteDecrypt={byteDecrypt} encType={encType} loader={loader} />\n  );\n\n  return (\n    <>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n\n      {!success && <EncTypeTab handleType={handleDecType} />}\n\n      {/* <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight=\"100vh\"\n          > */}\n\n      <Grid container wrap=\"nowrap\" spacing={0}>\n        <Grid item xs>\n          <Typography className={classes.heading} variant=\"h5\" gutterBottom>\n            {encType === 0 ? \"AES 256 Decryption\" : \"RSA  Decryption\"}\n          </Typography>\n          {success ? <Result reset={reset} outbound={outbound} /> : form}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Decrypt;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport PassPhrase from \"../utils/Passphrase\";\n\n\nimport Display from '../utils/BrowserResult'\n\nconst openpgp = require(\"openpgp\");\n\nconst useStyles = makeStyles((theme) => ({\n  formField: {\n    width: \"350px\",\n  },\n  pwInput: {\n    width: \"350px\",\n  },\n\n  main: {\n    marginTop: \"50px\",\n  },\n\n  heading: {\n    marginTop: \"15px\",\n    marginBottom: \"30px\",\n    textAlign: \"left\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n  // copy: {\n  //   marginLeft: \"318px\",\n  // },\n  alert: {\n    // marginRight: \"310px\",\n    width: \"200px\",\n    height: \"10px\",\n  },\n}));\n\nconst KeyGen = (props) => {\n  const classes = useStyles();\n  const [key, setKey] = useState(undefined);\n  const [keyFields, setKeyFields] = useState({ name: \"\", email: \"\", pw: \"\" });\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({\n    name: false,\n    emailNull: false,\n    emailFormat: false,\n    emMessage: false,\n  });\n\n  const handleCreate = async (passKey) => {\n    setLoading(true);\n    const key = await openpgp.generateKey({\n      userIds: [{ name: keyFields.name, email: keyFields.email }],\n      rsaBits: 4096, // RSA key size\n      passphrase: passKey,\n    });\n    setKey(key);\n    setLoading(false);\n  };\n\n  let handleEmailValid = (email) => {\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (re.test(email)) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleName = (e) => {\n    setKeyFields({ ...keyFields, name: e.target.value });\n  };\n  const handleEmail = (e) => {\n    setKeyFields({ ...keyFields, email: e.target.value });\n  };\n\n  const handleFormSubmit = () => {\n    let nameNull,\n      emailNull,\n      validFormat,\n      emMessage = false;\n    if (keyFields.name === \"\") {\n      nameNull = true;\n    }\n    if (keyFields.email === \"\") {\n      emailNull = true;\n      emMessage = \"Email Required!\";\n    } else {\n      validFormat = handleEmailValid(keyFields.email);\n      emMessage = \"Invalid Email Format!\";\n    }\n    setErrors({\n      ...errors,\n      name: nameNull,\n      emailNull: emailNull,\n      emailFormat: validFormat,\n      emMessage: emMessage,\n    });\n    if (validFormat || emailNull || nameNull) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleConfirm = (key) => {\n    handleCreate(key);\n  };\n\n  return (\n    <>\n      {typeof key == \"undefined\" ? (\n        <>\n          <Typography className={classes.heading} variant=\"h5\" gutterBottom>\n            RSA Key Generation\n          </Typography>\n          <div className={classes.main}>\n            <form onSubmit={(e) => handleFormSubmit(e)}>\n              <Box mb={3}>\n                <TextField\n                  required\n                  className={classes.formField}\n                  id=\"outlined-required\"\n                  label=\"Name\"\n                  onChange={handleName}\n                  error={errors.name}\n                  helperText={errors.name && \"Text Required!\"}\n                  // defaultValue=\"Hello World\"\n                  variant=\"outlined\"\n                />\n              </Box>\n\n              <Box mb={3}>\n                {\" \"}\n                <TextField\n                  required\n                  className={classes.formField}\n                  id=\"outlined-disabled\"\n                  label=\"email\"\n                  onChange={handleEmail}\n                  error={errors.emailNull || errors.emailFormat}\n                  helperText={\n                    (errors.emailNull || errors.emailFormat) && errors.emMessage\n                  }\n                  // defaultValue=\"Hello World\"\n                  variant=\"outlined\"\n                />\n              </Box>\n              <Box mb={3}></Box>\n              <PassPhrase\n                class={classes.pwInput}\n                loading={loading}\n                mainButtonText={\"Generate\"}\n                modalButtonText={\"Submit\"}\n                handleSubmit={handleFormSubmit}\n                handleConfirm={handleConfirm}\n              />\n            </form>\n          </div>\n        </>\n      ) : (\n        <Result encKeys={key} />\n      )}\n    </>\n  );\n};\n\n\nconst Result = (props) => {\n  const classes = useStyles();\n\n  const [openPub, setOpenPub] = useState(false);\n  const [openPriv, setOpenPriv] = useState(false);\n\n  const dlKey = (key,name) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([key], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = name+'.txt'\n    element.click()\n    element.remove()\n  };\n\n  let encKeys = props.encKeys;\n\n  return (\n    <>\n      <Grid container wrap=\"nowrap\" spacing={0}>\n        <Grid item></Grid>\n        <Grid item xs>\n          <Typography className={classes.heading} variant=\"h5\" gutterBottom>\n            Key Result\n          </Typography>\n\n          <Typography className={classes.heading} variant=\"h6\" gutterBottom>\n            Private Key\n          </Typography>\n          <Box mb={2}>\n            <Button\n              onClick={() => setOpenPriv(!openPriv)}\n              variant=\"outlined\"\n              color={\"primary\"}\n              className={classes.button}\n            >\n              {openPriv ? \"Hide\" : \"In Browser\"}\n            </Button>\n            <Button\n              onClick={() => dlKey(encKeys.privateKeyArmored, 'private_key')}\n              variant=\"outlined\"\n              color={\"primary\"}\n              className={classes.button}\n            >\n              Download\n            </Button>\n\n            {openPriv && (\n              <Display val={encKeys.privateKeyArmored} id=\"privateKey\" />\n            )}\n          </Box>\n          <Typography className={classes.heading} variant=\"h6\" gutterBottom>\n            Public Key\n          </Typography>\n          <Box mb={2}>\n            <Button\n              onClick={() => setOpenPub(!openPub)}\n              variant=\"outlined\"\n              color={\"secondary\"}\n              className={classes.button}\n            >\n              {openPub ? \"Hide\" : \"In Browser\"}\n            </Button>\n            <Button\n              onClick={() => dlKey(encKeys.publicKeyArmored, 'public_key')}\n              variant=\"outlined\"\n              color={\"secondary\"}\n              className={classes.button}\n            >\n              Download\n            </Button>\n\n            {openPub && (\n              <Display val={encKeys.publicKeyArmored} id=\"publicKey\" />\n            )}\n          </Box>\n          <Box></Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport default KeyGen;","import React, {useState} from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Encrypt from \"./components/encrypt/Encrypt\";\nimport Decrypt from \"./components/decrypt/Decrypt\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport KeyGen from \"./components/key_gen/KeyGen\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"./App.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(2),\n      color: \"purple\",\n    },\n  },\n  alert: {\n    width: \"95%\",\n    paddingTop: \"10px\",\n    margin: \"auto\",\n  },\n\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    // backgroundColor:'#fafffd',//'#f8f5fc',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  const [menuState, setMenuState] = useState(2);\n\n  let state;\n  if (menuState === 1) {\n    state = <Encrypt />;\n  } else if (menuState === 2) {\n    state = <Decrypt />;\n  } else if (menuState === 3) {\n    state = <KeyGen />;\n  }\n\n  return (\n    <div>\n      <NavBar setMenuState={setMenuState} appState={menuState}/>\n\n      <Container className={classes.layout}>\n        <Paper className={classes.paper}>\n          {state}\n          </Paper>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport teal from '@material-ui/core/colors/teal';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: deepPurple,\n    secondary: teal,\n  },\n},\n);\n\n\nReactDOM.render(\n  <React.Fragment>\n    <ThemeProvider theme={theme}>\n    <App />\n    </ThemeProvider>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}