{"version":3,"sources":["components/shared/BrowserResult.js","components/shared/Passphrase.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/icons/Help.js","components/key_gen/Result.js","components/key_gen/KeyGen.js"],"names":["useStyles","makeStyles","theme","result","padding","button","margin","copy","textAlign","Display","props","classes","commonClasses","useCommonStyles","useState","open","vertical","horizontal","openSnack","setOpenSnack","inputId","id","keyIn","val","className","title","aria-label","onClick","pre","anchorOrigin","onClose","message","key","pwInput","maxWidth","pw","color","marginTop","buttonProgress","position","top","left","marginLeft","PassPhraseConfirm","confirmPassPhrase","setConfirmPassPhrase","status","label","confirmError","handleClose","aria-labelledby","required","autoFocus","error","onChange","e","target","value","type","fullWidth","handleConfirm","buttonText","PassPhrase","passPhrase","passPhraseState","passPhraseMissingError","errors","setErrors","setOpen","score","resp","strength","setStrength","strengthResp","0","1","2","3","4","container","spacing","item","disabled","loading","helperText","zxcvbn","class","variant","length","pt","preventDefault","err","handleSubmit","mainButtonText","size","modalButtonText","MenuItem","React","ref","tabIndex","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","undefined","ListItem","_extends","dense","clsx","root","gutters","withStyles","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","name","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","main","paddingLeft","paddingRight","Result","openPub","setOpenPub","openPriv","setOpenPriv","dlKey","element","document","file","Blob","href","URL","createObjectURL","download","click","remove","encKeys","Box","Typography","gutterBottom","heading","subHeadingBold","pb","Button","data-testid","privateKeyArmored","mb","publicKeyArmored","form","down","formField","dropSelect","formControl","KeyGen","setKey","bits","setBits","email","keyFields","setKeyFields","setLoading","emailNull","emailFormat","emMessage","handleCreate","passKey","a","generateKey","userIds","rsaBits","passphrase","handleFormSubmit","nameNull","validFormat","test","p","onSubmit","TextField","Grid","FormControl","fileTypeErr","InputLabel","Select","labelId","Tooltip","IconButton","disableFocusRipple","disableRipple","mt"],"mappings":"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","file":"static/js/8.18f9425c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport { Tooltip, Paper, Snackbar, IconButton } from \"@material-ui/core\";\nimport { copy } from \"../utils/utils\";\nimport { useCommonStyles } from \"../commonStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n  result: {\n    padding: \"10px\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n  copy: {\n    textAlign: \"right\",\n  },\n}));\n\nconst Display = (props) => {\n  const classes = useStyles();\n  const commonClasses = useCommonStyles();\n  const [openSnack, setOpenSnack] = useState({\n    open: false,\n    vertical: \"bottom\",\n    horizontal: \"left\",\n  });\n\n  const { vertical, horizontal, open } = openSnack;\n\n  let inputId = props.id;\n  let keyIn = props.val;\n\n  const handleCopy = () => {\n    setOpenSnack({ ...openSnack, open: true });\n    copy(inputId);\n  };\n\n  const handleClose = () => {\n    setOpenSnack({ ...openSnack, open: false });\n  };\n  return (\n    <>\n      <div className={classes.copy}>\n        <Tooltip title=\"Copy\">\n          <IconButton aria-label=\"Copy\" onClick={handleCopy}>\n            <FileCopyIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <Paper className={classes.result}>\n        <pre className={commonClasses.pre} id={inputId}>\n          {keyIn}\n        </pre>\n      </Paper>\n\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        onClose={handleClose}\n        message=\"Copied to clipboard\"\n        key={vertical + horizontal}\n      />\n    </>\n  );\n};\n\nexport default Display;\n","import React, { useState } from \"react\";\nimport zxcvbn from \"zxcvbn\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  Box,\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  pwInput: {\n    maxWidth: \"225px\",\n  },\n  pw: {\n    color: \"#777fa7\",\n    marginTop: \"18px\",\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst PassPhraseConfirm = (props) => {\n  const [confirmPassPhrase, setConfirmPassPhrase] = useState();\n\n  const passPhraseConfirmBuffer = (e) => {\n    setConfirmPassPhrase(e.target.value);\n  };\n\n  const status = props.open;\n\n  const label = props.confirmError\n    ? \"Please Try Again\"\n    : \"Passphrase Confirmation\";\n\n  return (\n    <div>\n      <Dialog\n        open={status}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Passphrase Confirmation\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please re enter your passphrase below:\n          </DialogContentText>\n          <TextField\n            required\n            autoFocus\n            error={props.confirmError}\n            onChange={passPhraseConfirmBuffer}\n            margin=\"dense\"\n            id=\"name\"\n            label={label}\n            type=\"password\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={() => props.handleConfirm(confirmPassPhrase)}\n            color=\"primary\"\n          >\n            {props.buttonText}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst PassPhrase = (props) => {\n  const classes = useStyles();\n\n  const [passPhrase, passPhraseState] = useState(\"\");\n  const [errors, setErrors] = useState({\n    confirmError: false,\n    passPhraseMissingError: false,\n  });\n  const [open, setOpen] = useState(false);\n  const [strength, setStrength] = useState({ score: null, resp: null });\n\n  let strengthResp = {\n    0: \"Very Bad 👎\",\n    1: \"Bad 👎\",\n    2: \"Weak 😐\",\n    3: \"Good 🙂\",\n    4: \"Strong 🔥🔥🔥\",\n  };\n\n  const handlePassPhrase = (e) => {\n    passPhraseState(e.target.value);\n    const result = zxcvbn(e.target.value);\n    setStrength({\n      score: result.score === 0 ? \"1\" : result.score,\n      resp: strengthResp[result.score],\n    });\n  };\n\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors({ confirmError: false, passPhraseMissingError: false });\n    const err = props.handleSubmit(e);\n\n    if (!passPhrase) {\n      setErrors({ ...errors, passPhraseMissingError: true });\n    }\n    if (!passPhrase || err) {\n      return;\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const handleConfirm = (confirmPassPhrase) => {\n    if (confirmPassPhrase === passPhrase) {\n      setOpen(false);\n      props.handleConfirm(passPhrase);\n    } else {\n      setErrors({ ...errors, confirmError: true });\n    }\n  };\n\n  return (\n    <>\n      <Box>\n        <Grid container spacing={1}>\n          <Grid item>\n            <TextField\n              required\n              disabled={props.loading}\n              helperText={\n                errors.passPhraseMissingError && \"PassPhrase Required!\"\n              }\n              onChange={handlePassPhrase}\n              className={props.class}\n              error={errors.passPhraseMissingError}\n              id=\"pw-in\"\n              type=\"password\"\n              label={\"Passphrase\"}\n              variant=\"outlined\"\n            />\n          </Grid>\n          {passPhrase.length > 0 && (\n            <Grid className={classes.pw} item>\n              {strength.resp}\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n\n      <Box pt={3}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color={\"primary\"}\n          disabled={props.loading}\n          onClick={handleSubmit}\n        >\n          {props.mainButtonText}\n          {props.loading && (\n            <CircularProgress\n              size={24}\n              color=\"primary\"\n              className={classes.buttonProgress}\n            />\n          )}\n        </Button>\n      </Box>\n\n      <PassPhraseConfirm\n        open={open}\n        buttonText={props.modalButtonText}\n        handleClose={() => setOpen(false)}\n        handleConfirm={handleConfirm}\n        confirmError={errors.confirmError}\n      />\n    </>\n  );\n};\n\nexport default PassPhrase;\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\"\n}), 'Help');\n\nexports.default = _default;","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Display from \"../shared/BrowserResult\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { useCommonStyles } from \"../commonStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    marginLeft: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n  button: {\n    margin: \"5px\",\n  },\n}));\n\nconst Result = (props) => {\n  const classes = useStyles();\n  const commonClasses = useCommonStyles();\n\n  const [openPub, setOpenPub] = useState(false);\n  const [openPriv, setOpenPriv] = useState(false);\n\n  const dlKey = (key, name) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([key], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = name + \".txt\";\n    element.click();\n    element.remove();\n  };\n\n  let encKeys = props.encKeys;\n\n  return (\n    <div className={classes.main}>\n      <Box>\n        <Typography variant=\"h1\" gutterBottom className={commonClasses.heading}>\n          <b> Key Results </b>\n        </Typography>\n        <br />\n        <br />\n\n        <Typography\n          variant=\"h2\"\n          className={commonClasses.subHeadingBold}\n          gutterBottom\n        >\n          Private Key\n        </Typography>\n\n        <Box pb={2}>\n          <Typography color=\"error\">\n            <b>The private key is private. NEVER SHARE YOUR PRIVATE KEY</b>\n          </Typography>\n          <p>\n            Use the private key for decrypting data encrypted with your public\n            key.\n          </p>\n        </Box>\n        <Box pb={4}>\n          <Button\n            onClick={() => setOpenPriv(!openPriv)}\n            variant=\"outlined\"\n            color={\"primary\"}\n            data-testid=\"privateKey\"\n            className={classes.button}\n          >\n            {openPriv ? \"Hide\" : \"In Browser\"}\n          </Button>\n          <Button\n            onClick={() => dlKey(encKeys.privateKeyArmored, \"private_key\")}\n            variant=\"outlined\"\n            color={\"primary\"}\n            className={classes.button}\n          >\n            Download\n          </Button>\n\n          {openPriv && (\n            <Display val={encKeys.privateKeyArmored} id=\"privateKey\" />\n          )}\n        </Box>\n        <Typography color=\"secondary\" variant=\"h6\" gutterBottom>\n          Public Key\n        </Typography>\n\n        <Box pb={2}>\n          <p>The public key is public. You could share it with anyone.</p>\n          <p>\n            The public key encrypts files that only your private key can\n            decrypt.\n          </p>\n        </Box>\n        <Box mb={2}>\n          <Button\n            onClick={() => setOpenPub(!openPub)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            data-testid=\"publicKey\"\n            className={classes.button}\n          >\n            {openPub ? \"Hide\" : \"In Browser\"}\n          </Button>\n          <Button\n            onClick={() => dlKey(encKeys.publicKeyArmored, \"public_key\")}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            Download\n          </Button>\n\n          {openPub && <Display val={encKeys.publicKeyArmored} id=\"publicKey\" />}\n        </Box>\n      </Box>\n    </div>\n  );\n};\nexport default Result;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PassPhrase from \"../shared/Passphrase\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport Result from \"./Result\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  IconButton,\n  Tooltip,\n  Grid,\n} from \"@material-ui/core\";\nimport { generateKey } from \"openpgp\";\nimport { useCommonStyles } from \"../commonStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    maxWidth: \"350px\",\n    [theme.breakpoints.down(600 + theme.spacing(3) * 2)]: {\n      maxWidth: \"225px\",\n    },\n  },\n  formField: {\n    width: \"100%\",\n  },\n  pwInput: {\n    maxWidth: \"225px\",\n  },\n  dropSelect: {\n    maxWidth: \"150px\",\n    [theme.breakpoints.down(600 + theme.spacing(3) * 2)]: {\n      maxWidth: \"170px\",\n    },\n  },\n  formControl: { width: \"100%\" },\n\n  main: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst KeyGen = () => {\n  const classes = useStyles();\n  const commonClasses = useCommonStyles();\n  const [key, setKey] = useState(undefined);\n  const [bits, setBits] = useState(4096);\n  const [keyFields, setKeyFields] = useState({ name: \"\", email: \"\", pw: \"\" });\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({\n    name: false,\n    emailNull: false,\n    emailFormat: false,\n    emMessage: false,\n  });\n\n  const handleCreate = async (passKey) => {\n    setLoading(true);\n    const key = await generateKey({\n      userIds: [{ name: keyFields.name, email: keyFields.email }],\n      rsaBits: bits, // RSA key size\n      passphrase: passKey,\n    });\n    setKey(key);\n    setLoading(false);\n  };\n\n  let handleEmailValid = (email) => {\n    // eslint-disable-next-line\n    let re =\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (re.test(email)) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleName = (e) => {\n    setKeyFields({ ...keyFields, name: e.target.value });\n  };\n  const handleEmail = (e) => {\n    setKeyFields({ ...keyFields, email: e.target.value });\n  };\n\n  const handleFormSubmit = () => {\n    let nameNull,\n      emailNull,\n      validFormat,\n      emMessage = false;\n    if (keyFields.name === \"\") {\n      nameNull = true;\n    }\n    if (keyFields.email === \"\") {\n      emailNull = true;\n      emMessage = \"Email Required!\";\n    } else {\n      validFormat = handleEmailValid(keyFields.email);\n      emMessage = \"Invalid Email Format!\";\n    }\n    setErrors({\n      ...errors,\n      name: nameNull,\n      emailNull: emailNull,\n      emailFormat: validFormat,\n      emMessage: emMessage,\n    });\n    if (validFormat || emailNull || nameNull) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleConfirm = (key) => {\n    handleCreate(key);\n  };\n\n  return (\n    <Box p={2}>\n      {typeof key == \"undefined\" ? (\n        <>\n          <form onSubmit={(e) => handleFormSubmit(e)}>\n            <div className={classes.main}>\n              <Typography\n                variant=\"h1\"\n                gutterBottom\n                className={commonClasses.heading}\n              >\n                RSA Key Generation\n              </Typography>\n              <Box pb={4} pt={2}>\n                Creating Keys is simple. Just fill out this form.\n                <br />\n                No worries if you don't want to use your name or email address.\n                <br />\n                Just make one up!\n                <br />\n                <br />\n                <b>Just don't lose you Private Key and Passphrase!</b>\n              </Box>\n              <div className={classes.form}>\n                <Box pb={4}>\n                  <TextField\n                    required\n                    disabled={loading}\n                    className={classes.formField}\n                    id=\"outlined-required\"\n                    label=\"Name\"\n                    onChange={handleName}\n                    error={errors.name}\n                    helperText={errors.name && \"Text Required!\"}\n                    variant=\"outlined\"\n                  />\n                </Box>\n\n                <Box pb={4}>\n                  {\" \"}\n                  <TextField\n                    required\n                    disabled={loading}\n                    className={classes.formField}\n                    id=\"outlined-disabled\"\n                    label=\"email\"\n                    onChange={handleEmail}\n                    error={errors.emailNull || errors.emailFormat}\n                    helperText={\n                      (errors.emailNull || errors.emailFormat) &&\n                      errors.emMessage\n                    }\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box>\n                  <Grid container spacing={2}>\n                    <Grid item container className={classes.dropSelect}>\n                      <FormControl\n                        disabled={loading}\n                        variant=\"outlined\"\n                        className={classes.formControl}\n                        error={errors.fileTypeErr ? true : false}\n                      >\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\n                          RSA Key Size\n                        </InputLabel>\n                        <Select\n                          required\n                          className={classes.pwInput}\n                          labelId=\"demo-simple-select-outlined-label\"\n                          id=\"demo-simple-select-outlined\"\n                          value={bits}\n                          onChange={(e) => setBits(e.target.value)}\n                          label=\"Text FIle Type\"\n                        >\n                          <MenuItem value={5120}>5120</MenuItem>\n                          <MenuItem value={4096}>4096</MenuItem>\n                          <MenuItem value={3072}>3072</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item>\n                      <div>\n                        <Tooltip\n                          title={`This controls key length. The larger the value, the stronger the encryption. The default is pretty good.`}\n                        >\n                          <IconButton\n                            disableFocusRipple={true}\n                            disableRipple={true}\n                          >\n                            <HelpIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </Box>\n                <Box mt={3}>\n                  <PassPhrase\n                    class={classes.pwInput}\n                    loading={loading}\n                    mainButtonText={\"Generate\"}\n                    modalButtonText={\"Submit\"}\n                    handleSubmit={handleFormSubmit}\n                    handleConfirm={handleConfirm}\n                  />\n                </Box>\n              </div>\n            </div>\n          </form>\n        </>\n      ) : (\n        <Result encKeys={key} />\n      )}\n    </Box>\n  );\n};\n\nexport default KeyGen;\n"],"sourceRoot":""}