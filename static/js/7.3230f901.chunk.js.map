{"version":3,"sources":["components/shared/BrowserResult.js","components/utils/config.js","components/shared/InFile.js","components/shared/EncTypeTab.js","components/shared/Passphrase.js","components/shared/KeyInput.js","components/encrypt/EncResult.js","components/encrypt/EncryptForm.js","components/encrypt/Encrypt.js"],"names":["useStyles","makeStyles","theme","result","maxHeight","maxWidth","overflowY","button","margin","copy","textAlign","Display","props","classes","useState","open","vertical","horizontal","openSnack","setOpenSnack","inputId","id","keyIn","val","className","title","aria-label","onClick","anchorOrigin","onClose","message","key","snackLocation","hidden","visibility","width","buttonProgress","position","top","left","marginTop","marginLeft","helpText","spacing","InFile","hiddenId","inId","selectedFile","fileMetaData","name","handleDelete","document","getElementById","click","variant","color","disabled","uploading","size","label","type","onChange","readFile","formByteInputError","error","errMessage","AntTabs","withStyles","root","borderBottom","indicator","backgroundColor","Tabs","AntTab","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","fontFamily","join","opacity","fontWeightMedium","selected","disableRipple","flexGrow","padding","demo1","palette","background","paper","demo2","EncTypeTab","React","value","setValue","event","newValue","handleType","pwInput","pw","main","breakpoints","up","PassPhraseConfirm","confirmPassPhrase","setConfirmPassPhrase","status","confirmError","handleClose","aria-labelledby","required","autoFocus","e","target","fullWidth","handleConfirm","buttonText","PassPhrase","passPhrase","passPhraseState","passPhraseMissingError","errors","setErrors","setOpen","score","resp","strength","setStrength","strengthResp","0","1","2","3","4","container","item","helperText","zxcvbn","class","length","pt","loading","preventDefault","err","handleSubmit","mainButtonText","modalButtonText","KeyInput","inputType","privateKey","encrypt","resetErr","resetAlert","alert","setAlert","byteKey","setByteKey","inputTypeSelect","setInputTypeSelect","formTextInputError","setFormTextInputError","setFormByteInputError","setFileMetaData","passPhraseError","setPassPhraseError","setPassPhrase","setUploading","reason","textBox","multiline","rows","buttonLabel","undefined","console","log","file","files","reader","FileReader","readAsText","onloadend","replace","onerror","a","handlePrivateKey","outkey","handlePublicKey","handleKeyEncrypt","readArmored","rsaKey","keys","keyError","decrypt","output","pubKeyDecError","privKeyPassError","show","autoHideDuration","severity","gutterBottom","component","row","defaultValue","control","labelPlacement","mt","height","Result","openEnc","setOpenEnc","armorTxt","disableCopy","Box","Typography","mb","pr","Button","textVal","element","createElement","Blob","href","URL","createObjectURL","download","split","remove","outputHandler","reset","paddingLeft","paddingRight","paddingBottom","EncryptForm","textInput","textInputState","uploadedFile","setUploadedFile","TextField","readAsArrayBuffer","Uint8Array","handleFormSubmit","handleEncrypt","encryptionKey","aes","rsa","encType","ext","onSubmit","pb","FormControl","RadioGroup","FormControlLabel","Radio","loader","keyErr","display","header","Encrypt","success","setSuccess","setLoader","setEncType","setArmorTxt","byteEncrypt","pubKey","binInd","inputMessage","pgpMessage","fromBinary","fromText","encIn","armor","publicKeys","passwords","packets","write","encError","encSuccess","form","Snackbar","Alert","p","heading"],"mappings":"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","file":"static/js/7.3230f901.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport { Tooltip, Paper, Snackbar, IconButton } from \"@material-ui/core\";\nimport { copy } from \"../utils/utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  result: {\n    maxHeight: \"400px\",\n    maxWidth: \"400px\",\n    overflowY: \"scroll\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n  copy: {\n    textAlign: \"right\",\n    maxWidth: \"400px\",\n  },\n}));\n\nconst Display = (props) => {\n  const classes = useStyles();\n  const [openSnack, setOpenSnack] = useState({\n    open: false,\n    vertical: \"bottom\",\n    horizontal: \"left\",\n  });\n\n  const { vertical, horizontal, open } = openSnack;\n\n  let inputId = props.id;\n  let keyIn = props.val;\n\n  const handleCopy = () => {\n    setOpenSnack({ ...openSnack, open: true });\n    copy(inputId);\n  };\n\n  const handleClose = () => {\n    setOpenSnack({ ...openSnack, open: false });\n  };\n  return (\n    <>\n      <div className={classes.copy}>\n        <Tooltip title=\"Copy\">\n          <IconButton aria-label=\"Copy\" onClick={handleCopy}>\n            <FileCopyIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <Paper className={classes.result}>\n        <pre id={inputId}>{keyIn}</pre>\n      </Paper>\n\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        onClose={handleClose}\n        message=\"Copied to clipboard\"\n        key={vertical + horizontal}\n      />\n    </>\n  );\n};\n\nexport default Display;\n","export const snackLocation = { vertical: \"bottom\", horizontal: \"left\" };\n\nexport const menuOptions = {\n  1: \"ENCRYPT\",\n  2: \"DECRYPT\",\n  3: \"KEY CREATION\",\n  4: \"ABOUT\",\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteOutlineSharpIcon from \"@material-ui/icons/DeleteOutlineSharp\";\nimport {\n  Button,\n  Box,\n  IconButton,\n  FormLabel,\n  FormHelperText,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  hidden: {\n    visibility: \"hidden\",\n    width: \"1px\",\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  helpText: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst InFile = (props) => {\n  const classes = useStyles();\n\n  let hiddenId = props.inId;\n\n  const selectedFile = props.fileMetaData && (\n    <div>\n      <FormLabel>{`Selected: ${props.fileMetaData.name}`}</FormLabel>\n      <IconButton onClick={props.handleDelete}>\n        <DeleteOutlineSharpIcon />\n      </IconButton>\n    </div>\n  );\n  return (\n    <Box>\n      <Button\n        onClick={() => document.getElementById(hiddenId).click()}\n        variant=\"outlined\"\n        color=\"secondary\"\n        disabled={props.uploading}\n      >\n        {props.uploading && (\n          <CircularProgress\n            size={24}\n            color=\"secondary\"\n            className={classes.buttonProgress}\n          />\n        )}\n        {props.label}\n      </Button>\n\n      <input\n        id={hiddenId}\n        type=\"file\"\n        className={classes.hidden}\n        onChange={props.readFile}\n      />\n      {selectedFile}\n      {props.formByteInputError && (\n        <div className={classes.helpText}>\n          <FormHelperText error={true}>\n            {props.errMessage ? props.errMessage : \"File Required\"}\n          </FormHelperText>\n        </div>\n      )}\n    </Box>\n  );\n};\n\nexport default InFile;\n","import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, Typography } from \"@material-ui/core\";\n\nconst AntTabs = withStyles({\n  root: {\n    borderBottom: \"1px solid #e8e8e8\",\n  },\n  indicator: {\n    backgroundColor: \"#1de9b6\",\n  },\n})(Tabs);\n\nconst AntTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    minWidth: 72,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing(4),\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:hover\": {\n      color: \"#4aedc4\",\n      opacity: 1,\n    },\n    \"&$selected\": {\n      color: \"#1de9b6\",\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    \"&:focus\": {\n      color: \"#1de9b6\",\n    },\n  },\n  selected: {},\n}))((props) => <Tab disableRipple {...props} />);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  padding: {\n    padding: theme.spacing(2),\n  },\n  demo1: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  demo2: {\n    backgroundColor: \"#2e1534\",\n  },\n}));\n\nexport default function EncTypeTab(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.handleType(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\n        <AntTab label=\"Passphrase (Symmetric)\" />\n        <AntTab label=\"Key Pair (Asymmetric)\" />\n      </AntTabs>\n      <Typography className={classes.padding} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport zxcvbn from \"zxcvbn\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  Box,\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  pwInput: {\n    width: \"225px\",\n  },\n  pw: {\n    color: \"#777fa7\",\n    marginTop: \"18px\",\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  main: {\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      padding: theme.spacing(2),\n    },\n  },\n}));\n\nconst PassPhraseConfirm = (props) => {\n  const [confirmPassPhrase, setConfirmPassPhrase] = useState();\n\n  const passPhraseConfirmBuffer = (e) => {\n    setConfirmPassPhrase(e.target.value);\n  };\n\n  const status = props.open;\n\n  const label = props.confirmError\n    ? \"Please Try Again\"\n    : \"Passphrase Confirmation\";\n\n  return (\n    <div>\n      <Dialog\n        open={status}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Passphrase Confirmation\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please re enter your passphrase below:\n          </DialogContentText>\n          <TextField\n            required\n            autoFocus\n            error={props.confirmError}\n            onChange={passPhraseConfirmBuffer}\n            margin=\"dense\"\n            id=\"name\"\n            label={label}\n            type=\"password\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={() => props.handleConfirm(confirmPassPhrase)}\n            color=\"primary\"\n          >\n            {props.buttonText}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst PassPhrase = (props) => {\n  const classes = useStyles();\n\n  const [passPhrase, passPhraseState] = useState(\"\");\n  const [errors, setErrors] = useState({\n    confirmError: false,\n    passPhraseMissingError: false,\n  });\n  const [open, setOpen] = useState(false);\n  const [strength, setStrength] = useState({ score: null, resp: null });\n\n  let strengthResp = {\n    0: \"Very Bad 👎\",\n    1: \"Bad 👎\",\n    2: \"Weak 😐\",\n    3: \"Good 🙂\",\n    4: \"Strong 🔥🔥🔥\",\n  };\n\n  const handlePassPhrase = (e) => {\n    passPhraseState(e.target.value);\n    const result = zxcvbn(e.target.value);\n    setStrength({\n      score: result.score === 0 ? \"1\" : result.score,\n      resp: strengthResp[result.score],\n    });\n  };\n\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors({ confirmError: false, passPhraseMissingError: false });\n    const err = props.handleSubmit(e);\n\n    if (!passPhrase) {\n      setErrors({ ...errors, passPhraseMissingError: true });\n    }\n    if (!passPhrase || err) {\n      return;\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const handleConfirm = (confirmPassPhrase) => {\n    if (confirmPassPhrase === passPhrase) {\n      setOpen(false);\n      props.handleConfirm(passPhrase);\n    } else {\n      setErrors({ ...errors, confirmError: true });\n    }\n  };\n\n  return (\n    <div className={classes.main}>\n      <Box>\n        <Grid container spacing={1}>\n          <Grid item>\n            <TextField\n              required\n              helperText={\n                errors.passPhraseMissingError && \"PassPhrase Required!\"\n              }\n              onChange={handlePassPhrase}\n              className={props.class}\n              error={errors.passPhraseMissingError}\n              id=\"pw-in\"\n              type=\"password\"\n              label={\"Passphrase\"}\n              variant=\"outlined\"\n            />\n          </Grid>\n          {passPhrase.length > 0 && (\n            <Grid className={classes.pw} item>\n              {strength.resp}\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n\n      <Box pt={3}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color={\"primary\"}\n          disabled={props.loading}\n          onClick={handleSubmit}\n        >\n          {props.mainButtonText}\n          {props.loading && (\n            <CircularProgress\n              size={24}\n              color=\"primary\"\n              className={classes.buttonProgress}\n            />\n          )}\n        </Button>\n      </Box>\n\n      <PassPhraseConfirm\n        open={open}\n        buttonText={props.modalButtonText}\n        handleClose={() => setOpen(false)}\n        handleConfirm={handleConfirm}\n        confirmError={errors.confirmError}\n      />\n    </div>\n  );\n};\n\nexport default PassPhrase;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { snackLocation } from \"../utils/config\";\nimport InFile from \"./InFile\";\nimport { resetAlert, keyError, privKeyPassError, pubKeyDecError } from \"../utils/utils\";\nimport { key } from \"openpgp\";\nimport {\n  TextField,\n  Button,\n  Box,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Snackbar,\n  CircularProgress,\n  Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n\n  main: {\n    backgroundColor: \"#FAFAFA\",\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      padding: theme.spacing(2),\n    },\n  },\n}));\n\nconst KeyInput = (props) => {\n  const classes = useStyles();\n\n  let privateKey = props.privateKey;\n  let encrypt = props.encrypt;\n\n  let resetErr = { err: false, key: false, message: false };\n\n  const [alert, setAlert] = useState(resetAlert);\n  const [byteKey, setByteKey] = useState();\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"byte\");\n  const [formTextInputError, setFormTextInputError] = useState(resetErr);\n  const [formByteInputError, setFormByteInputError] = useState(resetErr);\n  const [fileMetaData, setFileMetaData] = useState();\n  const [passPhraseError, setPassPhraseError] = useState(false);\n  const [passPhrase, setPassPhrase] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const handlePassPhrase = (e) => setPassPhrase(e.target.value);\n\n  const handleDelete = () => {\n    setByteKey(undefined);\n    setFileMetaData(undefined);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlert(resetAlert);\n  };\n\n  const handleTextInput = (e) => {\n    setByteKey(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setInputTypeSelect(e.target.value);\n  };\n\n  const readKey = (e) => {\n    console.log(\"FIRE\");\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    setUploading(true);\n\n    reader.readAsText(file);\n\n    reader.onloadend = () => {\n      setFileMetaData({ name: file.name, type: file.type.replace(\"/\", \"_\") });\n      setByteKey(reader.result);\n      setUploading(false);\n    };\n    reader.onerror = () => {\n      setByteKey(undefined);\n      setUploading(false);\n    };\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={formTextInputError.err && formTextInputError.message}\n        className={classes.textBox}\n        fullWidth={true}\n        error={formTextInputError.err}\n        id=\"outlined-multiline-static-rsa-key\"\n        label={\"RSA Key Input\"}\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        formByteInputError={formByteInputError.err}\n        errMessage={formByteInputError.err.message}\n        fileMetaData={fileMetaData}\n        label=\"Key Browse\"\n        buttonLabel={\"key browse\"}\n        handleDelete={handleDelete}\n        readFile={readKey}\n        uploading={uploading}\n        inId=\"keyIn\"\n      />\n    );\n  }\n\n  const removeErrors = () => {\n    setAlert(resetAlert);\n    setFormTextInputError(resetErr);\n    setFormByteInputError(resetErr);\n    setPassPhraseError(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    removeErrors();\n\n    let err = false,\n      outkey;\n\n    if (passPhrase === \"\") {\n      setPassPhraseError(true);\n      err = true;\n    }\n\n    if (!byteKey || byteKey === \"\") {\n      if (inputTypeSelect === \"text\") {\n        setFormTextInputError({\n          ...formTextInputError,\n          err: true,\n          message: \"Key Text Required\",\n        });\n      } else {\n        setFormByteInputError({\n          ...formByteInputError,\n          err: true,\n          message: \"Key File Required\",\n        });\n      }\n      err = true;\n    } else {\n      privateKey\n        ? ({ key: outkey, error: err } = await handlePrivateKey(\n            byteKey,\n            passPhrase\n          ))\n        : ({ key: outkey, error: err } = await handlePublicKey(byteKey));\n    }\n\n    //continue to snag error in other input\n\n    props.handleKeyEncrypt(outkey, err);\n  };\n\n  const handlePublicKey = async (byteKey) => {\n    let rsaKey = (await key.readArmored(byteKey)).keys[0];\n    if (!rsaKey) {\n      setAlert(keyError);\n      return { key: undefined, error: true };\n    } else {\n      return { key: rsaKey, error: false };\n    }\n  };\n\n  const handlePrivateKey = async (byteKey, passPhrase) => {\n    let output;\n    try {\n      const {\n        keys: [privateKey],\n      } = await key.readArmored(byteKey);\n      await privateKey.decrypt(passPhrase);\n      output = [privateKey];\n      return { key: output, error: false };\n    } catch (e) {\n      e.message === \"Nothing to decrypt in a public key\" &&\n        setAlert(pubKeyDecError);\n      e.message === \"Incorrect key passphrase\" && setAlert(privKeyPassError);\n      e.message === \"privateKey is undefined\" && setAlert(keyError);\n      e.message === \"Cannot read property 'decrypt' of undefined\" &&\n        setAlert(keyError);\n      return { key: undefined, error: true };\n    }\n  };\n\n  return (\n    <div className={classes.main}>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n      <Box>\n        <Box>\n          <Typography color=\"textPrimary\" variant=\"h6\" gutterBottom>\n            <b>Key Input</b>\n          </Typography>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              value={inputTypeSelect}\n              defaultValue=\"top\"\n              onChange={handleInputType}\n            >\n              <FormControlLabel\n                value=\"byte\"\n                control={<Radio color=\"secondary\" />}\n                label=\"Import from file\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                value=\"text\"\n                control={<Radio color=\"primary\" />}\n                label=\"Paste in text\"\n                labelPlacement=\"end\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box>\n          <FormLabel component=\"legend\"></FormLabel>\n          <Box mt={2}>{inputType}</Box>\n        </Box>\n        {privateKey && (\n          <Box pt={3}>\n            <TextField\n              required\n              helperText={passPhraseError && \"Passphrase Required!\"}\n              onChange={handlePassPhrase}\n              error={passPhraseError}\n              id=\"pw-in private key\"\n              type=\"password\"\n              label={\"Private Key Passphrase\"}\n              variant=\"outlined\"\n            />\n          </Box>\n        )}\n        <Box pt={3}>\n          <Button\n            variant=\"contained\"\n            color={\"primary\"}\n            onClick={handleSubmit}\n            disabled={props.loading}\n          >\n            {encrypt ? \"Encrypt\" : \"Decrypt\"}\n            {props.loading && (\n              <CircularProgress\n                size={24}\n                color=\"primary\"\n                className={classes.buttonProgress}\n              />\n            )}\n          </Button>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default KeyInput;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Box, Typography } from \"@material-ui/core\";\nimport Display from \"../shared/BrowserResult\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    padding: theme.spacing(2),\n\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      padding: theme.spacing(2),\n    },\n  },\n\n  result: {\n    maxHeight: \"100px\",\n    maxWidth: \"350px\",\n    overflowY: \"scroll\",\n  },\n  paper: {\n    height: \"100px\",\n    width: \"350px\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n}));\n\nconst Result = (props) => {\n  const classes = useStyles();\n\n  const [openEnc, setOpenEnc] = useState(false);\n\n  let armorTxt = props.armorTxt;\n  let disableCopy = armorTxt.armorTxt.length > 10000;\n\n  const outputHandler = (textVal) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([textVal.armorTxt], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = `${element.href.split(\"/\")[3]}.asc`;\n    element.click();\n    element.remove();\n  };\n\n  return (\n    <div className={classes.main}>\n      <Box pt={2}>\n        <Typography variant=\"h6\" gutterBottom>\n          Encrypted Data:\n        </Typography>\n        <Box>\n          Here are your results.\n          <br />\n          We recommend downloading the file.\n          <br />\n          Don't worry, if you prefer working with text yourself, we provide that\n          too. <br />\n          <br />\n        </Box>\n        <Box mb={2} pr={4}>\n          <Button\n            disabled={disableCopy}\n            onClick={() => setOpenEnc(!openEnc)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            {!openEnc ? \"In Browser\" : \"Hide\"}\n          </Button>\n\n          <Button\n            onClick={() => outputHandler(armorTxt)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            Download\n          </Button>\n          {openEnc && <Display val={armorTxt.armorTxt} id=\"encryptedResult\" />}\n        </Box>\n        <Box>\n          <Button\n            onClick={props.reset}\n            variant=\"contained\"\n            className={classes.button}\n            color={\"primary\"}\n          >\n            {\" \"}\n            New Encryption{\" \"}\n          </Button>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default Result;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PassPhrase from \"../shared/Passphrase\";\nimport KeyInput from \"../shared/KeyInput\";\nimport InFile from \"../shared/InFile\";\nimport {\n  TextField,\n  Box,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  textBox: {\n    maxWidth: \"700px\",\n  },\n  main: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n}));\n\nconst EncryptForm = (props) => {\n  const classes = useStyles();\n\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"byte\");\n  const [textInput, textInputState] = useState(\"\");\n  const [formTextInputError, setFormTextInputError] = useState(false);\n  const [formByteInputError, setFormByteInputError] = useState(false);\n  const [uploadedFile, setUploadedFile] = useState();\n  const [fileMetaData, setFileMetaData] = useState();\n  const [uploading, setUploading] = useState(false);\n\n  const readFile = (e) => {\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    setUploading(true);\n\n    reader.onloadend = () => {\n      setUploadedFile(new Uint8Array(reader.result));\n      setFileMetaData({ name: file.name, type: file.type.replace(\"/\", \"_\") });\n      setUploading(false);\n    };\n\n    reader.onerror = () => {\n      setUploading(false);\n      setUploadedFile(undefined);\n    };\n  };\n\n  const handleDelete = () => {\n    setUploadedFile(undefined);\n    setFileMetaData(undefined);\n  };\n\n  const handleTextInput = (e) => {\n    textInputState(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setFormTextInputError(false);\n    setFormByteInputError(false);\n    setInputTypeSelect(e.target.value);\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={formTextInputError && \"Please Select a file object!\"}\n        className={classes.textBox}\n        fullWidth={true}\n        error={formTextInputError}\n        id=\"outlined-multiline-static\"\n        label=\"Text to Encrypt\"\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        fileMetaData={fileMetaData}\n        formByteInputError={formByteInputError}\n        readFile={readFile}\n        handleDelete={handleDelete}\n        label=\"Browse for File\"\n        uploading={uploading}\n        inId=\"encIn\"\n      />\n    );\n  }\n\n  const handleFormSubmit = () => {\n    setFormTextInputError(false);\n    setFormByteInputError(false);\n\n    if (inputTypeSelect === \"text\" && (!textInput || textInput === \"\")) {\n      setFormTextInputError(true);\n      return true;\n    } else if (inputTypeSelect === \"byte\" && !uploadedFile) {\n      setFormByteInputError(true);\n      return true;\n    }\n    return false;\n  };\n\n  const handleKeyEncrypt = (byteKey, keyErr) => {\n    let errCheck = handleFormSubmit();\n    if (!errCheck && !keyErr) {\n      handleEncrypt(byteKey);\n    }\n  };\n  const handleEncrypt = (encryptionKey) => {\n    let aes, rsa;\n    props.encType === 0 ? (aes = encryptionKey) : (rsa = encryptionKey);\n\n    if (inputTypeSelect === \"text\") {\n      props.handleEncrypt(aes, rsa, textInput, \"txt\", false);\n    } else {\n      props.handleEncrypt(aes, rsa, uploadedFile, fileMetaData.ext, true);\n    }\n  };\n\n  return (\n    <form onSubmit={(e) => handleFormSubmit(e)}>\n      <div className={classes.main}>\n        <Box pt={2} pb={2}>\n          To Encrypt, simply fill out this form.\n          <br />\n          {props.encType === 0 && <b>Just don't lose your Passphrase!</b>}\n        </Box>\n        <Box mb={2}>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              value={inputTypeSelect}\n              defaultValue=\"top\"\n              onChange={handleInputType}\n            >\n              <FormControlLabel\n                value=\"byte\"\n                control={<Radio color=\"secondary\" />}\n                label=\"Load my secret\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                value=\"text\"\n                control={<Radio color=\"primary\" />}\n                label=\"Type my secret\"\n                labelPlacement=\"end\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n\n        <Box>{inputType}</Box>\n      </div>\n      {props.encType === 0 ? (\n        <PassPhrase\n          mainButtonText={\"Encrypt\"}\n          modalButtonText={\"Submit\"}\n          handleSubmit={handleFormSubmit}\n          handleConfirm={handleEncrypt}\n          loading={props.loader}\n        />\n      ) : (\n        <KeyInput\n          loading={props.loader}\n          privateKey={false}\n          encrypt={true}\n          handleKeyEncrypt={handleKeyEncrypt}\n        />\n      )}\n    </form>\n  );\n};\n\nexport default EncryptForm;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Result from \"./EncResult\";\nimport EncTypeTab from \"../shared/EncTypeTab\";\nimport EncryptForm from \"./EncryptForm\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { resetAlert, encSuccess, encError } from \"../utils/utils\";\nimport { snackLocation } from \"../utils/config\";\nimport { Box, Typography, Snackbar } from \"@material-ui/core\";\nimport { message as pgpMessage, encrypt } from \"openpgp\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  header: {\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n    },\n  },\n}));\n\nconst Encrypt = () => {\n  const classes = useStyles();\n  const [success, setSuccess] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [encType, setEncType] = useState(0);\n  const [alert, setAlert] = useState(resetAlert);\n  const [armorTxt, setArmorTxt] = useState();\n\n  const byteEncrypt = async (passPhrase, pubKey, uploadedFile, ext, binInd) => {\n    try {\n      setLoader(true);\n\n      let inputMessage = binInd\n        ? pgpMessage.fromBinary(uploadedFile)\n        : pgpMessage.fromText(uploadedFile);\n\n      let encIn = {\n        message: inputMessage,\n        armor: false,\n      };\n\n      pubKey ? (encIn.publicKeys = pubKey) : (encIn.passwords = [passPhrase]);\n\n      const { message } = await encrypt(encIn);\n      binInd && message.packets.write();\n\n      setArmorTxt({ armorTxt: message.armor(), ext: ext });\n      outputHandler();\n    } catch (e) {\n      setAlert(encError);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlert(resetAlert);\n  };\n\n  const outputHandler = () => {\n    setAlert(encSuccess);\n    setSuccess(true);\n    setLoader(false);\n  };\n\n  const reset = () => {\n    setSuccess(false);\n    setAlert(resetAlert);\n  };\n\n  const handleEncType = (type) => {\n    setEncType(type);\n  };\n\n  let form = (\n    <EncryptForm\n      handleEncrypt={byteEncrypt}\n      encType={encType}\n      loader={loader}\n    />\n  );\n\n  return (\n    <div>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n      <Box p={2}>\n        <div className={classes.header}>\n          {!success && <EncTypeTab handleType={handleEncType} />}\n\n          <Typography className={classes.heading} variant=\"h5\" gutterBottom>\n            {encType === 0 ? (\n              <b>Passphrase Encryption</b>\n            ) : (\n              <b>Key Encryption</b>\n            )}\n          </Typography>\n        </div>\n        {success ? <Result reset={reset} armorTxt={armorTxt} /> : form}\n      </Box>\n    </div>\n  );\n};\n\nexport default Encrypt;\n"],"sourceRoot":""}