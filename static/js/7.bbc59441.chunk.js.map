{"version":3,"sources":["components/shared/BrowserResult.js","components/utils/config.js","components/shared/InFile.js","components/shared/EncTypeTab.js","components/shared/Passphrase.js","components/shared/KeyInput.js","components/encrypt/EncResult.js","components/encrypt/EncryptForm.js","components/encrypt/Encrypt.js"],"names":["useStyles","makeStyles","theme","result","padding","button","margin","copy","textAlign","Display","props","classes","commonClasses","useCommonStyles","useState","open","vertical","horizontal","openSnack","setOpenSnack","inputId","id","keyIn","val","className","title","aria-label","onClick","pre","anchorOrigin","onClose","message","key","snackLocation","hidden","visibility","width","buttonProgress","position","top","left","marginTop","marginLeft","helpText","spacing","InFile","hiddenId","inId","selectedFile","fileMetaData","name","handleDelete","document","getElementById","click","variant","color","disabled","uploading","size","label","type","onChange","readFile","formByteInputError","error","errMessage","AntTabs","withStyles","root","borderBottom","Tabs","AntTab","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","fontFamily","join","opacity","fontWeightMedium","selected","disableRipple","flexGrow","demo1","backgroundColor","palette","background","paper","demo2","EncTypeTab","React","value","setValue","event","newValue","handleType","pwInput","maxWidth","pw","PassPhraseConfirm","confirmPassPhrase","setConfirmPassPhrase","status","confirmError","handleClose","aria-labelledby","required","autoFocus","e","target","fullWidth","handleConfirm","buttonText","PassPhrase","passPhrase","passPhraseState","passPhraseMissingError","errors","setErrors","setOpen","score","resp","strength","setStrength","strengthResp","0","1","2","3","4","container","item","loading","helperText","zxcvbn","class","length","pt","preventDefault","err","handleSubmit","mainButtonText","modalButtonText","main","breakpoints","up","KeyInput","inputType","privateKey","encrypt","resetErr","resetAlert","alert","setAlert","byteKey","setByteKey","inputTypeSelect","setInputTypeSelect","formTextInputError","setFormTextInputError","setFormByteInputError","setFileMetaData","passPhraseError","setPassPhraseError","setPassPhrase","setUploading","reason","textBox","multiline","rows","buttonLabel","undefined","console","log","file","files","reader","FileReader","readAsText","onloadend","replace","onerror","a","handlePrivateKey","outkey","handlePublicKey","handleKeyEncrypt","readArmored","rsaKey","keys","keyError","decrypt","output","pubKeyDecError","privKeyPassError","show","autoHideDuration","severity","subHeadingBold","gutterBottom","component","row","defaultValue","control","labelPlacement","mt","maxHeight","overflowY","height","Result","openEnc","setOpenEnc","armorTxt","disableCopy","Box","Typography","resultH3","m","mb","pr","Button","textVal","element","createElement","Blob","href","URL","createObjectURL","download","split","remove","outputHandler","reset","EncryptForm","textInput","textInputState","uploadedFile","setUploadedFile","TextField","readAsArrayBuffer","Uint8Array","handleFormSubmit","handleEncrypt","encryptionKey","aes","rsa","encType","ext","onSubmit","pb","FormControl","RadioGroup","FormControlLabel","Radio","loader","keyErr","Encrypt","success","setSuccess","setLoader","setEncType","setArmorTxt","byteEncrypt","pubKey","binInd","inputMessage","pgpMessage","fromBinary","fromText","encIn","armor","publicKeys","passwords","packets","write","encError","_","encSuccess","form","Snackbar","Alert","p","header","heading","subHeading"],"mappings":"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","file":"static/js/7.bbc59441.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport { Tooltip, Paper, Snackbar, IconButton } from \"@material-ui/core\";\nimport { copy } from \"../utils/utils\";\nimport { useCommonStyles } from \"../commonStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n  result: {\n    padding: \"10px\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n  copy: {\n    textAlign: \"right\",\n  },\n}));\n\nconst Display = (props) => {\n  const classes = useStyles();\n  const commonClasses = useCommonStyles();\n  const [openSnack, setOpenSnack] = useState({\n    open: false,\n    vertical: \"bottom\",\n    horizontal: \"left\",\n  });\n\n  const { vertical, horizontal, open } = openSnack;\n\n  let inputId = props.id;\n  let keyIn = props.val;\n\n  const handleCopy = () => {\n    setOpenSnack({ ...openSnack, open: true });\n    copy(inputId);\n  };\n\n  const handleClose = () => {\n    setOpenSnack({ ...openSnack, open: false });\n  };\n  return (\n    <>\n      <div className={classes.copy}>\n        <Tooltip title=\"Copy\">\n          <IconButton aria-label=\"Copy\" onClick={handleCopy}>\n            <FileCopyIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <Paper className={classes.result}>\n        <pre className={commonClasses.pre} id={inputId}>\n          {keyIn}\n        </pre>\n      </Paper>\n\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        onClose={handleClose}\n        message=\"Copied to clipboard\"\n        key={vertical + horizontal}\n      />\n    </>\n  );\n};\n\nexport default Display;\n","export const snackLocation = { vertical: \"bottom\", horizontal: \"left\" };\n\nexport const menuOptions = {\n  1: \"ENCRYPT\",\n  2: \"DECRYPT\",\n  3: \"KEY CREATION\",\n  4: \"ABOUT\",\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteOutlineSharpIcon from \"@material-ui/icons/DeleteOutlineSharp\";\nimport {\n  Button,\n  Box,\n  IconButton,\n  FormLabel,\n  FormHelperText,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  hidden: {\n    visibility: \"hidden\",\n    width: \"1px\",\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  helpText: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst InFile = (props) => {\n  const classes = useStyles();\n\n  let hiddenId = props.inId;\n\n  const selectedFile = props.fileMetaData && (\n    <div>\n      <FormLabel>{`Selected: ${props.fileMetaData.name}`}</FormLabel>\n      <IconButton onClick={props.handleDelete}>\n        <DeleteOutlineSharpIcon />\n      </IconButton>\n    </div>\n  );\n  return (\n    <Box>\n      <Button\n        onClick={() => document.getElementById(hiddenId).click()}\n        variant=\"outlined\"\n        color=\"secondary\"\n        disabled={props.uploading}\n      >\n        {props.uploading && (\n          <CircularProgress\n            size={24}\n            color=\"secondary\"\n            className={classes.buttonProgress}\n          />\n        )}\n        {props.label}\n      </Button>\n\n      <input\n        id={hiddenId}\n        type=\"file\"\n        className={classes.hidden}\n        onChange={props.readFile}\n      />\n      {selectedFile}\n      {props.formByteInputError && (\n        <div className={classes.helpText}>\n          <FormHelperText error={true}>\n            {props.errMessage ? props.errMessage : \"File Required\"}\n          </FormHelperText>\n        </div>\n      )}\n    </Box>\n  );\n};\n\nexport default InFile;\n","import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, Typography } from \"@material-ui/core\";\n\nconst AntTabs = withStyles({\n  root: {\n    borderBottom: \"1px solid #e8e8e8\",\n  },\n})(Tabs);\n\nconst AntTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    minWidth: 72,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing(4),\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:hover\": {\n      opacity: 1,\n    },\n    \"&$selected\": {\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n  },\n  selected: {},\n}))((props) => <Tab disableRipple {...props} />);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  padding: {\n    padding: theme.spacing(2),\n  },\n  demo1: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  demo2: {\n    backgroundColor: \"#2e1534\",\n  },\n}));\n\nexport default function EncTypeTab(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.handleType(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\n        <AntTab label=\"Passphrase\" />\n        <AntTab label=\"Key Pair\" />\n      </AntTabs>\n      <Typography className={classes.padding} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport zxcvbn from \"zxcvbn\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  Box,\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  pwInput: {\n    maxWidth: \"225px\",\n  },\n  pw: {\n    color: \"#777fa7\",\n    marginTop: \"18px\",\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst PassPhraseConfirm = (props) => {\n  const [confirmPassPhrase, setConfirmPassPhrase] = useState();\n\n  const passPhraseConfirmBuffer = (e) => {\n    setConfirmPassPhrase(e.target.value);\n  };\n\n  const status = props.open;\n\n  const label = props.confirmError\n    ? \"Please Try Again\"\n    : \"Passphrase Confirmation\";\n\n  return (\n    <div>\n      <Dialog\n        open={status}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Passphrase Confirmation\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please re enter your passphrase below:\n          </DialogContentText>\n          <TextField\n            required\n            autoFocus\n            error={props.confirmError}\n            onChange={passPhraseConfirmBuffer}\n            margin=\"dense\"\n            id=\"name\"\n            label={label}\n            type=\"password\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={() => props.handleConfirm(confirmPassPhrase)}\n            color=\"primary\"\n          >\n            {props.buttonText}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst PassPhrase = (props) => {\n  const classes = useStyles();\n\n  const [passPhrase, passPhraseState] = useState(\"\");\n  const [errors, setErrors] = useState({\n    confirmError: false,\n    passPhraseMissingError: false,\n  });\n  const [open, setOpen] = useState(false);\n  const [strength, setStrength] = useState({ score: null, resp: null });\n\n  let strengthResp = {\n    0: \"Very Bad 👎\",\n    1: \"Bad 👎\",\n    2: \"Weak 😐\",\n    3: \"Good 🙂\",\n    4: \"Strong 🔥🔥🔥\",\n  };\n\n  const handlePassPhrase = (e) => {\n    passPhraseState(e.target.value);\n    const result = zxcvbn(e.target.value);\n    setStrength({\n      score: result.score === 0 ? \"1\" : result.score,\n      resp: strengthResp[result.score],\n    });\n  };\n\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors({ confirmError: false, passPhraseMissingError: false });\n    const err = props.handleSubmit(e);\n\n    if (!passPhrase) {\n      setErrors({ ...errors, passPhraseMissingError: true });\n    }\n    if (!passPhrase || err) {\n      return;\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const handleConfirm = (confirmPassPhrase) => {\n    if (confirmPassPhrase === passPhrase) {\n      setOpen(false);\n      props.handleConfirm(passPhrase);\n    } else {\n      setErrors({ ...errors, confirmError: true });\n    }\n  };\n\n  return (\n    <>\n      <Box>\n        <Grid container spacing={1}>\n          <Grid item>\n            <TextField\n              required\n              disabled={props.loading}\n              helperText={\n                errors.passPhraseMissingError && \"PassPhrase Required!\"\n              }\n              onChange={handlePassPhrase}\n              className={props.class}\n              error={errors.passPhraseMissingError}\n              id=\"pw-in\"\n              type=\"password\"\n              label={\"Passphrase\"}\n              variant=\"outlined\"\n            />\n          </Grid>\n          {passPhrase.length > 0 && (\n            <Grid className={classes.pw} item>\n              {strength.resp}\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n\n      <Box pt={3}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color={\"primary\"}\n          disabled={props.loading}\n          onClick={handleSubmit}\n        >\n          {props.mainButtonText}\n          {props.loading && (\n            <CircularProgress\n              size={24}\n              color=\"primary\"\n              className={classes.buttonProgress}\n            />\n          )}\n        </Button>\n      </Box>\n\n      <PassPhraseConfirm\n        open={open}\n        buttonText={props.modalButtonText}\n        handleClose={() => setOpen(false)}\n        handleConfirm={handleConfirm}\n        confirmError={errors.confirmError}\n      />\n    </>\n  );\n};\n\nexport default PassPhrase;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { snackLocation } from \"../utils/config\";\nimport InFile from \"./InFile\";\nimport { useCommonStyles } from \"../commonStyles\";\nimport {\n  resetAlert,\n  keyError,\n  privKeyPassError,\n  pubKeyDecError,\n} from \"../utils/utils\";\nimport { key } from \"openpgp\";\nimport {\n  TextField,\n  Button,\n  Box,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Snackbar,\n  CircularProgress,\n  Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n\n  main: {\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      padding: theme.spacing(2),\n    },\n  },\n}));\n\nconst KeyInput = (props) => {\n  const classes = useStyles();\n  const commonClasses = useCommonStyles();\n  let privateKey = props.privateKey;\n  let encrypt = props.encrypt;\n\n  let resetErr = { err: false, key: false, message: false };\n\n  const [alert, setAlert] = useState(resetAlert);\n  const [byteKey, setByteKey] = useState();\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"byte\");\n  const [formTextInputError, setFormTextInputError] = useState(resetErr);\n  const [formByteInputError, setFormByteInputError] = useState(resetErr);\n  const [fileMetaData, setFileMetaData] = useState();\n  const [passPhraseError, setPassPhraseError] = useState(false);\n  const [passPhrase, setPassPhrase] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const handlePassPhrase = (e) => setPassPhrase(e.target.value);\n\n  const handleDelete = () => {\n    setByteKey(undefined);\n    setFileMetaData(undefined);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlert(resetAlert);\n  };\n\n  const handleTextInput = (e) => {\n    setByteKey(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setInputTypeSelect(e.target.value);\n  };\n\n  const readKey = (e) => {\n    console.log(\"FIRE\");\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    setUploading(true);\n\n    reader.readAsText(file);\n\n    reader.onloadend = () => {\n      setFileMetaData({ name: file.name, type: file.type.replace(\"/\", \"_\") });\n      setByteKey(reader.result);\n      setUploading(false);\n    };\n    reader.onerror = () => {\n      setByteKey(undefined);\n      setUploading(false);\n    };\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={formTextInputError.err && formTextInputError.message}\n        className={classes.textBox}\n        fullWidth={true}\n        error={formTextInputError.err}\n        id=\"outlined-multiline-static-rsa-key\"\n        label={\"RSA Key Input\"}\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        formByteInputError={formByteInputError.err}\n        errMessage={formByteInputError.err.message}\n        fileMetaData={fileMetaData}\n        label=\"Key Browse\"\n        buttonLabel={\"key browse\"}\n        handleDelete={handleDelete}\n        readFile={readKey}\n        uploading={uploading}\n        inId=\"keyIn\"\n      />\n    );\n  }\n\n  const removeErrors = () => {\n    setAlert(resetAlert);\n    setFormTextInputError(resetErr);\n    setFormByteInputError(resetErr);\n    setPassPhraseError(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    removeErrors();\n\n    let err = false,\n      outkey;\n\n    if (passPhrase === \"\") {\n      setPassPhraseError(true);\n      err = true;\n    }\n\n    if (!byteKey || byteKey === \"\") {\n      if (inputTypeSelect === \"text\") {\n        setFormTextInputError({\n          ...formTextInputError,\n          err: true,\n          message: \"Key Text Required\",\n        });\n      } else {\n        setFormByteInputError({\n          ...formByteInputError,\n          err: true,\n          message: \"Key File Required\",\n        });\n      }\n      err = true;\n    } else {\n      privateKey\n        ? ({ key: outkey, error: err } = await handlePrivateKey(\n            byteKey,\n            passPhrase\n          ))\n        : ({ key: outkey, error: err } = await handlePublicKey(byteKey));\n    }\n\n    //continue to snag error in other input\n\n    props.handleKeyEncrypt(outkey, err);\n  };\n\n  const handlePublicKey = async (byteKey) => {\n    let rsaKey = (await key.readArmored(byteKey)).keys[0];\n    if (!rsaKey) {\n      setAlert(keyError);\n      return { key: undefined, error: true };\n    } else {\n      return { key: rsaKey, error: false };\n    }\n  };\n\n  const handlePrivateKey = async (byteKey, passPhrase) => {\n    let output;\n    try {\n      const {\n        keys: [privateKey],\n      } = await key.readArmored(byteKey);\n      await privateKey.decrypt(passPhrase);\n      output = [privateKey];\n      return { key: output, error: false };\n    } catch (e) {\n      e.message === \"Nothing to decrypt in a public key\" &&\n        setAlert(pubKeyDecError);\n      e.message === \"Incorrect key passphrase\" && setAlert(privKeyPassError);\n      e.message === \"privateKey is undefined\" && setAlert(keyError);\n      e.message === \"Cannot read property 'decrypt' of undefined\" &&\n        setAlert(keyError);\n      return { key: undefined, error: true };\n    }\n  };\n\n  return (\n    <div className={classes.main}>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n      <Box>\n        <Box>\n          <Typography\n            variant=\"h2\"\n            className={commonClasses.subHeadingBold}\n            gutterBottom\n          >\n            <b>Key Input</b>\n          </Typography>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              value={inputTypeSelect}\n              defaultValue=\"top\"\n              onChange={handleInputType}\n            >\n              <FormControlLabel\n                value=\"byte\"\n                control={<Radio color=\"secondary\" />}\n                label=\"Import from file\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                value=\"text\"\n                control={<Radio color=\"primary\" />}\n                label=\"Paste in text\"\n                labelPlacement=\"end\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box>\n          <FormLabel component=\"legend\"></FormLabel>\n          <Box mt={2}>{inputType}</Box>\n        </Box>\n        {privateKey && (\n          <Box pt={3}>\n            <TextField\n              required\n              helperText={passPhraseError && \"Passphrase Required!\"}\n              onChange={handlePassPhrase}\n              error={passPhraseError}\n              id=\"pw-in private key\"\n              type=\"password\"\n              label={\"Private Key Passphrase\"}\n              variant=\"outlined\"\n            />\n          </Box>\n        )}\n        <Box pt={3}>\n          <Button\n            variant=\"contained\"\n            color={\"primary\"}\n            onClick={handleSubmit}\n            disabled={props.loading}\n          >\n            {encrypt ? \"Encrypt\" : \"Decrypt\"}\n            {props.loading && (\n              <CircularProgress\n                size={24}\n                color=\"primary\"\n                className={classes.buttonProgress}\n              />\n            )}\n          </Button>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default KeyInput;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Box, Typography } from \"@material-ui/core\";\nimport Display from \"../shared/BrowserResult\";\nimport { useCommonStyles } from \"../commonStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    padding: theme.spacing(2),\n\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      padding: theme.spacing(2),\n    },\n  },\n\n  result: {\n    maxHeight: \"100px\",\n    maxWidth: \"350px\",\n    overflowY: \"scroll\",\n  },\n  paper: {\n    height: \"100px\",\n    width: \"350px\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n}));\n\nconst Result = (props) => {\n  const classes = useStyles();\n  const commonClasses = useCommonStyles();\n\n  const [openEnc, setOpenEnc] = useState(false);\n\n  let armorTxt = props.armorTxt;\n  let disableCopy = armorTxt.armorTxt.length > 10000;\n\n  const outputHandler = (textVal) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([textVal.armorTxt], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = `${element.href.split(\"/\")[3]}.asc`;\n    element.click();\n    element.remove();\n  };\n\n  return (\n    <div className={classes.main}>\n      <Box pt={2}>\n        <Typography\n          className={commonClasses.resultH3}\n          variant=\"h3\"\n          gutterBottom\n        >\n          Encrypted Data:\n        </Typography>\n        <Box m={1}>\n          Your encrypted data is below\n          <br />\n          It is recommended to download the file.\n          <br />\n        </Box>\n        <Box mb={2} mt={5} pr={4}>\n          <Button\n            disabled={disableCopy}\n            onClick={() => setOpenEnc(!openEnc)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            {!openEnc ? \"In Browser\" : \"Hide\"}\n          </Button>\n\n          <Button\n            onClick={() => outputHandler(armorTxt)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            Download\n          </Button>\n          {openEnc && <Display val={armorTxt.armorTxt} id=\"encryptedResult\" />}\n        </Box>\n        <Box>\n          <Button\n            onClick={props.reset}\n            variant=\"contained\"\n            className={classes.button}\n            color={\"primary\"}\n          >\n            {\" \"}\n            New Encryption{\" \"}\n          </Button>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default Result;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PassPhrase from \"../shared/Passphrase\";\nimport KeyInput from \"../shared/KeyInput\";\nimport InFile from \"../shared/InFile\";\nimport {\n  TextField,\n  Box,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  textBox: {\n    maxWidth: \"700px\",\n  },\n  main: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst EncryptForm = (props) => {\n  const classes = useStyles();\n\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"byte\");\n  const [textInput, textInputState] = useState(\"\");\n  const [formTextInputError, setFormTextInputError] = useState(false);\n  const [formByteInputError, setFormByteInputError] = useState(false);\n  const [uploadedFile, setUploadedFile] = useState();\n  const [fileMetaData, setFileMetaData] = useState();\n  const [uploading, setUploading] = useState(false);\n\n  const readFile = (e) => {\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    setUploading(true);\n\n    reader.onloadend = () => {\n      setUploadedFile(new Uint8Array(reader.result));\n      setFileMetaData({ name: file.name, type: file.type.replace(\"/\", \"_\") });\n      setUploading(false);\n    };\n\n    reader.onerror = () => {\n      setUploading(false);\n      setUploadedFile(undefined);\n    };\n  };\n\n  const handleDelete = () => {\n    setUploadedFile(undefined);\n    setFileMetaData(undefined);\n  };\n\n  const handleTextInput = (e) => {\n    textInputState(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setFormTextInputError(false);\n    setFormByteInputError(false);\n    setInputTypeSelect(e.target.value);\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={formTextInputError && \"Please Select a file object!\"}\n        className={classes.textBox}\n        fullWidth={true}\n        error={formTextInputError}\n        id=\"outlined-multiline-static\"\n        label=\"Text to Encrypt\"\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        fileMetaData={fileMetaData}\n        formByteInputError={formByteInputError}\n        readFile={readFile}\n        handleDelete={handleDelete}\n        label=\"Browse for File\"\n        uploading={uploading}\n        inId=\"encIn\"\n      />\n    );\n  }\n\n  const handleFormSubmit = () => {\n    setFormTextInputError(false);\n    setFormByteInputError(false);\n\n    if (inputTypeSelect === \"text\" && (!textInput || textInput === \"\")) {\n      setFormTextInputError(true);\n      return true;\n    } else if (inputTypeSelect === \"byte\" && !uploadedFile) {\n      setFormByteInputError(true);\n      return true;\n    }\n    return false;\n  };\n\n  const handleKeyEncrypt = (byteKey, keyErr) => {\n    let errCheck = handleFormSubmit();\n    if (!errCheck && !keyErr) {\n      handleEncrypt(byteKey);\n    }\n  };\n  const handleEncrypt = (encryptionKey) => {\n    let aes, rsa;\n    props.encType === 0 ? (aes = encryptionKey) : (rsa = encryptionKey);\n\n    if (inputTypeSelect === \"text\") {\n      props.handleEncrypt(aes, rsa, textInput, \"txt\", false);\n    } else {\n      props.handleEncrypt(aes, rsa, uploadedFile, fileMetaData.ext, true);\n    }\n  };\n\n  return (\n    <form onSubmit={(e) => handleFormSubmit(e)}>\n      <div className={classes.main}>\n        <Box pt={2} pb={2}>\n          To Encrypt, simply fill out this form.\n          <br />\n          {props.encType === 0 ? (\n            <b>Just don't lose your Passphrase!</b>\n          ) : (\n            <br />\n          )}\n        </Box>\n        <Box mb={2}>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              value={inputTypeSelect}\n              defaultValue=\"top\"\n              onChange={handleInputType}\n            >\n              <FormControlLabel\n                value=\"byte\"\n                control={<Radio color=\"secondary\" />}\n                label=\"Load my secret\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                value=\"text\"\n                control={<Radio color=\"primary\" />}\n                label=\"Type my secret\"\n                labelPlacement=\"end\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n\n        <Box mb={2}>{inputType}</Box>\n        {props.encType === 0 && (\n          <Box pt={2}>\n            <PassPhrase\n              mainButtonText={\"Encrypt\"}\n              modalButtonText={\"Submit\"}\n              handleSubmit={handleFormSubmit}\n              handleConfirm={handleEncrypt}\n              loading={props.loader}\n            />\n          </Box>\n        )}\n      </div>\n      {props.encType === 1 && (\n        <KeyInput\n          loading={props.loader}\n          privateKey={false}\n          encrypt={true}\n          handleKeyEncrypt={handleKeyEncrypt}\n        />\n      )}\n    </form>\n  );\n};\n\nexport default EncryptForm;\n","import React, { useState } from \"react\";\nimport Result from \"./EncResult\";\nimport EncTypeTab from \"../shared/EncTypeTab\";\nimport EncryptForm from \"./EncryptForm\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { resetAlert, encSuccess, encError } from \"../utils/utils\";\nimport { snackLocation } from \"../utils/config\";\nimport { Box, Typography, Snackbar } from \"@material-ui/core\";\nimport { message as pgpMessage, encrypt } from \"openpgp\";\nimport { useCommonStyles } from \"../commonStyles\";\n\nconst Encrypt = () => {\n  const commonClasses = useCommonStyles();\n\n  const [success, setSuccess] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [encType, setEncType] = useState(0);\n  const [alert, setAlert] = useState(resetAlert);\n  const [armorTxt, setArmorTxt] = useState();\n\n  const byteEncrypt = async (passPhrase, pubKey, uploadedFile, ext, binInd) => {\n    try {\n      setLoader(true);\n\n      let inputMessage = binInd\n        ? pgpMessage.fromBinary(uploadedFile)\n        : pgpMessage.fromText(uploadedFile);\n\n      let encIn = {\n        message: inputMessage,\n        armor: false,\n      };\n\n      pubKey ? (encIn.publicKeys = pubKey) : (encIn.passwords = [passPhrase]);\n\n      const { message } = await encrypt(encIn);\n      binInd && message.packets.write();\n\n      setArmorTxt({ armorTxt: message.armor(), ext: ext });\n      outputHandler();\n    } catch (e) {\n      setAlert(encError);\n    }\n  };\n\n  const handleClose = (_, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlert(resetAlert);\n  };\n\n  const outputHandler = () => {\n    setAlert(encSuccess);\n    setSuccess(true);\n    setLoader(false);\n  };\n\n  const reset = () => {\n    setSuccess(false);\n    setAlert(resetAlert);\n  };\n\n  const handleEncType = (type) => {\n    setEncType(type);\n  };\n\n  const form = (\n    <EncryptForm\n      handleEncrypt={byteEncrypt}\n      encType={encType}\n      loader={loader}\n    />\n  );\n\n  return (\n    <>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n      <Box p={2}>\n        <div className={commonClasses.header}>\n          {!success && <EncTypeTab handleType={handleEncType} />}\n          <Typography\n            className={commonClasses.heading}\n            variant=\"h1\"\n            gutterBottom\n          >\n            {encType === 0 ? \"Passphrase Based Encryption\" : \"Key Encryption\"}\n          </Typography>\n          <Typography\n            className={commonClasses.subHeading}\n            variant=\"h2\"\n            gutterBottom\n          >\n            {encType === 0 ? \"Symmetric\" : \"Asymmetric\"}\n          </Typography>\n        </div>\n        {success ? <Result reset={reset} armorTxt={armorTxt} /> : form}\n      </Box>\n    </>\n  );\n};\n\nexport default Encrypt;\n"],"sourceRoot":""}