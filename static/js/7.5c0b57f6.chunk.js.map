{"version":3,"sources":["components/shared/BrowserResult.js","components/utils/config.js","components/shared/InFile.js","components/shared/EncTypeTab.js","components/shared/Passphrase.js","components/shared/KeyInput.js","components/encrypt/EncResult.js","components/encrypt/EncryptForm.js","components/encrypt/Encrypt.js"],"names":["useStyles","makeStyles","theme","result","maxHeight","maxWidth","overflowY","button","margin","copy","textAlign","Display","props","classes","useState","open","vertical","horizontal","openSnack","setOpenSnack","inputId","id","keyIn","val","className","title","aria-label","onClick","anchorOrigin","onClose","message","snackLocation","hidden","visibility","width","buttonProgress","position","top","left","marginTop","marginLeft","helpText","spacing","InFile","hiddenId","inId","selectedFile","fileMetaData","name","handleDelete","document","getElementById","click","variant","color","disabled","uploading","size","label","type","onChange","readFile","formByteInputError","error","errMessage","AntTabs","withStyles","root","borderBottom","indicator","backgroundColor","Tabs","AntTab","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","fontFamily","join","opacity","fontWeightMedium","selected","disableRipple","flexGrow","padding","demo1","palette","background","paper","demo2","EncTypeTab","React","value","setValue","event","newValue","handleType","pwInput","pw","PassPhraseConfirm","confirmPassPhrase","setConfirmPassPhrase","status","confirmError","handleClose","aria-labelledby","required","autoFocus","e","target","fullWidth","handleConfirm","buttonText","PassPhrase","passPhrase","passPhraseState","passPhraseMissingError","errors","setErrors","setOpen","score","resp","strength","setStrength","strengthResp","0","1","2","3","4","container","item","helperText","zxcvbn","class","length","pt","loading","preventDefault","err","handleSubmit","mainButtonText","modalButtonText","main","borderRadius","breakpoints","up","KeyInput","inputType","privateKey","encrypt","resetErr","key","resetAlert","alert","setAlert","byteKey","setByteKey","inputTypeSelect","setInputTypeSelect","formTextInputError","setFormTextInputError","setFormByteInputError","setFileMetaData","passPhraseError","setPassPhraseError","setPassPhrase","setUploading","reason","textBox","multiline","rows","buttonLabel","undefined","console","log","file","files","reader","FileReader","readAsText","onloadend","replace","onerror","a","handlePrivateKey","outkey","handlePublicKey","handleKeyEncrypt","readArmored","rsaKey","keys","keyError","decrypt","output","pubKeyDecError","privKeyPassError","show","autoHideDuration","severity","gutterBottom","component","row","defaultValue","control","labelPlacement","mt","height","Result","openEnc","setOpenEnc","armorTxt","disableCopy","Box","Typography","mb","pr","Button","textVal","element","createElement","Blob","href","URL","createObjectURL","download","split","remove","outputHandler","reset","paddingLeft","paddingRight","paddingBottom","EncryptForm","textInput","textInputState","uploadedFile","setUploadedFile","TextField","readAsArrayBuffer","Uint8Array","handleFormSubmit","handleEncrypt","encryptionKey","aes","rsa","encType","ext","onSubmit","pb","FormControl","RadioGroup","FormControlLabel","Radio","loader","keyErr","display","header","Encrypt","success","setSuccess","setLoader","setEncType","setArmorTxt","byteEncrypt","pubKey","binInd","inputMessage","pgpMessage","fromBinary","fromText","encIn","armor","publicKeys","passwords","packets","write","encError","encSuccess","form","Snackbar","Alert","p","heading"],"mappings":"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","file":"static/js/7.5c0b57f6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport { Tooltip, Paper, Snackbar, IconButton } from \"@material-ui/core\";\nimport { copy } from \"../utils/utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  result: {\n    maxHeight: \"400px\",\n    maxWidth: \"400px\",\n    overflowY: \"scroll\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n  copy: {\n    textAlign: \"right\",\n    maxWidth: \"400px\",\n  },\n}));\n\nconst Display = (props) => {\n  const classes = useStyles();\n  const [openSnack, setOpenSnack] = useState({\n    open: false,\n    vertical: \"bottom\",\n    horizontal: \"left\",\n  });\n\n  const { vertical, horizontal, open } = openSnack;\n\n  let inputId = props.id;\n  let keyIn = props.val;\n\n  const handleCopy = () => {\n    setOpenSnack({ ...openSnack, open: true });\n    copy(inputId);\n  };\n\n  const handleClose = () => {\n    setOpenSnack({ ...openSnack, open: false });\n  };\n  return (\n    <>\n      <div className={classes.copy}>\n        <Tooltip title=\"Copy\">\n          <IconButton aria-label=\"Copy\" onClick={handleCopy}>\n            <FileCopyIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <Paper className={classes.result}>\n        <pre id={inputId}>{keyIn}</pre>\n      </Paper>\n\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={open}\n        onClose={handleClose}\n        message=\"Copied to clipboard\"\n        key={vertical + horizontal}\n      />\n    </>\n  );\n};\n\nexport default Display;\n","export const snackLocation = { vertical: \"bottom\", horizontal: \"left\" };\n\nexport const menuOptions = {\n  1: \"ENCRYPT\",\n  2: \"DECRYPT\",\n  3: \"KEY CREATION\",\n  4: \"ABOUT\",\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteOutlineSharpIcon from \"@material-ui/icons/DeleteOutlineSharp\";\nimport {\n  Button,\n  Box,\n  IconButton,\n  FormLabel,\n  FormHelperText,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  hidden: {\n    visibility: \"hidden\",\n    width: \"1px\",\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  helpText: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst InFile = (props) => {\n  const classes = useStyles();\n\n  let hiddenId = props.inId;\n\n  const selectedFile = props.fileMetaData && (\n    <div>\n      <FormLabel>{`Selected: ${props.fileMetaData.name}`}</FormLabel>\n      <IconButton onClick={props.handleDelete}>\n        <DeleteOutlineSharpIcon />\n      </IconButton>\n    </div>\n  );\n  return (\n    <Box>\n      <Button\n        onClick={() => document.getElementById(hiddenId).click()}\n        variant=\"outlined\"\n        color=\"secondary\"\n        disabled={props.uploading}\n      >\n        {props.uploading && (\n          <CircularProgress\n            size={24}\n            color=\"secondary\"\n            className={classes.buttonProgress}\n          />\n        )}\n        {props.label}\n      </Button>\n\n      <input\n        id={hiddenId}\n        type=\"file\"\n        className={classes.hidden}\n        onChange={props.readFile}\n      />\n      {selectedFile}\n      {props.formByteInputError && (\n        <div className={classes.helpText}>\n          <FormHelperText error={true}>\n            {props.errMessage ? props.errMessage : \"File Required\"}\n          </FormHelperText>\n        </div>\n      )}\n    </Box>\n  );\n};\n\nexport default InFile;\n","import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, Typography } from \"@material-ui/core\";\n\nconst AntTabs = withStyles({\n  root: {\n    borderBottom: \"1px solid #e8e8e8\",\n  },\n  indicator: {\n    backgroundColor: \"#1de9b6\",\n  },\n})(Tabs);\n\nconst AntTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    minWidth: 72,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing(4),\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:hover\": {\n      color: \"#4aedc4\",\n      opacity: 1,\n    },\n    \"&$selected\": {\n      color: \"#1de9b6\",\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    \"&:focus\": {\n      color: \"#1de9b6\",\n    },\n  },\n  selected: {},\n}))((props) => <Tab disableRipple {...props} />);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  padding: {\n    padding: theme.spacing(2),\n  },\n  demo1: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  demo2: {\n    backgroundColor: \"#2e1534\",\n  },\n}));\n\nexport default function EncTypeTab(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.handleType(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\n        <AntTab label=\"Passphrase (Symmetric)\" />\n        <AntTab label=\"Key Pair (Asymmetric)\" />\n      </AntTabs>\n      <Typography className={classes.padding} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport zxcvbn from \"zxcvbn\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  Box,\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  pwInput: {\n    width: \"225px\",\n  },\n  pw: {\n    color: \"#777fa7\",\n    marginTop: \"18px\",\n  },\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst PassPhraseConfirm = (props) => {\n  const [confirmPassPhrase, setConfirmPassPhrase] = useState();\n\n  const passPhraseConfirmBuffer = (e) => {\n    setConfirmPassPhrase(e.target.value);\n  };\n\n  const status = props.open;\n\n  const label = props.confirmError\n    ? \"Please Try Again\"\n    : \"Passphrase Confirmation\";\n\n  return (\n    <div>\n      <Dialog\n        open={status}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Passphrase Confirmation\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please re enter your passphrase below:\n          </DialogContentText>\n          <TextField\n            required\n            autoFocus\n            error={props.confirmError}\n            onChange={passPhraseConfirmBuffer}\n            margin=\"dense\"\n            id=\"name\"\n            label={label}\n            type=\"password\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={() => props.handleConfirm(confirmPassPhrase)}\n            color=\"primary\"\n          >\n            {props.buttonText}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst PassPhrase = (props) => {\n  const classes = useStyles();\n\n  const [passPhrase, passPhraseState] = useState(\"\");\n  const [errors, setErrors] = useState({\n    confirmError: false,\n    passPhraseMissingError: false,\n  });\n  const [open, setOpen] = useState(false);\n  const [strength, setStrength] = useState({ score: null, resp: null });\n\n  let strengthResp = {\n    0: \"Very Bad 👎\",\n    1: \"Bad 👎\",\n    2: \"Weak 😐\",\n    3: \"Good 🙂\",\n    4: \"Strong 🔥🔥🔥\",\n  };\n\n  const handlePassPhrase = (e) => {\n    passPhraseState(e.target.value);\n    const result = zxcvbn(e.target.value);\n    setStrength({\n      score: result.score === 0 ? \"1\" : result.score,\n      resp: strengthResp[result.score],\n    });\n  };\n\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors({ confirmError: false, passPhraseMissingError: false });\n    const err = props.handleSubmit(e);\n\n    if (!passPhrase) {\n      setErrors({ ...errors, passPhraseMissingError: true });\n    }\n    if (!passPhrase || err) {\n      return;\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const handleConfirm = (confirmPassPhrase) => {\n    if (confirmPassPhrase === passPhrase) {\n      setOpen(false);\n      props.handleConfirm(passPhrase);\n    } else {\n      setErrors({ ...errors, confirmError: true });\n    }\n  };\n\n  return (\n    <>\n      <Box>\n        <Grid container spacing={1}>\n          <Grid item>\n            <TextField\n              required\n              helperText={\n                errors.passPhraseMissingError && \"PassPhrase Required!\"\n              }\n              onChange={handlePassPhrase}\n              className={props.class}\n              error={errors.passPhraseMissingError}\n              id=\"pw-in\"\n              type=\"password\"\n              label={\"Passphrase\"}\n              variant=\"outlined\"\n            />\n          </Grid>\n          {passPhrase.length > 0 && (\n            <Grid className={classes.pw} item>\n              {strength.resp}\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n\n      <Box pt={3}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color={\"primary\"}\n          disabled={props.loading}\n          onClick={handleSubmit}\n        >\n          {props.mainButtonText}\n          {props.loading && (\n            <CircularProgress\n              size={24}\n              color=\"primary\"\n              className={classes.buttonProgress}\n            />\n          )}\n        </Button>\n      </Box>\n\n      <PassPhraseConfirm\n        open={open}\n        buttonText={props.modalButtonText}\n        handleClose={() => setOpen(false)}\n        handleConfirm={handleConfirm}\n        confirmError={errors.confirmError}\n      />\n    </>\n  );\n};\n\nexport default PassPhrase;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { snackLocation } from \"../utils/config\";\nimport InFile from \"./InFile\";\nimport { resetAlert, keyError, privKeyPassError, pubKeyDecError } from \"../utils/utils\";\nimport { key } from \"openpgp\";\nimport {\n  TextField,\n  Button,\n  Box,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Snackbar,\n  CircularProgress,\n  Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n\n  main: {\n    backgroundColor: \"#FAFAFA\",\n    borderRadius:'4px',\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      padding: theme.spacing(2),\n    },\n  },\n}));\n\nconst KeyInput = (props) => {\n  const classes = useStyles();\n\n  let privateKey = props.privateKey;\n  let encrypt = props.encrypt;\n\n  let resetErr = { err: false, key: false, message: false };\n\n  const [alert, setAlert] = useState(resetAlert);\n  const [byteKey, setByteKey] = useState();\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"byte\");\n  const [formTextInputError, setFormTextInputError] = useState(resetErr);\n  const [formByteInputError, setFormByteInputError] = useState(resetErr);\n  const [fileMetaData, setFileMetaData] = useState();\n  const [passPhraseError, setPassPhraseError] = useState(false);\n  const [passPhrase, setPassPhrase] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const handlePassPhrase = (e) => setPassPhrase(e.target.value);\n\n  const handleDelete = () => {\n    setByteKey(undefined);\n    setFileMetaData(undefined);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlert(resetAlert);\n  };\n\n  const handleTextInput = (e) => {\n    setByteKey(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setInputTypeSelect(e.target.value);\n  };\n\n  const readKey = (e) => {\n    console.log(\"FIRE\");\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    setUploading(true);\n\n    reader.readAsText(file);\n\n    reader.onloadend = () => {\n      setFileMetaData({ name: file.name, type: file.type.replace(\"/\", \"_\") });\n      setByteKey(reader.result);\n      setUploading(false);\n    };\n    reader.onerror = () => {\n      setByteKey(undefined);\n      setUploading(false);\n    };\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={formTextInputError.err && formTextInputError.message}\n        className={classes.textBox}\n        fullWidth={true}\n        error={formTextInputError.err}\n        id=\"outlined-multiline-static-rsa-key\"\n        label={\"RSA Key Input\"}\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        formByteInputError={formByteInputError.err}\n        errMessage={formByteInputError.err.message}\n        fileMetaData={fileMetaData}\n        label=\"Key Browse\"\n        buttonLabel={\"key browse\"}\n        handleDelete={handleDelete}\n        readFile={readKey}\n        uploading={uploading}\n        inId=\"keyIn\"\n      />\n    );\n  }\n\n  const removeErrors = () => {\n    setAlert(resetAlert);\n    setFormTextInputError(resetErr);\n    setFormByteInputError(resetErr);\n    setPassPhraseError(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    removeErrors();\n\n    let err = false,\n      outkey;\n\n    if (passPhrase === \"\") {\n      setPassPhraseError(true);\n      err = true;\n    }\n\n    if (!byteKey || byteKey === \"\") {\n      if (inputTypeSelect === \"text\") {\n        setFormTextInputError({\n          ...formTextInputError,\n          err: true,\n          message: \"Key Text Required\",\n        });\n      } else {\n        setFormByteInputError({\n          ...formByteInputError,\n          err: true,\n          message: \"Key File Required\",\n        });\n      }\n      err = true;\n    } else {\n      privateKey\n        ? ({ key: outkey, error: err } = await handlePrivateKey(\n            byteKey,\n            passPhrase\n          ))\n        : ({ key: outkey, error: err } = await handlePublicKey(byteKey));\n    }\n\n    //continue to snag error in other input\n\n    props.handleKeyEncrypt(outkey, err);\n  };\n\n  const handlePublicKey = async (byteKey) => {\n    let rsaKey = (await key.readArmored(byteKey)).keys[0];\n    if (!rsaKey) {\n      setAlert(keyError);\n      return { key: undefined, error: true };\n    } else {\n      return { key: rsaKey, error: false };\n    }\n  };\n\n  const handlePrivateKey = async (byteKey, passPhrase) => {\n    let output;\n    try {\n      const {\n        keys: [privateKey],\n      } = await key.readArmored(byteKey);\n      await privateKey.decrypt(passPhrase);\n      output = [privateKey];\n      return { key: output, error: false };\n    } catch (e) {\n      e.message === \"Nothing to decrypt in a public key\" &&\n        setAlert(pubKeyDecError);\n      e.message === \"Incorrect key passphrase\" && setAlert(privKeyPassError);\n      e.message === \"privateKey is undefined\" && setAlert(keyError);\n      e.message === \"Cannot read property 'decrypt' of undefined\" &&\n        setAlert(keyError);\n      return { key: undefined, error: true };\n    }\n  };\n\n  return (\n    <div className={classes.main}>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n      <Box>\n        <Box>\n          <Typography color=\"textPrimary\" variant=\"h6\" gutterBottom>\n            <b>Key Input</b>\n          </Typography>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              value={inputTypeSelect}\n              defaultValue=\"top\"\n              onChange={handleInputType}\n            >\n              <FormControlLabel\n                value=\"byte\"\n                control={<Radio color=\"secondary\" />}\n                label=\"Import from file\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                value=\"text\"\n                control={<Radio color=\"primary\" />}\n                label=\"Paste in text\"\n                labelPlacement=\"end\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box>\n          <FormLabel component=\"legend\"></FormLabel>\n          <Box mt={2}>{inputType}</Box>\n        </Box>\n        {privateKey && (\n          <Box pt={3}>\n            <TextField\n              required\n              helperText={passPhraseError && \"Passphrase Required!\"}\n              onChange={handlePassPhrase}\n              error={passPhraseError}\n              id=\"pw-in private key\"\n              type=\"password\"\n              label={\"Private Key Passphrase\"}\n              variant=\"outlined\"\n            />\n          </Box>\n        )}\n        <Box pt={3}>\n          <Button\n            variant=\"contained\"\n            color={\"primary\"}\n            onClick={handleSubmit}\n            disabled={props.loading}\n          >\n            {encrypt ? \"Encrypt\" : \"Decrypt\"}\n            {props.loading && (\n              <CircularProgress\n                size={24}\n                color=\"primary\"\n                className={classes.buttonProgress}\n              />\n            )}\n          </Button>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default KeyInput;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Box, Typography } from \"@material-ui/core\";\nimport Display from \"../shared/BrowserResult\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    padding: theme.spacing(2),\n\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      padding: theme.spacing(2),\n    },\n  },\n\n  result: {\n    maxHeight: \"100px\",\n    maxWidth: \"350px\",\n    overflowY: \"scroll\",\n  },\n  paper: {\n    height: \"100px\",\n    width: \"350px\",\n  },\n  button: {\n    margin: \"5px\",\n  },\n}));\n\nconst Result = (props) => {\n  const classes = useStyles();\n\n  const [openEnc, setOpenEnc] = useState(false);\n\n  let armorTxt = props.armorTxt;\n  let disableCopy = armorTxt.armorTxt.length > 10000;\n\n  const outputHandler = (textVal) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([textVal.armorTxt], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = `${element.href.split(\"/\")[3]}.asc`;\n    element.click();\n    element.remove();\n  };\n\n  return (\n    <div className={classes.main}>\n      <Box pt={2}>\n        <Typography variant=\"h6\" gutterBottom>\n          Encrypted Data:\n        </Typography>\n        <Box>\n          Here are your results.\n          <br />\n          We recommend downloading the file.\n          <br />\n          Don't worry, if you prefer working with text yourself, we provide that\n          too. <br />\n          <br />\n        </Box>\n        <Box mb={2} pr={4}>\n          <Button\n            disabled={disableCopy}\n            onClick={() => setOpenEnc(!openEnc)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            {!openEnc ? \"In Browser\" : \"Hide\"}\n          </Button>\n\n          <Button\n            onClick={() => outputHandler(armorTxt)}\n            variant=\"outlined\"\n            color={\"secondary\"}\n            className={classes.button}\n          >\n            Download\n          </Button>\n          {openEnc && <Display val={armorTxt.armorTxt} id=\"encryptedResult\" />}\n        </Box>\n        <Box>\n          <Button\n            onClick={props.reset}\n            variant=\"contained\"\n            className={classes.button}\n            color={\"primary\"}\n          >\n            {\" \"}\n            New Encryption{\" \"}\n          </Button>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default Result;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PassPhrase from \"../shared/Passphrase\";\nimport KeyInput from \"../shared/KeyInput\";\nimport InFile from \"../shared/InFile\";\nimport {\n  TextField,\n  Box,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  textBox: {\n    maxWidth: \"700px\",\n  },\n  main: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n}));\n\nconst EncryptForm = (props) => {\n  const classes = useStyles();\n\n  const [inputTypeSelect, setInputTypeSelect] = useState(\"byte\");\n  const [textInput, textInputState] = useState(\"\");\n  const [formTextInputError, setFormTextInputError] = useState(false);\n  const [formByteInputError, setFormByteInputError] = useState(false);\n  const [uploadedFile, setUploadedFile] = useState();\n  const [fileMetaData, setFileMetaData] = useState();\n  const [uploading, setUploading] = useState(false);\n\n  const readFile = (e) => {\n    var file = e.target.files[0];\n    if (!file) return;\n    var reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    setUploading(true);\n\n    reader.onloadend = () => {\n      setUploadedFile(new Uint8Array(reader.result));\n      setFileMetaData({ name: file.name, type: file.type.replace(\"/\", \"_\") });\n      setUploading(false);\n    };\n\n    reader.onerror = () => {\n      setUploading(false);\n      setUploadedFile(undefined);\n    };\n  };\n\n  const handleDelete = () => {\n    setUploadedFile(undefined);\n    setFileMetaData(undefined);\n  };\n\n  const handleTextInput = (e) => {\n    textInputState(e.target.value);\n  };\n\n  const handleInputType = (e) => {\n    setFormTextInputError(false);\n    setFormByteInputError(false);\n    setInputTypeSelect(e.target.value);\n  };\n\n  let inputType;\n  if (inputTypeSelect === \"text\") {\n    inputType = (\n      <TextField\n        helperText={formTextInputError && \"Please Select a file object!\"}\n        className={classes.textBox}\n        fullWidth={true}\n        error={formTextInputError}\n        id=\"outlined-multiline-static\"\n        label=\"Text to Encrypt\"\n        multiline\n        rows={10}\n        onChange={handleTextInput}\n        variant=\"outlined\"\n      />\n    );\n  } else {\n    inputType = (\n      <InFile\n        fileMetaData={fileMetaData}\n        formByteInputError={formByteInputError}\n        readFile={readFile}\n        handleDelete={handleDelete}\n        label=\"Browse for File\"\n        uploading={uploading}\n        inId=\"encIn\"\n      />\n    );\n  }\n\n  const handleFormSubmit = () => {\n    setFormTextInputError(false);\n    setFormByteInputError(false);\n\n    if (inputTypeSelect === \"text\" && (!textInput || textInput === \"\")) {\n      setFormTextInputError(true);\n      return true;\n    } else if (inputTypeSelect === \"byte\" && !uploadedFile) {\n      setFormByteInputError(true);\n      return true;\n    }\n    return false;\n  };\n\n  const handleKeyEncrypt = (byteKey, keyErr) => {\n    let errCheck = handleFormSubmit();\n    if (!errCheck && !keyErr) {\n      handleEncrypt(byteKey);\n    }\n  };\n  const handleEncrypt = (encryptionKey) => {\n    let aes, rsa;\n    props.encType === 0 ? (aes = encryptionKey) : (rsa = encryptionKey);\n\n    if (inputTypeSelect === \"text\") {\n      props.handleEncrypt(aes, rsa, textInput, \"txt\", false);\n    } else {\n      props.handleEncrypt(aes, rsa, uploadedFile, fileMetaData.ext, true);\n    }\n  };\n\n  return (\n    <form onSubmit={(e) => handleFormSubmit(e)}>\n      <div className={classes.main}>\n        <Box pt={2} pb={2}>\n          To Encrypt, simply fill out this form.\n          <br />\n          {props.encType === 0 && <b>Just don't lose your Passphrase!</b>}\n        </Box>\n        <Box mb={2}>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              value={inputTypeSelect}\n              defaultValue=\"top\"\n              onChange={handleInputType}\n            >\n              <FormControlLabel\n                value=\"byte\"\n                control={<Radio color=\"secondary\" />}\n                label=\"Load my secret\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                value=\"text\"\n                control={<Radio color=\"primary\" />}\n                label=\"Type my secret\"\n                labelPlacement=\"end\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n\n        <Box mb={props.encType === 0 ? 4 : 2}>{inputType}</Box>\n        {props.encType === 0 && (\n          <PassPhrase\n            mainButtonText={\"Encrypt\"}\n            modalButtonText={\"Submit\"}\n            handleSubmit={handleFormSubmit}\n            handleConfirm={handleEncrypt}\n            loading={props.loader}\n          />\n        )}\n      </div>\n      {props.encType === 1 && (\n        <KeyInput\n          loading={props.loader}\n          privateKey={false}\n          encrypt={true}\n          handleKeyEncrypt={handleKeyEncrypt}\n        />\n      )}\n    </form>\n  );\n};\n\nexport default EncryptForm;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Result from \"./EncResult\";\nimport EncTypeTab from \"../shared/EncTypeTab\";\nimport EncryptForm from \"./EncryptForm\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { resetAlert, encSuccess, encError } from \"../utils/utils\";\nimport { snackLocation } from \"../utils/config\";\nimport { Box, Typography, Snackbar } from \"@material-ui/core\";\nimport { message as pgpMessage, encrypt } from \"openpgp\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  header: {\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n    },\n  },\n}));\n\nconst Encrypt = () => {\n  const classes = useStyles();\n  const [success, setSuccess] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [encType, setEncType] = useState(0);\n  const [alert, setAlert] = useState(resetAlert);\n  const [armorTxt, setArmorTxt] = useState();\n\n  const byteEncrypt = async (passPhrase, pubKey, uploadedFile, ext, binInd) => {\n    try {\n      setLoader(true);\n\n      let inputMessage = binInd\n        ? pgpMessage.fromBinary(uploadedFile)\n        : pgpMessage.fromText(uploadedFile);\n\n      let encIn = {\n        message: inputMessage,\n        armor: false,\n      };\n\n      pubKey ? (encIn.publicKeys = pubKey) : (encIn.passwords = [passPhrase]);\n\n      const { message } = await encrypt(encIn);\n      binInd && message.packets.write();\n\n      setArmorTxt({ armorTxt: message.armor(), ext: ext });\n      outputHandler();\n    } catch (e) {\n      setAlert(encError);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlert(resetAlert);\n  };\n\n  const outputHandler = () => {\n    setAlert(encSuccess);\n    setSuccess(true);\n    setLoader(false);\n  };\n\n  const reset = () => {\n    setSuccess(false);\n    setAlert(resetAlert);\n  };\n\n  const handleEncType = (type) => {\n    setEncType(type);\n  };\n\n  let form = (\n    <EncryptForm\n      handleEncrypt={byteEncrypt}\n      encType={encType}\n      loader={loader}\n    />\n  );\n\n  return (\n    <div>\n      {alert.show && (\n        <Snackbar\n          anchorOrigin={snackLocation}\n          open={alert.show}\n          autoHideDuration={10000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity={alert.severity}>\n            {alert.message}\n          </Alert>\n        </Snackbar>\n      )}\n      <Box p={2}>\n        <div className={classes.header}>\n          {!success && <EncTypeTab handleType={handleEncType} />}\n\n          <Typography className={classes.heading} variant=\"h5\" gutterBottom>\n            {encType === 0 ? (\n              <b>Passphrase Encryption</b>\n            ) : (\n              <b>Key Encryption</b>\n            )}\n          </Typography>\n        </div>\n        {success ? <Result reset={reset} armorTxt={armorTxt} /> : form}\n      </Box>\n    </div>\n  );\n};\n\nexport default Encrypt;\n"],"sourceRoot":""}